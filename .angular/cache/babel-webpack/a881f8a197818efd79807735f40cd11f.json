{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport var ConfigHtmlEditorComponent = /*#__PURE__*/(function () {\n  var ConfigHtmlEditorComponent = /*#__PURE__*/function () {\n    function ConfigHtmlEditorComponent() {\n      _classCallCheck(this, ConfigHtmlEditorComponent);\n    }\n\n    _createClass(ConfigHtmlEditorComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.data.setValidators([Validators.required]);\n        this.html.patchValue({\n          'data': this.content.html.data\n        });\n      }\n    }, {\n      key: \"html\",\n      get: function get() {\n        return this.parentFormGroup.controls.html;\n      }\n    }, {\n      key: \"data\",\n      get: function get() {\n        return this.html.get('data');\n      }\n    }]);\n\n    return ConfigHtmlEditorComponent;\n  }();\n\n  ConfigHtmlEditorComponent.ɵfac = function ConfigHtmlEditorComponent_Factory(t) {\n    return new (t || ConfigHtmlEditorComponent)();\n  };\n\n  ConfigHtmlEditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigHtmlEditorComponent,\n    selectors: [[\"app-config-html-editor\"]],\n    inputs: {\n      parentFormGroup: \"parentFormGroup\",\n      content: \"content\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [1, \"form-group\"], [\"formControlName\", \"data\", \"rows\", \"10\", 1, \"form-control\", \"h-100\"]],\n    template: function ConfigHtmlEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"textarea\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.parentFormGroup.get(\"html\"));\n      }\n    },\n    directives: [i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return ConfigHtmlEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}