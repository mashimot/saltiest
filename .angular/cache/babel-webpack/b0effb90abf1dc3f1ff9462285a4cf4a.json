{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar SumBeEqualsToDirective_1;\nimport { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS } from '@angular/forms';\n\nvar SumBeEqualsToDirective = SumBeEqualsToDirective_1 = /*#__PURE__*/function () {\n  function SumBeEqualsToDirective() {\n    _classCallCheck(this, SumBeEqualsToDirective);\n  }\n\n  _createClass(SumBeEqualsToDirective, [{\n    key: \"validate\",\n    value: function validate(control) {\n      if (typeof control.value != 'undefined' && control.value != null) {\n        var lines = control.value.trim().split(\"\\n\");\n\n        for (var i = 0; i < lines.length; i++) {\n          var sum = 0;\n          var line = lines[i].replace(/\\s+/g, ' ').trim();\n\n          if (line != '') {\n            var currentValueArr = line.split(' ');\n\n            if (currentValueArr.length > 0) {\n              for (var j = 0; j < currentValueArr.length; j++) {\n                if (currentValueArr[j].trim() != '') {\n                  var num = parseInt(currentValueArr[j]);\n                  sum += num;\n                }\n              }\n\n              if (parseInt(this.sumBeEqualsTo) != sum) {\n                return {\n                  'isSumInvalid': true,\n                  'sumBeEqualsTo': this.sumBeEqualsTo\n                };\n              }\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return SumBeEqualsToDirective;\n}();\n\nSumBeEqualsToDirective.ctorParameters = function () {\n  return [];\n};\n\nSumBeEqualsToDirective.propDecorators = {\n  sumBeEqualsTo: [{\n    type: Input\n  }]\n};\nSumBeEqualsToDirective = SumBeEqualsToDirective_1 = __decorate([Directive({\n  selector: '[sumBeEqualsTo]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: SumBeEqualsToDirective_1,\n    multi: true\n  }]\n}), __metadata(\"design:paramtypes\", [])], SumBeEqualsToDirective);\nexport { SumBeEqualsToDirective };","map":{"version":3,"sources":["C:/dev/saltiest/src/app/shared/directives/sum-be-equals-to.directive.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","SumBeEqualsToDirective_1","Directive","Input","NG_VALIDATORS","SumBeEqualsToDirective","control","value","lines","trim","split","sum","line","replace","currentValueArr","j","num","parseInt","sumBeEqualsTo","ctorParameters","propDecorators","type","selector","providers","provide","useExisting","multi"],"mappings":";;;AAAA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,MAAI,OAAON,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;;AAGA,IAAIE,wBAAJ;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,eAAjC;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AACA,IAAIC,sBAAsB,GAAGJ,wBAAwB;AACjD,oCAAc;AAAA;AACb;;AAFgD;AAAA;AAAA,WAGjD,kBAASK,OAAT,EAAkB;AACd,UAAI,OAAOA,OAAO,CAACC,KAAf,IAAwB,WAAxB,IAAuCD,OAAO,CAACC,KAAR,IAAiB,IAA5D,EAAkE;AAC9D,YAAIC,KAAK,GAAGF,OAAO,CAACC,KAAR,CAAcE,IAAd,GAAqBC,KAArB,CAA2B,IAA3B,CAAZ;;AACA,aAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,KAAK,CAACpB,MAA1B,EAAkCO,CAAC,EAAnC,EAAuC;AACnC,cAAIgB,GAAG,GAAG,CAAV;AACA,cAAIC,IAAI,GAAGJ,KAAK,CAACb,CAAD,CAAL,CAASkB,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,EAA8BJ,IAA9B,EAAX;;AACA,cAAIG,IAAI,IAAI,EAAZ,EAAgB;AACZ,gBAAIE,eAAe,GAAGF,IAAI,CAACF,KAAL,CAAW,GAAX,CAAtB;;AACA,gBAAII,eAAe,CAAC1B,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,mBAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,eAAe,CAAC1B,MAApC,EAA4C2B,CAAC,EAA7C,EAAiD;AAC7C,oBAAID,eAAe,CAACC,CAAD,CAAf,CAAmBN,IAAnB,MAA6B,EAAjC,EAAqC;AACjC,sBAAIO,GAAG,GAAGC,QAAQ,CAACH,eAAe,CAACC,CAAD,CAAhB,CAAlB;AACAJ,kBAAAA,GAAG,IAAIK,GAAP;AACH;AACJ;;AACD,kBAAIC,QAAQ,CAAC,KAAKC,aAAN,CAAR,IAAgCP,GAApC,EAAyC;AACrC,uBAAO;AACH,kCAAgB,IADb;AAEH,mCAAiB,KAAKO;AAFnB,iBAAP;AAIH;AACJ;AACJ;AACJ;AACJ;;AACD,aAAO,IAAP;AACH;AA7BgD;;AAAA;AAAA,GAArD;;AA+BAb,sBAAsB,CAACc,cAAvB,GAAwC;AAAA,SAAM,EAAN;AAAA,CAAxC;;AACAd,sBAAsB,CAACe,cAAvB,GAAwC;AACpCF,EAAAA,aAAa,EAAE,CAAC;AAAEG,IAAAA,IAAI,EAAElB;AAAR,GAAD;AADqB,CAAxC;AAGAE,sBAAsB,GAAGJ,wBAAwB,GAAGpB,UAAU,CAAC,CAC3DqB,SAAS,CAAC;AACNoB,EAAAA,QAAQ,EAAE,iBADJ;AAENC,EAAAA,SAAS,EAAE,CAAC;AACJC,IAAAA,OAAO,EAAEpB,aADL;AAEJqB,IAAAA,WAAW,EAAExB,wBAFT;AAGJyB,IAAAA,KAAK,EAAE;AAHH,GAAD;AAFL,CAAD,CADkD,EAS3D7B,UAAU,CAAC,mBAAD,EAAsB,EAAtB,CATiD,CAAD,EAU3DQ,sBAV2D,CAA9D;AAWA,SAASA,sBAAT","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar SumBeEqualsToDirective_1;\r\nimport { Directive, Input } from '@angular/core';\r\nimport { NG_VALIDATORS } from '@angular/forms';\r\nlet SumBeEqualsToDirective = SumBeEqualsToDirective_1 = class SumBeEqualsToDirective {\r\n    constructor() {\r\n    }\r\n    validate(control) {\r\n        if (typeof control.value != 'undefined' && control.value != null) {\r\n            let lines = control.value.trim().split(\"\\n\");\r\n            for (let i = 0; i < lines.length; i++) {\r\n                let sum = 0;\r\n                let line = lines[i].replace(/\\s+/g, ' ').trim();\r\n                if (line != '') {\r\n                    let currentValueArr = line.split(' ');\r\n                    if (currentValueArr.length > 0) {\r\n                        for (var j = 0; j < currentValueArr.length; j++) {\r\n                            if (currentValueArr[j].trim() != '') {\r\n                                let num = parseInt(currentValueArr[j]);\r\n                                sum += num;\r\n                            }\r\n                        }\r\n                        if (parseInt(this.sumBeEqualsTo) != sum) {\r\n                            return {\r\n                                'isSumInvalid': true,\r\n                                'sumBeEqualsTo': this.sumBeEqualsTo\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n};\r\nSumBeEqualsToDirective.ctorParameters = () => [];\r\nSumBeEqualsToDirective.propDecorators = {\r\n    sumBeEqualsTo: [{ type: Input }]\r\n};\r\nSumBeEqualsToDirective = SumBeEqualsToDirective_1 = __decorate([\r\n    Directive({\r\n        selector: '[sumBeEqualsTo]',\r\n        providers: [{\r\n                provide: NG_VALIDATORS,\r\n                useExisting: SumBeEqualsToDirective_1,\r\n                multi: true\r\n            }]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], SumBeEqualsToDirective);\r\nexport { SumBeEqualsToDirective };\r\n"]},"metadata":{},"sourceType":"module"}