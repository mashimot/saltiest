{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\"; //Enviando parametros para componentes diferentes com Subject (Tópico, Assunto) \n\nexport var FormConfigService = /*#__PURE__*/(function () {\n  var FormConfigService = /*#__PURE__*/function () {\n    function FormConfigService() {\n      _classCallCheck(this, FormConfigService);\n\n      // Instância o objeto Subject\n      this.newFormConfigSubject = new BehaviorSubject([]);\n    }\n\n    _createClass(FormConfigService, [{\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        console.log(config); //Armazena o parametro que foi enviado\n\n        this.newFormConfigSubject.next(config);\n      }\n    }, {\n      key: \"getConfig\",\n      value: function getConfig() {\n        //Fica \"observando\" por atualizações nos dados\n        return this.newFormConfigSubject.asObservable();\n      }\n    }]);\n\n    return FormConfigService;\n  }();\n\n  FormConfigService.ɵfac = function FormConfigService_Factory(t) {\n    return new (t || FormConfigService)();\n  };\n\n  FormConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FormConfigService,\n    factory: FormConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return FormConfigService;\n})();","map":null,"metadata":{},"sourceType":"module"}