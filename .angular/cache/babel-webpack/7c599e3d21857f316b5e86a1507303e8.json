{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService(http, router) {\n    _classCallCheck(this, AuthService);\n\n    this.http = http;\n    this.router = router;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      })\n    }; //private API_URL: string = 'http://localhost:8000/api';\n\n    this.API_URL = '/api';\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  _createClass(AuthService, [{\n    key: \"currentUserValue\",\n    get: function get() {\n      return this.currentUserSubject.getValue();\n    }\n  }, {\n    key: \"isLogged\",\n    value: function isLogged() {\n      return localStorage.getItem('currentUser') ? true : false;\n    }\n  }, {\n    key: \"login\",\n    value: function login(user) {\n      var _this = this;\n\n      /*return this.http.post<any>(`${this.API_URL}/auth/login`, {\r\n          username: user.username,\r\n          password: user.password\r\n      }, this.httpOptions)*/\n      return this.http.post(\"\".concat(this.API_URL, \"/auth/login\"), user, this.httpOptions).pipe(map(function (user) {\n        if (user && user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user));\n\n          _this.currentUserSubject.next(user);\n\n          _this.router.navigate(['/home']);\n        }\n\n        return user;\n      }), tap(function (user) {\n        console.log('user', user);\n      }));\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser() {\n      return JSON.parse(localStorage.getItem('currentUser'));\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // remove user from local storage to log user out\n      //localStorage.removeItem('currentUser');\n      localStorage.clear();\n      this.currentUserSubject.next(null);\n      this.router.navigate(['/login']);\n    }\n  }]);\n\n  return AuthService;\n}();\n\nAuthService.ctorParameters = function () {\n  return [{\n    type: HttpClient\n  }, {\n    type: Router\n  }];\n};\n\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [HttpClient, Router])], AuthService);\nexport { AuthService };","map":{"version":3,"sources":["C:/dev/saltiest/src/app/_core/guards/auth.service.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","Injectable","HttpClient","HttpHeaders","BehaviorSubject","map","tap","Router","AuthService","http","router","httpOptions","headers","API_URL","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","getValue","user","post","pipe","token","setItem","stringify","next","navigate","console","log","clear","ctorParameters","type","providedIn"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nlet AuthService = class AuthService {\r\n    constructor(http, router) {\r\n        this.http = http;\r\n        this.router = router;\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            })\r\n        };\r\n        //private API_URL: string = 'http://localhost:8000/api';\r\n        this.API_URL = '/api';\r\n        this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n    get currentUserValue() {\r\n        return this.currentUserSubject.getValue();\r\n    }\r\n    isLogged() {\r\n        return localStorage.getItem('currentUser') ? true : false;\r\n    }\r\n    login(user) {\r\n        /*return this.http.post<any>(`${this.API_URL}/auth/login`, {\r\n            username: user.username,\r\n            password: user.password\r\n        }, this.httpOptions)*/\r\n        return this.http.post(`${this.API_URL}/auth/login`, user, this.httpOptions)\r\n            .pipe(map((user) => {\r\n            if (user && user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                this.router.navigate(['/home']);\r\n            }\r\n            return user;\r\n        }), tap(user => {\r\n            console.log('user', user);\r\n        }));\r\n    }\r\n    getUser() {\r\n        return JSON.parse(localStorage.getItem('currentUser'));\r\n    }\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        //localStorage.removeItem('currentUser');\r\n        localStorage.clear();\r\n        this.currentUserSubject.next(null);\r\n        this.router.navigate(['/login']);\r\n    }\r\n};\r\nAuthService.ctorParameters = () => [\r\n    { type: HttpClient },\r\n    { type: Router }\r\n];\r\nAuthService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [HttpClient,\r\n        Router])\r\n], AuthService);\r\nexport { AuthService };\r\n"]},"metadata":{},"sourceType":"module"}