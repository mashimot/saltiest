{"ast":null,"code":"import _inherits from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\n/**\n * @license Angular v13.1.0\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, InjectionToken, Inject, Optional } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Subject } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\n\nfunction joinWithSlash(start, end) {\n  if (start.length == 0) {\n    return end;\n  }\n\n  if (end.length == 0) {\n    return start;\n  }\n\n  var slashes = 0;\n\n  if (start.endsWith('/')) {\n    slashes++;\n  }\n\n  if (end.startsWith('/')) {\n    slashes++;\n  }\n\n  if (slashes == 2) {\n    return start + end.substring(1);\n  }\n\n  if (slashes == 1) {\n    return start + end;\n  }\n\n  return start + '/' + end;\n}\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\n\n\nfunction stripTrailingSlash(url) {\n  var match = url.match(/#|\\?|$/);\n  var pathEndIdx = match && match.index || url.length;\n  var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n  return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n}\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\n\n\nfunction normalizeQueryParams(params) {\n  return params && params[0] !== '?' ? '?' + params : params;\n}\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\n\n\nvar SpyLocation = /*#__PURE__*/function () {\n  function SpyLocation() {\n    _classCallCheck(this, SpyLocation);\n\n    this.urlChanges = [];\n    this._history = [new LocationState('', '', null)];\n    this._historyIndex = 0;\n    /** @internal */\n\n    this._subject = new EventEmitter();\n    /** @internal */\n\n    this._baseHref = '';\n    /** @internal */\n\n    this._platformStrategy = null;\n    /** @internal */\n\n    this._platformLocation = null;\n    /** @internal */\n\n    this._urlChangeListeners = [];\n  }\n\n  _createClass(SpyLocation, [{\n    key: \"setInitialPath\",\n    value: function setInitialPath(url) {\n      this._history[this._historyIndex].path = url;\n    }\n  }, {\n    key: \"setBaseHref\",\n    value: function setBaseHref(url) {\n      this._baseHref = url;\n    }\n  }, {\n    key: \"path\",\n    value: function path() {\n      return this._history[this._historyIndex].path;\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this._history[this._historyIndex].state;\n    }\n  }, {\n    key: \"isCurrentPathEqualTo\",\n    value: function isCurrentPathEqualTo(path) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n      var currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n      return currPath == givenPath + (query.length > 0 ? '?' + query : '');\n    }\n  }, {\n    key: \"simulateUrlPop\",\n    value: function simulateUrlPop(pathname) {\n      this._subject.emit({\n        'url': pathname,\n        'pop': true,\n        'type': 'popstate'\n      });\n    }\n  }, {\n    key: \"simulateHashChange\",\n    value: function simulateHashChange(pathname) {\n      var path = this.prepareExternalUrl(pathname);\n      this.pushHistory(path, '', null);\n      this.urlChanges.push('hash: ' + pathname); // the browser will automatically fire popstate event before each `hashchange` event, so we need\n      // to simulate it.\n\n      this._subject.emit({\n        'url': pathname,\n        'pop': true,\n        'type': 'popstate'\n      });\n\n      this._subject.emit({\n        'url': pathname,\n        'pop': true,\n        'type': 'hashchange'\n      });\n    }\n  }, {\n    key: \"prepareExternalUrl\",\n    value: function prepareExternalUrl(url) {\n      if (url.length > 0 && !url.startsWith('/')) {\n        url = '/' + url;\n      }\n\n      return this._baseHref + url;\n    }\n  }, {\n    key: \"go\",\n    value: function go(path) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      path = this.prepareExternalUrl(path);\n      this.pushHistory(path, query, state);\n      var locationState = this._history[this._historyIndex - 1];\n\n      if (locationState.path == path && locationState.query == query) {\n        return;\n      }\n\n      var url = path + (query.length > 0 ? '?' + query : '');\n      this.urlChanges.push(url);\n\n      this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n    }\n  }, {\n    key: \"replaceState\",\n    value: function replaceState(path) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      path = this.prepareExternalUrl(path);\n      var history = this._history[this._historyIndex];\n\n      if (history.path == path && history.query == query) {\n        return;\n      }\n\n      history.path = path;\n      history.query = query;\n      history.state = state;\n      var url = path + (query.length > 0 ? '?' + query : '');\n      this.urlChanges.push('replace: ' + url);\n\n      this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward() {\n      if (this._historyIndex < this._history.length - 1) {\n        this._historyIndex++;\n\n        this._subject.emit({\n          'url': this.path(),\n          'state': this.getState(),\n          'pop': true,\n          'type': 'popstate'\n        });\n      }\n    }\n  }, {\n    key: \"back\",\n    value: function back() {\n      if (this._historyIndex > 0) {\n        this._historyIndex--;\n\n        this._subject.emit({\n          'url': this.path(),\n          'state': this.getState(),\n          'pop': true,\n          'type': 'popstate'\n        });\n      }\n    }\n  }, {\n    key: \"historyGo\",\n    value: function historyGo() {\n      var relativePosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var nextPageIndex = this._historyIndex + relativePosition;\n\n      if (nextPageIndex >= 0 && nextPageIndex < this._history.length) {\n        this._historyIndex = nextPageIndex;\n\n        this._subject.emit({\n          'url': this.path(),\n          'state': this.getState(),\n          'pop': true,\n          'type': 'popstate'\n        });\n      }\n    }\n  }, {\n    key: \"onUrlChange\",\n    value: function onUrlChange(fn) {\n      var _this = this;\n\n      this._urlChangeListeners.push(fn);\n\n      if (!this._urlChangeSubscription) {\n        this._urlChangeSubscription = this.subscribe(function (v) {\n          _this._notifyUrlChangeListeners(v.url, v.state);\n        });\n      }\n    }\n    /** @internal */\n\n  }, {\n    key: \"_notifyUrlChangeListeners\",\n    value: function _notifyUrlChangeListeners() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var state = arguments.length > 1 ? arguments[1] : undefined;\n\n      this._urlChangeListeners.forEach(function (fn) {\n        return fn(url, state);\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(onNext, onThrow, onReturn) {\n      return this._subject.subscribe({\n        next: onNext,\n        error: onThrow,\n        complete: onReturn\n      });\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(url) {\n      return null;\n    }\n  }, {\n    key: \"pushHistory\",\n    value: function pushHistory(path, query, state) {\n      if (this._historyIndex > 0) {\n        this._history.splice(this._historyIndex + 1);\n      }\n\n      this._history.push(new LocationState(path, query, state));\n\n      this._historyIndex = this._history.length - 1;\n    }\n  }]);\n\n  return SpyLocation;\n}();\n\nSpyLocation.ɵfac = function SpyLocation_Factory(t) {\n  return new (t || SpyLocation)();\n};\n\nSpyLocation.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SpyLocation,\n  factory: SpyLocation.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SpyLocation, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar LocationState = function LocationState(path, query, state) {\n  _classCallCheck(this, LocationState);\n\n  this.path = path;\n  this.query = query;\n  this.state = state;\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\n\n\nvar MockLocationStrategy = /*#__PURE__*/function (_LocationStrategy) {\n  _inherits(MockLocationStrategy, _LocationStrategy);\n\n  var _super = _createSuper(MockLocationStrategy);\n\n  function MockLocationStrategy() {\n    var _this2;\n\n    _classCallCheck(this, MockLocationStrategy);\n\n    _this2 = _super.call(this);\n    _this2.internalBaseHref = '/';\n    _this2.internalPath = '/';\n    _this2.internalTitle = '';\n    _this2.urlChanges = [];\n    /** @internal */\n\n    _this2._subject = new EventEmitter();\n    _this2.stateChanges = [];\n    return _this2;\n  }\n\n  _createClass(MockLocationStrategy, [{\n    key: \"simulatePopState\",\n    value: function simulatePopState(url) {\n      this.internalPath = url;\n\n      this._subject.emit(new _MockPopStateEvent(this.path()));\n    }\n  }, {\n    key: \"path\",\n    value: function path() {\n      var includeHash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this.internalPath;\n    }\n  }, {\n    key: \"prepareExternalUrl\",\n    value: function prepareExternalUrl(internal) {\n      if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n        return this.internalBaseHref + internal.substring(1);\n      }\n\n      return this.internalBaseHref + internal;\n    }\n  }, {\n    key: \"pushState\",\n    value: function pushState(ctx, title, path, query) {\n      // Add state change to changes array\n      this.stateChanges.push(ctx);\n      this.internalTitle = title;\n      var url = path + (query.length > 0 ? '?' + query : '');\n      this.internalPath = url;\n      var externalUrl = this.prepareExternalUrl(url);\n      this.urlChanges.push(externalUrl);\n    }\n  }, {\n    key: \"replaceState\",\n    value: function replaceState(ctx, title, path, query) {\n      // Reset the last index of stateChanges to the ctx (state) object\n      this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n      this.internalTitle = title;\n      var url = path + (query.length > 0 ? '?' + query : '');\n      this.internalPath = url;\n      var externalUrl = this.prepareExternalUrl(url);\n      this.urlChanges.push('replace: ' + externalUrl);\n    }\n  }, {\n    key: \"onPopState\",\n    value: function onPopState(fn) {\n      this._subject.subscribe({\n        next: fn\n      });\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref() {\n      return this.internalBaseHref;\n    }\n  }, {\n    key: \"back\",\n    value: function back() {\n      if (this.urlChanges.length > 0) {\n        this.urlChanges.pop();\n        this.stateChanges.pop();\n        var nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n        this.simulatePopState(nextUrl);\n      }\n    }\n  }, {\n    key: \"forward\",\n    value: function forward() {\n      throw 'not implemented';\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.stateChanges[(this.stateChanges.length || 1) - 1];\n    }\n  }]);\n\n  return MockLocationStrategy;\n}(LocationStrategy);\n\nMockLocationStrategy.ɵfac = function MockLocationStrategy_Factory(t) {\n  return new (t || MockLocationStrategy)();\n};\n\nMockLocationStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MockLocationStrategy,\n  factory: MockLocationStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MockLocationStrategy, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar _MockPopStateEvent = function _MockPopStateEvent(newUrl) {\n  _classCallCheck(this, _MockPopStateEvent);\n\n  this.newUrl = newUrl;\n  this.pop = true;\n  this.type = 'popstate';\n};\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\n\n\nvar urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\nfunction parseUrl(urlStr, baseHref) {\n  var verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  var serverBase; // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n  // an arbitrary base URL which can be removed afterward.\n\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n\n  var parsedUrl;\n\n  try {\n    parsedUrl = new URL(urlStr, serverBase);\n  } catch (e) {\n    var result = urlParse.exec(serverBase || '' + urlStr);\n\n    if (!result) {\n      throw new Error(\"Invalid URL: \".concat(urlStr, \" with base: \").concat(baseHref));\n    }\n\n    var hostSplit = result[4].split(':');\n    parsedUrl = {\n      protocol: result[1],\n      hostname: hostSplit[0],\n      port: hostSplit[1] || '',\n      pathname: result[5],\n      search: result[6],\n      hash: result[8]\n    };\n  }\n\n  if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n    parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n  }\n\n  return {\n    hostname: !serverBase && parsedUrl.hostname || '',\n    protocol: !serverBase && parsedUrl.protocol || '',\n    port: !serverBase && parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '/',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || ''\n  };\n}\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\n\n\nvar MOCK_PLATFORM_LOCATION_CONFIG = new InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\n\nvar MockPlatformLocation = /*#__PURE__*/function () {\n  function MockPlatformLocation(config) {\n    _classCallCheck(this, MockPlatformLocation);\n\n    this.baseHref = '';\n    this.hashUpdate = new Subject();\n    this.urlChangeIndex = 0;\n    this.urlChanges = [{\n      hostname: '',\n      protocol: '',\n      port: '',\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null\n    }];\n\n    if (config) {\n      this.baseHref = config.appBaseHref || '';\n      var parsedChanges = this.parseChanges(null, config.startUrl || 'http://_empty_/', this.baseHref);\n      this.urlChanges[0] = Object.assign({}, parsedChanges);\n    }\n  }\n\n  _createClass(MockPlatformLocation, [{\n    key: \"hostname\",\n    get: function get() {\n      return this.urlChanges[this.urlChangeIndex].hostname;\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      return this.urlChanges[this.urlChangeIndex].protocol;\n    }\n  }, {\n    key: \"port\",\n    get: function get() {\n      return this.urlChanges[this.urlChangeIndex].port;\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      return this.urlChanges[this.urlChangeIndex].pathname;\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      return this.urlChanges[this.urlChangeIndex].search;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this.urlChanges[this.urlChangeIndex].hash;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.urlChanges[this.urlChangeIndex].state;\n    }\n  }, {\n    key: \"getBaseHrefFromDOM\",\n    value: function getBaseHrefFromDOM() {\n      return this.baseHref;\n    }\n  }, {\n    key: \"onPopState\",\n    value: function onPopState(fn) {\n      // No-op: a state stack is not implemented, so\n      // no events will ever come.\n      return function () {};\n    }\n  }, {\n    key: \"onHashChange\",\n    value: function onHashChange(fn) {\n      var subscription = this.hashUpdate.subscribe(fn);\n      return function () {\n        return subscription.unsubscribe();\n      };\n    }\n  }, {\n    key: \"href\",\n    get: function get() {\n      var url = \"\".concat(this.protocol, \"//\").concat(this.hostname).concat(this.port ? ':' + this.port : '');\n      url += \"\".concat(this.pathname === '/' ? '' : this.pathname).concat(this.search).concat(this.hash);\n      return url;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return \"\".concat(this.pathname).concat(this.search).concat(this.hash);\n    }\n  }, {\n    key: \"parseChanges\",\n    value: function parseChanges(state, url) {\n      var baseHref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      // When the `history.state` value is stored, it is always copied.\n      state = JSON.parse(JSON.stringify(state));\n      return Object.assign(Object.assign({}, parseUrl(url, baseHref)), {\n        state: state\n      });\n    }\n  }, {\n    key: \"replaceState\",\n    value: function replaceState(state, title, newUrl) {\n      var _this$parseChanges = this.parseChanges(state, newUrl),\n          pathname = _this$parseChanges.pathname,\n          search = _this$parseChanges.search,\n          parsedState = _this$parseChanges.state,\n          hash = _this$parseChanges.hash;\n\n      this.urlChanges[this.urlChangeIndex] = Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), {\n        pathname: pathname,\n        search: search,\n        hash: hash,\n        state: parsedState\n      });\n    }\n  }, {\n    key: \"pushState\",\n    value: function pushState(state, title, newUrl) {\n      var _this$parseChanges2 = this.parseChanges(state, newUrl),\n          pathname = _this$parseChanges2.pathname,\n          search = _this$parseChanges2.search,\n          parsedState = _this$parseChanges2.state,\n          hash = _this$parseChanges2.hash;\n\n      if (this.urlChangeIndex > 0) {\n        this.urlChanges.splice(this.urlChangeIndex + 1);\n      }\n\n      this.urlChanges.push(Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), {\n        pathname: pathname,\n        search: search,\n        hash: hash,\n        state: parsedState\n      }));\n      this.urlChangeIndex = this.urlChanges.length - 1;\n    }\n  }, {\n    key: \"forward\",\n    value: function forward() {\n      var oldUrl = this.url;\n      var oldHash = this.hash;\n\n      if (this.urlChangeIndex < this.urlChanges.length) {\n        this.urlChangeIndex++;\n      }\n\n      this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n  }, {\n    key: \"back\",\n    value: function back() {\n      var oldUrl = this.url;\n      var oldHash = this.hash;\n\n      if (this.urlChangeIndex > 0) {\n        this.urlChangeIndex--;\n      }\n\n      this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n  }, {\n    key: \"historyGo\",\n    value: function historyGo() {\n      var relativePosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var oldUrl = this.url;\n      var oldHash = this.hash;\n      var nextPageIndex = this.urlChangeIndex + relativePosition;\n\n      if (nextPageIndex >= 0 && nextPageIndex < this.urlChanges.length) {\n        this.urlChangeIndex = nextPageIndex;\n      }\n\n      this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state;\n    }\n  }, {\n    key: \"scheduleHashUpdate\",\n    value: function scheduleHashUpdate(oldHash, oldUrl) {\n      var _this3 = this;\n\n      if (oldHash !== this.hash) {\n        scheduleMicroTask(function () {\n          return _this3.hashUpdate.next({\n            type: 'hashchange',\n            state: null,\n            oldUrl: oldUrl,\n            newUrl: _this3.url\n          });\n        });\n      }\n    }\n  }]);\n\n  return MockPlatformLocation;\n}();\n\nMockPlatformLocation.ɵfac = function MockPlatformLocation_Factory(t) {\n  return new (t || MockPlatformLocation)(i0.ɵɵinject(MOCK_PLATFORM_LOCATION_CONFIG, 8));\n};\n\nMockPlatformLocation.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MockPlatformLocation,\n  factory: MockPlatformLocation.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MockPlatformLocation, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MOCK_PLATFORM_LOCATION_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nfunction scheduleMicroTask(cb) {\n  Promise.resolve(null).then(cb);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MOCK_PLATFORM_LOCATION_CONFIG, MockLocationStrategy, MockPlatformLocation, SpyLocation };","map":{"version":3,"sources":["C:/dev/saltiest/node_modules/@angular/common/fesm2015/testing.mjs"],"names":["i0","EventEmitter","Injectable","InjectionToken","Inject","Optional","LocationStrategy","Subject","joinWithSlash","start","end","length","slashes","endsWith","startsWith","substring","stripTrailingSlash","url","match","pathEndIdx","index","droppedSlashIdx","slice","normalizeQueryParams","params","SpyLocation","urlChanges","_history","LocationState","_historyIndex","_subject","_baseHref","_platformStrategy","_platformLocation","_urlChangeListeners","path","state","query","givenPath","currPath","pathname","emit","prepareExternalUrl","pushHistory","push","locationState","_notifyUrlChangeListeners","history","getState","relativePosition","nextPageIndex","fn","_urlChangeSubscription","subscribe","v","forEach","onNext","onThrow","onReturn","next","error","complete","splice","ɵfac","ɵprov","type","MockLocationStrategy","internalBaseHref","internalPath","internalTitle","stateChanges","_MockPopStateEvent","includeHash","internal","ctx","title","externalUrl","pop","nextUrl","simulatePopState","newUrl","urlParse","parseUrl","urlStr","baseHref","verifyProtocol","serverBase","test","parsedUrl","URL","e","result","exec","Error","hostSplit","split","protocol","hostname","port","search","hash","indexOf","MOCK_PLATFORM_LOCATION_CONFIG","MockPlatformLocation","config","hashUpdate","urlChangeIndex","appBaseHref","parsedChanges","parseChanges","startUrl","Object","assign","subscription","unsubscribe","JSON","parse","stringify","parsedState","oldUrl","oldHash","scheduleHashUpdate","scheduleMicroTask","undefined","decorators","args","cb","Promise","resolve","then"],"mappings":"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","sourcesContent":["/**\n * @license Angular v13.1.0\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, InjectionToken, Inject, Optional } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\nfunction joinWithSlash(start, end) {\n    if (start.length == 0) {\n        return end;\n    }\n    if (end.length == 0) {\n        return start;\n    }\n    let slashes = 0;\n    if (start.endsWith('/')) {\n        slashes++;\n    }\n    if (end.startsWith('/')) {\n        slashes++;\n    }\n    if (slashes == 2) {\n        return start + end.substring(1);\n    }\n    if (slashes == 1) {\n        return start + end;\n    }\n    return start + '/' + end;\n}\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\nfunction stripTrailingSlash(url) {\n    const match = url.match(/#|\\?|$/);\n    const pathEndIdx = match && match.index || url.length;\n    const droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n}\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\nfunction normalizeQueryParams(params) {\n    return params && params[0] !== '?' ? '?' + params : params;\n}\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\nclass SpyLocation {\n    constructor() {\n        this.urlChanges = [];\n        this._history = [new LocationState('', '', null)];\n        this._historyIndex = 0;\n        /** @internal */\n        this._subject = new EventEmitter();\n        /** @internal */\n        this._baseHref = '';\n        /** @internal */\n        this._platformStrategy = null;\n        /** @internal */\n        this._platformLocation = null;\n        /** @internal */\n        this._urlChangeListeners = [];\n    }\n    setInitialPath(url) {\n        this._history[this._historyIndex].path = url;\n    }\n    setBaseHref(url) {\n        this._baseHref = url;\n    }\n    path() {\n        return this._history[this._historyIndex].path;\n    }\n    getState() {\n        return this._history[this._historyIndex].state;\n    }\n    isCurrentPathEqualTo(path, query = '') {\n        const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n        const currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n        return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n    }\n    simulateUrlPop(pathname) {\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n    }\n    simulateHashChange(pathname) {\n        const path = this.prepareExternalUrl(pathname);\n        this.pushHistory(path, '', null);\n        this.urlChanges.push('hash: ' + pathname);\n        // the browser will automatically fire popstate event before each `hashchange` event, so we need\n        // to simulate it.\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'hashchange' });\n    }\n    prepareExternalUrl(url) {\n        if (url.length > 0 && !url.startsWith('/')) {\n            url = '/' + url;\n        }\n        return this._baseHref + url;\n    }\n    go(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        this.pushHistory(path, query, state);\n        const locationState = this._history[this._historyIndex - 1];\n        if (locationState.path == path && locationState.query == query) {\n            return;\n        }\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.urlChanges.push(url);\n        this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n    }\n    replaceState(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        const history = this._history[this._historyIndex];\n        if (history.path == path && history.query == query) {\n            return;\n        }\n        history.path = path;\n        history.query = query;\n        history.state = state;\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.urlChanges.push('replace: ' + url);\n        this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n    }\n    forward() {\n        if (this._historyIndex < (this._history.length - 1)) {\n            this._historyIndex++;\n            this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true, 'type': 'popstate' });\n        }\n    }\n    back() {\n        if (this._historyIndex > 0) {\n            this._historyIndex--;\n            this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true, 'type': 'popstate' });\n        }\n    }\n    historyGo(relativePosition = 0) {\n        const nextPageIndex = this._historyIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this._history.length) {\n            this._historyIndex = nextPageIndex;\n            this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true, 'type': 'popstate' });\n        }\n    }\n    onUrlChange(fn) {\n        this._urlChangeListeners.push(fn);\n        if (!this._urlChangeSubscription) {\n            this._urlChangeSubscription = this.subscribe(v => {\n                this._notifyUrlChangeListeners(v.url, v.state);\n            });\n        }\n    }\n    /** @internal */\n    _notifyUrlChangeListeners(url = '', state) {\n        this._urlChangeListeners.forEach(fn => fn(url, state));\n    }\n    subscribe(onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    }\n    normalize(url) {\n        return null;\n    }\n    pushHistory(path, query, state) {\n        if (this._historyIndex > 0) {\n            this._history.splice(this._historyIndex + 1);\n        }\n        this._history.push(new LocationState(path, query, state));\n        this._historyIndex = this._history.length - 1;\n    }\n}\nSpyLocation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SpyLocation, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSpyLocation.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SpyLocation });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SpyLocation, decorators: [{\n            type: Injectable\n        }] });\nclass LocationState {\n    constructor(path, query, state) {\n        this.path = path;\n        this.query = query;\n        this.state = state;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\nclass MockLocationStrategy extends LocationStrategy {\n    constructor() {\n        super();\n        this.internalBaseHref = '/';\n        this.internalPath = '/';\n        this.internalTitle = '';\n        this.urlChanges = [];\n        /** @internal */\n        this._subject = new EventEmitter();\n        this.stateChanges = [];\n    }\n    simulatePopState(url) {\n        this.internalPath = url;\n        this._subject.emit(new _MockPopStateEvent(this.path()));\n    }\n    path(includeHash = false) {\n        return this.internalPath;\n    }\n    prepareExternalUrl(internal) {\n        if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n            return this.internalBaseHref + internal.substring(1);\n        }\n        return this.internalBaseHref + internal;\n    }\n    pushState(ctx, title, path, query) {\n        // Add state change to changes array\n        this.stateChanges.push(ctx);\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push(externalUrl);\n    }\n    replaceState(ctx, title, path, query) {\n        // Reset the last index of stateChanges to the ctx (state) object\n        this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push('replace: ' + externalUrl);\n    }\n    onPopState(fn) {\n        this._subject.subscribe({ next: fn });\n    }\n    getBaseHref() {\n        return this.internalBaseHref;\n    }\n    back() {\n        if (this.urlChanges.length > 0) {\n            this.urlChanges.pop();\n            this.stateChanges.pop();\n            const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n            this.simulatePopState(nextUrl);\n        }\n    }\n    forward() {\n        throw 'not implemented';\n    }\n    getState() {\n        return this.stateChanges[(this.stateChanges.length || 1) - 1];\n    }\n}\nMockLocationStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MockLocationStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMockLocationStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MockLocationStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MockLocationStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\nclass _MockPopStateEvent {\n    constructor(newUrl) {\n        this.newUrl = newUrl;\n        this.pop = true;\n        this.type = 'popstate';\n    }\n}\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nfunction parseUrl(urlStr, baseHref) {\n    const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n    let serverBase;\n    // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n    // an arbitrary base URL which can be removed afterward.\n    if (!verifyProtocol.test(urlStr)) {\n        serverBase = 'http://empty.com/';\n    }\n    let parsedUrl;\n    try {\n        parsedUrl = new URL(urlStr, serverBase);\n    }\n    catch (e) {\n        const result = urlParse.exec(serverBase || '' + urlStr);\n        if (!result) {\n            throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n        }\n        const hostSplit = result[4].split(':');\n        parsedUrl = {\n            protocol: result[1],\n            hostname: hostSplit[0],\n            port: hostSplit[1] || '',\n            pathname: result[5],\n            search: result[6],\n            hash: result[8],\n        };\n    }\n    if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n        parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n    }\n    return {\n        hostname: !serverBase && parsedUrl.hostname || '',\n        protocol: !serverBase && parsedUrl.protocol || '',\n        port: !serverBase && parsedUrl.port || '',\n        pathname: parsedUrl.pathname || '/',\n        search: parsedUrl.search || '',\n        hash: parsedUrl.hash || '',\n    };\n}\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nconst MOCK_PLATFORM_LOCATION_CONFIG = new InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\nclass MockPlatformLocation {\n    constructor(config) {\n        this.baseHref = '';\n        this.hashUpdate = new Subject();\n        this.urlChangeIndex = 0;\n        this.urlChanges = [{ hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null }];\n        if (config) {\n            this.baseHref = config.appBaseHref || '';\n            const parsedChanges = this.parseChanges(null, config.startUrl || 'http://_empty_/', this.baseHref);\n            this.urlChanges[0] = Object.assign({}, parsedChanges);\n        }\n    }\n    get hostname() {\n        return this.urlChanges[this.urlChangeIndex].hostname;\n    }\n    get protocol() {\n        return this.urlChanges[this.urlChangeIndex].protocol;\n    }\n    get port() {\n        return this.urlChanges[this.urlChangeIndex].port;\n    }\n    get pathname() {\n        return this.urlChanges[this.urlChangeIndex].pathname;\n    }\n    get search() {\n        return this.urlChanges[this.urlChangeIndex].search;\n    }\n    get hash() {\n        return this.urlChanges[this.urlChangeIndex].hash;\n    }\n    get state() {\n        return this.urlChanges[this.urlChangeIndex].state;\n    }\n    getBaseHrefFromDOM() {\n        return this.baseHref;\n    }\n    onPopState(fn) {\n        // No-op: a state stack is not implemented, so\n        // no events will ever come.\n        return () => { };\n    }\n    onHashChange(fn) {\n        const subscription = this.hashUpdate.subscribe(fn);\n        return () => subscription.unsubscribe();\n    }\n    get href() {\n        let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n        url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n        return url;\n    }\n    get url() {\n        return `${this.pathname}${this.search}${this.hash}`;\n    }\n    parseChanges(state, url, baseHref = '') {\n        // When the `history.state` value is stored, it is always copied.\n        state = JSON.parse(JSON.stringify(state));\n        return Object.assign(Object.assign({}, parseUrl(url, baseHref)), { state });\n    }\n    replaceState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        this.urlChanges[this.urlChangeIndex] = Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), { pathname, search, hash, state: parsedState });\n    }\n    pushState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        if (this.urlChangeIndex > 0) {\n            this.urlChanges.splice(this.urlChangeIndex + 1);\n        }\n        this.urlChanges.push(Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), { pathname, search, hash, state: parsedState }));\n        this.urlChangeIndex = this.urlChanges.length - 1;\n    }\n    forward() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex < this.urlChanges.length) {\n            this.urlChangeIndex++;\n        }\n        this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n    back() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex > 0) {\n            this.urlChangeIndex--;\n        }\n        this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n    historyGo(relativePosition = 0) {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        const nextPageIndex = this.urlChangeIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this.urlChanges.length) {\n            this.urlChangeIndex = nextPageIndex;\n        }\n        this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n    getState() {\n        return this.state;\n    }\n    scheduleHashUpdate(oldHash, oldUrl) {\n        if (oldHash !== this.hash) {\n            scheduleMicroTask(() => this.hashUpdate.next({ type: 'hashchange', state: null, oldUrl, newUrl: this.url }));\n        }\n    }\n}\nMockPlatformLocation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MockPlatformLocation, deps: [{ token: MOCK_PLATFORM_LOCATION_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMockPlatformLocation.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MockPlatformLocation });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MockPlatformLocation, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MOCK_PLATFORM_LOCATION_CONFIG]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MOCK_PLATFORM_LOCATION_CONFIG, MockLocationStrategy, MockPlatformLocation, SpyLocation };\n"]},"metadata":{},"sourceType":"module"}