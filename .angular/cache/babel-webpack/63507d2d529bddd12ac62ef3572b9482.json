{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs'; //Enviando parametros para componentes diferentes com Subject (Tópico, Assunto) \n\nvar FormConfigService = /*#__PURE__*/function () {\n  function FormConfigService() {\n    _classCallCheck(this, FormConfigService);\n\n    // Instância o objeto Subject\n    this.newFormConfigSubject = new BehaviorSubject([]);\n  }\n\n  _createClass(FormConfigService, [{\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      console.log(config); //Armazena o parametro que foi enviado\n\n      this.newFormConfigSubject.next(config);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      //Fica \"observando\" por atualizações nos dados\n      return this.newFormConfigSubject.asObservable();\n    }\n  }]);\n\n  return FormConfigService;\n}();\n\nFormConfigService.ctorParameters = function () {\n  return [];\n};\n\nFormConfigService = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [])], FormConfigService);\nexport { FormConfigService };","map":{"version":3,"sources":["C:/dev/saltiest/src/app/_services/form-config.service.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","Injectable","BehaviorSubject","FormConfigService","newFormConfigSubject","config","console","log","next","asObservable","ctorParameters","providedIn"],"mappings":";;;AAAA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,MAAI,OAAON,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;;AAGA,SAASE,UAAT,QAA2B,eAA3B;AACA,SAASC,eAAT,QAAgC,MAAhC,C,CACA;;AACA,IAAIC,iBAAiB;AACjB,+BAAc;AAAA;;AACV;AACA,SAAKC,oBAAL,GAA4B,IAAIF,eAAJ,CAAoB,EAApB,CAA5B;AACH;;AAJgB;AAAA;AAAA,WAKjB,mBAAUG,MAAV,EAAkB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADc,CAEd;;AACA,WAAKD,oBAAL,CAA0BI,IAA1B,CAA+BH,MAA/B;AACH;AATgB;AAAA;AAAA,WAUjB,qBAAY;AACR;AACA,aAAO,KAAKD,oBAAL,CAA0BK,YAA1B,EAAP;AACH;AAbgB;;AAAA;AAAA,GAArB;;AAeAN,iBAAiB,CAACO,cAAlB,GAAmC;AAAA,SAAM,EAAN;AAAA,CAAnC;;AACAP,iBAAiB,GAAGtB,UAAU,CAAC,CAC3BoB,UAAU,CAAC;AACPU,EAAAA,UAAU,EAAE;AADL,CAAD,CADiB,EAI3Bd,UAAU,CAAC,mBAAD,EAAsB,EAAtB,CAJiB,CAAD,EAK3BM,iBAL2B,CAA9B;AAMA,SAASA,iBAAT","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n//Enviando parametros para componentes diferentes com Subject (Tópico, Assunto) \r\nlet FormConfigService = class FormConfigService {\r\n    constructor() {\r\n        // Instância o objeto Subject\r\n        this.newFormConfigSubject = new BehaviorSubject([]);\r\n    }\r\n    setConfig(config) {\r\n        console.log(config);\r\n        //Armazena o parametro que foi enviado\r\n        this.newFormConfigSubject.next(config);\r\n    }\r\n    getConfig() {\r\n        //Fica \"observando\" por atualizações nos dados\r\n        return this.newFormConfigSubject.asObservable();\r\n    }\r\n};\r\nFormConfigService.ctorParameters = () => [];\r\nFormConfigService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], FormConfigService);\r\nexport { FormConfigService };\r\n"]},"metadata":{},"sourceType":"module"}