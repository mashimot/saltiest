{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AsapScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(AsapScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(AsapScheduler);\n\n  function AsapScheduler() {\n    _classCallCheck(this, AsapScheduler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsapScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      this.active = true;\n      this.scheduled = undefined;\n      var actions = this.actions;\n      var error;\n      var index = -1;\n      var count = actions.length;\n      action = action || actions.shift();\n\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while (++index < count && (action = actions.shift()));\n\n      this.active = false;\n\n      if (error) {\n        while (++index < count && (action = actions.shift())) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return AsapScheduler;\n}(AsyncScheduler);","map":{"version":3,"sources":["C:/dev/saltiest/node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js"],"names":["AsyncScheduler","AsapScheduler","action","active","scheduled","undefined","actions","error","index","count","length","shift","execute","state","delay","unsubscribe"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,WAAaC,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,eAAMC,MAAN,EAAc;AACV,WAAKC,MAAL,GAAc,IAAd;AACA,WAAKC,SAAL,GAAiBC,SAAjB;AACA,UAAQC,OAAR,GAAoB,IAApB,CAAQA,OAAR;AACA,UAAIC,KAAJ;AACA,UAAIC,KAAK,GAAG,CAAC,CAAb;AACA,UAAIC,KAAK,GAAGH,OAAO,CAACI,MAApB;AACAR,MAAAA,MAAM,GAAGA,MAAM,IAAII,OAAO,CAACK,KAAR,EAAnB;;AACA,SAAG;AACC,YAAIJ,KAAK,GAAGL,MAAM,CAACU,OAAP,CAAeV,MAAM,CAACW,KAAtB,EAA6BX,MAAM,CAACY,KAApC,CAAZ,EAAwD;AACpD;AACH;AACJ,OAJD,QAIS,EAAEN,KAAF,GAAUC,KAAV,KAAoBP,MAAM,GAAGI,OAAO,CAACK,KAAR,EAA7B,CAJT;;AAKA,WAAKR,MAAL,GAAc,KAAd;;AACA,UAAII,KAAJ,EAAW;AACP,eAAO,EAAEC,KAAF,GAAUC,KAAV,KAAoBP,MAAM,GAAGI,OAAO,CAACK,KAAR,EAA7B,CAAP,EAAsD;AAClDT,UAAAA,MAAM,CAACa,WAAP;AACH;;AACD,cAAMR,KAAN;AACH;AACJ;AArBL;;AAAA;AAAA,EAAmCP,cAAnC","sourcesContent":["import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}