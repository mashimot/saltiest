{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nexport var BootstrapHtmlTemplate = /*#__PURE__*/(function () {\n  var BootstrapHtmlTemplate = /*#__PURE__*/function () {\n    function BootstrapHtmlTemplate() {\n      _classCallCheck(this, BootstrapHtmlTemplate);\n    }\n\n    _createClass(BootstrapHtmlTemplate, [{\n      key: \"get\",\n      value: function get(content) {\n        var _this = this;\n\n        this.content = content || {};\n        var nullable = '';\n\n        if (typeof this.content.options != 'undefined') {\n          nullable = this.content.options.nullable ? \"\" : \"required\";\n        }\n\n        if (typeof this.content.html.choices != 'undefined') {\n          this.choices = this.content.html.choices.reduce(function (acc, el) {\n            var input = {\n              radio: \"<div class=\\\"radio\\\"><label><input type=\\\"radio\\\" name=\\\"\".concat(_this.content.name, \"\\\" value=\\\"\").concat(el.value, \"\\\"> \").concat(el.text, \"</label></div>\"),\n              checkbox: \"<div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" name=\\\"\".concat(_this.content.name, \"\\\" value=\\\"\").concat(el.value, \"\\\"> \").concat(el.text, \"</label></div>\"),\n              select: \"<option value=\\\"\".concat(el.value, \"\\\">\").concat(el.text, \"</option>\")\n            };\n            Object.keys(input).forEach(function (item) {\n              if (typeof acc[item] == 'undefined') {\n                acc[item] = [input[item]];\n              }\n\n              acc[item].push(input[item]);\n            });\n            return acc;\n          }, {\n            radio: [],\n            checkbox: [],\n            select: []\n          });\n        }\n\n        var data = {\n          \"html\": [\"\".concat(this.content.html.data)],\n          \"legend\": [\"<legend>\".concat(this.content.html.text, \"</legend>\")],\n          \"h1\": [\"<h1>\".concat(this.content.html.text, \"</h1>\")],\n          \"h2\": [\"<h2>\".concat(this.content.html.text, \"</h2>\")],\n          \"h3\": [\"<h3>\".concat(this.content.html.text, \"</h3>\")],\n          \"h4\": [\"<h4>\".concat(this.content.html.text, \"</h4>\")],\n          \"h5\": [\"<h5>\".concat(this.content.html.text, \"</h5>\")],\n          \"h6\": [\"<h6>\".concat(this.content.html.text, \"</h6>\")],\n          \"table\": [\"<table class=\\\"table\\\">\", //`${this.content.html.fields? this.content.html.fields.map((field, key) => (`<tr>${Object.keys(this.content.html.fields[0]).map((f, k) => `<td>${field[f]}</td>`).join('')}</tr>`)).join('') : []}`,\n          \"</table>\"],\n          \"image\": [\"<img src=\\\"\".concat(this.content.html.src, \"\\\" class=\\\"img-fluid\\\">\")],\n          \"textarea\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<textarea class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\"  \").concat(nullable ? \"\" : \"required\", \"></textarea>\"), \"</div>\"],\n          \"select\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<select class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" \").concat(nullable ? \"\" : \"required\", \">\"), \"<option value=\\\"\\\">Selecione</option>\", \"\".concat(this.choices ? this.choices.select.join('') : ''), \"</select>\", \"</div>\"],\n          \"checkbox\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"\".concat(this.choices ? this.choices.checkbox.join('') : ''), \"</div>\"],\n          \"radio\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"\".concat(this.choices ? this.choices.radio.join('') : ''), \"</div>\"],\n          \"text\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" value=\\\"\\\"  \").concat(nullable, \">\"), \"</div>\"],\n          \"number\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" value=\\\"\\\" \").concat(nullable, \">\"), \"</div>\"],\n          \"date\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" value=\\\"\\\" \").concat(nullable, \">\"), \"</div>\"]\n        };\n        return typeof data[this.content.html.tag] !== 'undefined' ? data[this.content.html.tag].join(\"\\n\") : '';\n      }\n    }, {\n      key: \"getTemplate\",\n      value: function getTemplate(pages) {\n        var _this2 = this;\n\n        var htmlPages = [];\n        var addTabSpace = \"\\n\\t\";\n        var inputs = [];\n        pages.forEach(function (page, pageNumber) {\n          htmlPages.push(\"\\n<section class=\\\"page-\".concat(pageNumber + 1, \"\\\">\"));\n          var tabNum = 1;\n          addTabSpace = _this2.tabSpace(tabNum);\n          page.rows.forEach(function (row) {\n            var grid = row.grid.split(' ');\n            htmlPages.push(\"\".concat(addTabSpace, \"<div class=\\\"row\\\">\"));\n            tabNum++;\n            addTabSpace = _this2.tabSpace(tabNum);\n            row.columns.forEach(function (column, j) {\n              htmlPages.push(\"\".concat(addTabSpace, \"<div class=\\\"col-md-\").concat(grid[j], \"\\\">\"));\n              column.contents.forEach(function (content) {\n                if (content.html.category === 'form') {\n                  inputs.push(content);\n                }\n\n                content.html['grid'] = grid[j];\n                htmlPages.push(addTabSpace + _this2.get(content));\n              });\n              htmlPages.push(\"\".concat(addTabSpace, \"</div>\"));\n            });\n            tabNum--;\n            addTabSpace = _this2.tabSpace(tabNum);\n            htmlPages.push(\"\".concat(addTabSpace, \"</div>\"));\n          });\n          htmlPages.push(\"</section>\");\n        });\n        return htmlPages.join('\\n');\n      }\n    }, {\n      key: \"tabSpace\",\n      value: function tabSpace(tabNum) {\n        var tab = \"\\t\";\n        var newTab = \"\";\n\n        for (var i = 0; i < tabNum; i++) {\n          newTab += tab;\n        }\n\n        return newTab;\n      }\n    }]);\n\n    return BootstrapHtmlTemplate;\n  }();\n\n  BootstrapHtmlTemplate.ɵfac = function BootstrapHtmlTemplate_Factory(t) {\n    return new (t || BootstrapHtmlTemplate)();\n  };\n\n  BootstrapHtmlTemplate.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BootstrapHtmlTemplate,\n    factory: BootstrapHtmlTemplate.ɵfac,\n    providedIn: 'root'\n  });\n  return BootstrapHtmlTemplate;\n})();","map":null,"metadata":{},"sourceType":"module"}