{"ast":null,"code":"// Generated automatically by nearley, version 2.18.0\n// http://github.com/Hardmath123/nearley\n(function () {\n  function id(x) {\n    return x[0];\n  }\n\n  var grammar = {\n    Lexer: undefined,\n    ParserRules: [{\n      \"name\": \"unsigned_int$ebnf$1\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"unsigned_int$ebnf$1\",\n      \"symbols\": [\"unsigned_int$ebnf$1\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"unsigned_int\",\n      \"symbols\": [\"unsigned_int$ebnf$1\"],\n      \"postprocess\": function postprocess(d) {\n        return parseInt(d[0].join(\"\"));\n      }\n    }, {\n      \"name\": \"int$ebnf$1$subexpression$1\",\n      \"symbols\": [{\n        \"literal\": \"-\"\n      }]\n    }, {\n      \"name\": \"int$ebnf$1$subexpression$1\",\n      \"symbols\": [{\n        \"literal\": \"+\"\n      }]\n    }, {\n      \"name\": \"int$ebnf$1\",\n      \"symbols\": [\"int$ebnf$1$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"int$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"int$ebnf$2\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"int$ebnf$2\",\n      \"symbols\": [\"int$ebnf$2\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"int\",\n      \"symbols\": [\"int$ebnf$1\", \"int$ebnf$2\"],\n      \"postprocess\": function postprocess(d) {\n        if (d[0]) {\n          return parseInt(d[0][0] + d[1].join(\"\"));\n        } else {\n          return parseInt(d[1].join(\"\"));\n        }\n      }\n    }, {\n      \"name\": \"unsigned_decimal$ebnf$1\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"unsigned_decimal$ebnf$1\",\n      \"symbols\": [\"unsigned_decimal$ebnf$1\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"unsigned_decimal$ebnf$2$subexpression$1$ebnf$1\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"unsigned_decimal$ebnf$2$subexpression$1$ebnf$1\",\n      \"symbols\": [\"unsigned_decimal$ebnf$2$subexpression$1$ebnf$1\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"unsigned_decimal$ebnf$2$subexpression$1\",\n      \"symbols\": [{\n        \"literal\": \".\"\n      }, \"unsigned_decimal$ebnf$2$subexpression$1$ebnf$1\"]\n    }, {\n      \"name\": \"unsigned_decimal$ebnf$2\",\n      \"symbols\": [\"unsigned_decimal$ebnf$2$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"unsigned_decimal$ebnf$2\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"unsigned_decimal\",\n      \"symbols\": [\"unsigned_decimal$ebnf$1\", \"unsigned_decimal$ebnf$2\"],\n      \"postprocess\": function postprocess(d) {\n        return parseFloat(d[0].join(\"\") + (d[1] ? \".\" + d[1][1].join(\"\") : \"\"));\n      }\n    }, {\n      \"name\": \"decimal$ebnf$1\",\n      \"symbols\": [{\n        \"literal\": \"-\"\n      }],\n      \"postprocess\": id\n    }, {\n      \"name\": \"decimal$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"decimal$ebnf$2\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"decimal$ebnf$2\",\n      \"symbols\": [\"decimal$ebnf$2\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"decimal$ebnf$3$subexpression$1$ebnf$1\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"decimal$ebnf$3$subexpression$1$ebnf$1\",\n      \"symbols\": [\"decimal$ebnf$3$subexpression$1$ebnf$1\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"decimal$ebnf$3$subexpression$1\",\n      \"symbols\": [{\n        \"literal\": \".\"\n      }, \"decimal$ebnf$3$subexpression$1$ebnf$1\"]\n    }, {\n      \"name\": \"decimal$ebnf$3\",\n      \"symbols\": [\"decimal$ebnf$3$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"decimal$ebnf$3\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"decimal\",\n      \"symbols\": [\"decimal$ebnf$1\", \"decimal$ebnf$2\", \"decimal$ebnf$3\"],\n      \"postprocess\": function postprocess(d) {\n        return parseFloat((d[0] || \"\") + d[1].join(\"\") + (d[2] ? \".\" + d[2][1].join(\"\") : \"\"));\n      }\n    }, {\n      \"name\": \"percentage\",\n      \"symbols\": [\"decimal\", {\n        \"literal\": \"%\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[0] / 100;\n      }\n    }, {\n      \"name\": \"jsonfloat$ebnf$1\",\n      \"symbols\": [{\n        \"literal\": \"-\"\n      }],\n      \"postprocess\": id\n    }, {\n      \"name\": \"jsonfloat$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"jsonfloat$ebnf$2\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"jsonfloat$ebnf$2\",\n      \"symbols\": [\"jsonfloat$ebnf$2\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"jsonfloat$ebnf$3$subexpression$1$ebnf$1\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"jsonfloat$ebnf$3$subexpression$1$ebnf$1\",\n      \"symbols\": [\"jsonfloat$ebnf$3$subexpression$1$ebnf$1\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"jsonfloat$ebnf$3$subexpression$1\",\n      \"symbols\": [{\n        \"literal\": \".\"\n      }, \"jsonfloat$ebnf$3$subexpression$1$ebnf$1\"]\n    }, {\n      \"name\": \"jsonfloat$ebnf$3\",\n      \"symbols\": [\"jsonfloat$ebnf$3$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"jsonfloat$ebnf$3\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"jsonfloat$ebnf$4$subexpression$1$ebnf$1\",\n      \"symbols\": [/[+-]/],\n      \"postprocess\": id\n    }, {\n      \"name\": \"jsonfloat$ebnf$4$subexpression$1$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"jsonfloat$ebnf$4$subexpression$1$ebnf$2\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"jsonfloat$ebnf$4$subexpression$1$ebnf$2\",\n      \"symbols\": [\"jsonfloat$ebnf$4$subexpression$1$ebnf$2\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"jsonfloat$ebnf$4$subexpression$1\",\n      \"symbols\": [/[eE]/, \"jsonfloat$ebnf$4$subexpression$1$ebnf$1\", \"jsonfloat$ebnf$4$subexpression$1$ebnf$2\"]\n    }, {\n      \"name\": \"jsonfloat$ebnf$4\",\n      \"symbols\": [\"jsonfloat$ebnf$4$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"jsonfloat$ebnf$4\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"jsonfloat\",\n      \"symbols\": [\"jsonfloat$ebnf$1\", \"jsonfloat$ebnf$2\", \"jsonfloat$ebnf$3\", \"jsonfloat$ebnf$4\"],\n      \"postprocess\": function postprocess(d) {\n        return parseFloat((d[0] || \"\") + d[1].join(\"\") + (d[2] ? \".\" + d[2][1].join(\"\") : \"\") + (d[3] ? \"e\" + (d[3][1] || \"+\") + d[3][2].join(\"\") : \"\"));\n      }\n    }, {\n      \"name\": \"_$ebnf$1\",\n      \"symbols\": []\n    }, {\n      \"name\": \"_$ebnf$1\",\n      \"symbols\": [\"_$ebnf$1\", \"wschar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"_\",\n      \"symbols\": [\"_$ebnf$1\"],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"__$ebnf$1\",\n      \"symbols\": [\"wschar\"]\n    }, {\n      \"name\": \"__$ebnf$1\",\n      \"symbols\": [\"__$ebnf$1\", \"wschar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"__\",\n      \"symbols\": [\"__$ebnf$1\"],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"wschar\",\n      \"symbols\": [/[ \\t\\n\\v\\f]/],\n      \"postprocess\": id\n    }, {\n      \"name\": \"MAIN$ebnf$1\",\n      \"symbols\": []\n    }, {\n      \"name\": \"MAIN$ebnf$1\",\n      \"symbols\": [\"MAIN$ebnf$1\", \"MAINCREATE\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"MAIN\",\n      \"symbols\": [\"MAIN$ebnf$1\"],\n      \"postprocess\": function postprocess(d) {\n        return d[0];\n      }\n    }, {\n      \"name\": \"MAINCREATE$subexpression$1$ebnf$1\",\n      \"symbols\": []\n    }, {\n      \"name\": \"MAINCREATE$subexpression$1$ebnf$1$subexpression$1\",\n      \"symbols\": [\"create_definition\", \"_\", \"comma\", \"_\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"MAINCREATE$subexpression$1$ebnf$1\",\n      \"symbols\": [\"MAINCREATE$subexpression$1$ebnf$1\", \"MAINCREATE$subexpression$1$ebnf$1$subexpression$1\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"MAINCREATE$subexpression$1\",\n      \"symbols\": [\"create_table_statement\", {\n        \"literal\": \"(\"\n      }, \"_\", \"MAINCREATE$subexpression$1$ebnf$1\", \"create_definition\", \"_\", {\n        \"literal\": \")\"\n      }, \"_\", {\n        \"literal\": \";\"\n      }, \"_\"],\n      \"postprocess\": function postprocess(d) {\n        var create_definition = [];\n\n        if (d[3].length > 0) {\n          create_definition = d[3];\n        }\n\n        return {\n          create_table_statement: d[0],\n          create_definition: create_definition,\n          last_create_definition: d[4]\n        };\n      }\n    }, {\n      \"name\": \"MAINCREATE\",\n      \"symbols\": [\"MAINCREATE$subexpression$1\"],\n      \"postprocess\": function postprocess(d) {\n        return d[0];\n      }\n    }, {\n      \"name\": \"create_table_statement$ebnf$1$subexpression$1\",\n      \"symbols\": [\"__\", \"OR_REPLACE\"]\n    }, {\n      \"name\": \"create_table_statement$ebnf$1\",\n      \"symbols\": [\"create_table_statement$ebnf$1$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"create_table_statement$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"create_table_statement$ebnf$2$subexpression$1\",\n      \"symbols\": [\"__\", \"TEMPORARY\"]\n    }, {\n      \"name\": \"create_table_statement$ebnf$2\",\n      \"symbols\": [\"create_table_statement$ebnf$2$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"create_table_statement$ebnf$2\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"create_table_statement$ebnf$3$subexpression$1\",\n      \"symbols\": [\"__\", \"IF_NOT_EXISTS\"]\n    }, {\n      \"name\": \"create_table_statement$ebnf$3\",\n      \"symbols\": [\"create_table_statement$ebnf$3$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"create_table_statement$ebnf$3\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"create_table_statement\",\n      \"symbols\": [\"_\", \"CREATE_TABLE\", \"create_table_statement$ebnf$1\", \"create_table_statement$ebnf$2\", \"create_table_statement$ebnf$3\", \"__\", \"table_name\", \"_\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          table_name: d[6].join(\"\")\n        };\n      }\n    }, {\n      \"name\": \"CREATE_TABLE$subexpression$1\",\n      \"symbols\": [/[cC]/, /[rR]/, /[eE]/, /[aA]/, /[tT]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"CREATE_TABLE$subexpression$2\",\n      \"symbols\": [/[tT]/, /[aA]/, /[bB]/, /[lL]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"CREATE_TABLE\",\n      \"symbols\": [\"CREATE_TABLE$subexpression$1\", \"__\", \"CREATE_TABLE$subexpression$2\"]\n    }, {\n      \"name\": \"OR_REPLACE$subexpression$1\",\n      \"symbols\": [/[oO]/, /[rR]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"OR_REPLACE$subexpression$2\",\n      \"symbols\": [/[rR]/, /[eE]/, /[pP]/, /[lL]/, /[aA]/, /[cC]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"OR_REPLACE\",\n      \"symbols\": [\"OR_REPLACE$subexpression$1\", \"__\", \"OR_REPLACE$subexpression$2\"]\n    }, {\n      \"name\": \"TEMPORARY$subexpression$1\",\n      \"symbols\": [/[tT]/, /[eE]/, /[mM]/, /[pP]/, /[oO]/, /[rR]/, /[aA]/, /[rR]/, /[yY]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"TEMPORARY\",\n      \"symbols\": [\"TEMPORARY$subexpression$1\"]\n    }, {\n      \"name\": \"IF_NOT_EXISTS$subexpression$1\",\n      \"symbols\": [/[iI]/, /[fF]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"IF_NOT_EXISTS$subexpression$2\",\n      \"symbols\": [/[nN]/, /[oO]/, /[tT]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"IF_NOT_EXISTS$subexpression$3\",\n      \"symbols\": [/[eE]/, /[xX]/, /[iI]/, /[sS]/, /[tT]/, /[sS]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"IF_NOT_EXISTS\",\n      \"symbols\": [\"IF_NOT_EXISTS$subexpression$1\", \"__\", \"IF_NOT_EXISTS$subexpression$2\", \"__\", \"IF_NOT_EXISTS$subexpression$3\"]\n    }, {\n      \"name\": \"table_name$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"table_name$ebnf$1\",\n      \"symbols\": [\"table_name$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"table_name\",\n      \"symbols\": [\"table_name$ebnf$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"create_definition$subexpression$1$ebnf$1\",\n      \"symbols\": []\n    }, {\n      \"name\": \"create_definition$subexpression$1$ebnf$1$subexpression$1\",\n      \"symbols\": [\"__\", \"column_definition\"],\n      \"postprocess\": function postprocess(d) {\n        return d[1];\n      }\n    }, {\n      \"name\": \"create_definition$subexpression$1$ebnf$1\",\n      \"symbols\": [\"create_definition$subexpression$1$ebnf$1\", \"create_definition$subexpression$1$ebnf$1$subexpression$1\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"create_definition$subexpression$1\",\n      \"symbols\": [\"column_name\", \"__\", \"data_type\", \"create_definition$subexpression$1$ebnf$1\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          name: d[0].join(\"\"),\n          data_type: d[2],\n          column_definition: d[3]\n        };\n      }\n    }, {\n      \"name\": \"create_definition\",\n      \"symbols\": [\"create_definition$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"create_definition\",\n      \"symbols\": [\"constraint_foreign_key\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          name: null,\n          data_type: null,\n          column_definition: null,\n          constraint_foreign_key: d[0]\n        };\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$subexpression$1\",\n      \"symbols\": [/[cC]/, /[oO]/, /[nN]/, /[sS]/, /[tT]/, /[rR]/, /[aA]/, /[iI]/, /[nN]/, /[tT]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$1\",\n      \"symbols\": [\"constraint_foreign_key$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$subexpression$2\",\n      \"symbols\": [/[fF]/, /[oO]/, /[rR]/, /[eE]/, /[iI]/, /[gG]/, /[nN]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$subexpression$3\",\n      \"symbols\": [/[kK]/, /[eE]/, /[yY]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$subexpression$4\",\n      \"symbols\": [/[rR]/, /[eE]/, /[fF]/, /[eE]/, /[rR]/, /[eE]/, /[nN]/, /[cC]/, /[eE]/, /[sS]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$1\",\n      \"symbols\": [/[mM]/, /[aA]/, /[tT]/, /[cC]/, /[hH]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$2\",\n      \"symbols\": [/[fF]/, /[uU]/, /[lL]/, /[lL]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1\",\n      \"symbols\": [\"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$1\", \"__\", \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$2\"],\n      \"postprocess\": function postprocess(d) {\n        return \"match full\";\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$3\",\n      \"symbols\": [/[mM]/, /[aA]/, /[tT]/, /[cC]/, /[hH]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$4\",\n      \"symbols\": [/[pP]/, /[aA]/, /[rR]/, /[tT]/, /[iI]/, /[aA]/, /[lL]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1\",\n      \"symbols\": [\"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$3\", \"__\", \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$4\"],\n      \"postprocess\": function postprocess(d) {\n        return \"match partial\";\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$5\",\n      \"symbols\": [/[mM]/, /[aA]/, /[tT]/, /[cC]/, /[hH]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$6\",\n      \"symbols\": [/[sS]/, /[iI]/, /[mM]/, /[pP]/, /[lL]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2$subexpression$1\",\n      \"symbols\": [\"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$5\", \"__\", \"constraint_foreign_key$ebnf$2$subexpression$1$subexpression$6\"],\n      \"postprocess\": function postprocess(d) {\n        return \"match simple\";\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2\",\n      \"symbols\": [\"constraint_foreign_key$ebnf$2$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$2\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$3$subexpression$1$subexpression$1\",\n      \"symbols\": [/[oO]/, /[nN]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$3$subexpression$1$subexpression$2\",\n      \"symbols\": [/[dD]/, /[eE]/, /[lL]/, /[eE]/, /[tT]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$3$subexpression$1\",\n      \"symbols\": [\"__\", \"constraint_foreign_key$ebnf$3$subexpression$1$subexpression$1\", \"__\", \"constraint_foreign_key$ebnf$3$subexpression$1$subexpression$2\", \"__\", \"reference_option\"],\n      \"postprocess\": function postprocess(d) {\n        return d[4];\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$3\",\n      \"symbols\": [\"constraint_foreign_key$ebnf$3$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$3\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$4$subexpression$1$subexpression$1\",\n      \"symbols\": [/[oO]/, /[nN]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$4$subexpression$1$subexpression$2\",\n      \"symbols\": [/[uU]/, /[pP]/, /[dD]/, /[aA]/, /[tT]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$4$subexpression$1\",\n      \"symbols\": [\"__\", \"constraint_foreign_key$ebnf$4$subexpression$1$subexpression$1\", \"__\", \"constraint_foreign_key$ebnf$4$subexpression$1$subexpression$2\", \"__\", \"reference_option\"],\n      \"postprocess\": function postprocess(d) {\n        return d[4];\n      }\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$4\",\n      \"symbols\": [\"constraint_foreign_key$ebnf$4$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"constraint_foreign_key$ebnf$4\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"constraint_foreign_key\",\n      \"symbols\": [\"constraint_foreign_key$subexpression$1\", \"__\", \"constraint_foreign_key$ebnf$1\", \"__\", \"constraint_foreign_key$subexpression$2\", \"__\", \"constraint_foreign_key$subexpression$3\", \"__\", \"this_table_column\", \"__\", \"constraint_foreign_key$subexpression$4\", \"__\", \"reference_table_name\", \"_\", \"reference_column_name\", \"constraint_foreign_key$ebnf$2\", \"constraint_foreign_key$ebnf$3\", \"constraint_foreign_key$ebnf$4\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          type: 'foreign key',\n          this_table_column: d[8],\n          reference_definition: {\n            table_name: d[12],\n            column_name: d[14],\n            match: d[15],\n            on_delete: d[16] ? d[16].join(\"\") : null,\n            on_update: d[17] ? d[17].join(\"\") : null\n          }\n        };\n      }\n    }, {\n      \"name\": \"this_table_column\",\n      \"symbols\": [\"list_of_strings\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"reference_table_name$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"reference_table_name$ebnf$1\",\n      \"symbols\": [\"reference_table_name$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"reference_table_name\",\n      \"symbols\": [{\n        \"literal\": \"`\"\n      }, \"reference_table_name$ebnf$1\", {\n        \"literal\": \"`\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[1].join(\"\");\n      }\n    }, {\n      \"name\": \"reference_table_name$ebnf$2\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"reference_table_name$ebnf$2\",\n      \"symbols\": [\"reference_table_name$ebnf$2\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"reference_table_name\",\n      \"symbols\": [\"reference_table_name$ebnf$2\"],\n      \"postprocess\": function postprocess(d) {\n        return d[0].join(\"\");\n      }\n    }, {\n      \"name\": \"reference_column_name\",\n      \"symbols\": [\"list_of_strings\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"reference_option$subexpression$1$subexpression$1\",\n      \"symbols\": [/[rR]/, /[eE]/, /[sS]/, /[tT]/, /[rR]/, /[iI]/, /[cC]/, /[tT]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1\",\n      \"symbols\": [\"reference_option$subexpression$1$subexpression$1\"]\n    }, {\n      \"name\": \"reference_option$subexpression$1$subexpression$2\",\n      \"symbols\": [/[cC]/, /[aA]/, /[sS]/, /[cC]/, /[aA]/, /[dD]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1\",\n      \"symbols\": [\"reference_option$subexpression$1$subexpression$2\"]\n    }, {\n      \"name\": \"reference_option$subexpression$1$string$1\",\n      \"symbols\": [{\n        \"literal\": \"S\"\n      }, {\n        \"literal\": \"E\"\n      }, {\n        \"literal\": \"T\"\n      }],\n      \"postprocess\": function joiner(d) {\n        return d.join('');\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1$subexpression$3\",\n      \"symbols\": [/[nN]/, /[uU]/, /[lL]/, /[lL]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1\",\n      \"symbols\": [\"reference_option$subexpression$1$string$1\", \"__\", \"reference_option$subexpression$1$subexpression$3\"]\n    }, {\n      \"name\": \"reference_option$subexpression$1$subexpression$4\",\n      \"symbols\": [/[nN]/, /[oO]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1$subexpression$5\",\n      \"symbols\": [/[aA]/, /[cC]/, /[tT]/, /[iI]/, /[oO]/, /[nN]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1\",\n      \"symbols\": [\"reference_option$subexpression$1$subexpression$4\", \"__\", \"reference_option$subexpression$1$subexpression$5\"]\n    }, {\n      \"name\": \"reference_option$subexpression$1$subexpression$6\",\n      \"symbols\": [/[sS]/, /[eE]/, /[tT]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1$subexpression$7\",\n      \"symbols\": [/[dD]/, /[eE]/, /[fF]/, /[aA]/, /[uU]/, /[lL]/, /[tT]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"reference_option$subexpression$1\",\n      \"symbols\": [\"reference_option$subexpression$1$subexpression$6\", \"__\", \"reference_option$subexpression$1$subexpression$7\"]\n    }, {\n      \"name\": \"reference_option\",\n      \"symbols\": [\"reference_option$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"list_of_strings$subexpression$1$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"list_of_strings$subexpression$1$ebnf$1\",\n      \"symbols\": [\"list_of_strings$subexpression$1$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"list_of_strings$subexpression$1\",\n      \"symbols\": [{\n        \"literal\": \"`\"\n      }, \"list_of_strings$subexpression$1$ebnf$1\", {\n        \"literal\": \"`\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[1].join(\"\");\n      }\n    }, {\n      \"name\": \"list_of_strings$subexpression$1$ebnf$2\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"list_of_strings$subexpression$1$ebnf$2\",\n      \"symbols\": [\"list_of_strings$subexpression$1$ebnf$2\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"list_of_strings$subexpression$1\",\n      \"symbols\": [\"list_of_strings$subexpression$1$ebnf$2\"],\n      \"postprocess\": function postprocess(d) {\n        return d[0].join(\"\");\n      }\n    }, {\n      \"name\": \"list_of_strings\",\n      \"symbols\": [{\n        \"literal\": \"(\"\n      }, \"_\", \"list_of_strings$subexpression$1\", \"_\", {\n        \"literal\": \")\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[2];\n      }\n    }, {\n      \"name\": \"data_type\",\n      \"symbols\": [\"oracle_data_type\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"column_definition\",\n      \"symbols\": [\"oracle_column_definition\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"column_name$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"column_name$ebnf$1\",\n      \"symbols\": [\"column_name$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"column_name\",\n      \"symbols\": [\"column_name$ebnf$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"column_name$ebnf$2\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"column_name$ebnf$2\",\n      \"symbols\": [\"column_name$ebnf$2\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"column_name\",\n      \"symbols\": [{\n        \"literal\": \"`\"\n      }, \"column_name$ebnf$2\", {\n        \"literal\": \"`\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[1];\n      }\n    }, {\n      \"name\": \"data_type_size\",\n      \"symbols\": [\"_\", {\n        \"literal\": \"(\"\n      }, \"_\", \"unsigned_decimal\", \"_\", {\n        \"literal\": \")\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[3];\n      }\n    }, {\n      \"name\": \"default_value\",\n      \"symbols\": [\"S_NUMBER\"]\n    }, {\n      \"name\": \"default_value$ebnf$1$subexpression$1$ebnf$1\",\n      \"symbols\": [\"S_NUMBER\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"default_value$ebnf$1$subexpression$1$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"default_value$ebnf$1$subexpression$1\",\n      \"symbols\": [\"S_LPARENS\", \"_\", \"default_value$ebnf$1$subexpression$1$ebnf$1\", \"_\", \"S_RPARENS\"],\n      \"postprocess\": function postprocess(d) {\n        return d[2];\n      }\n    }, {\n      \"name\": \"default_value$ebnf$1\",\n      \"symbols\": [\"default_value$ebnf$1$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"default_value$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"default_value\",\n      \"symbols\": [\"default_value$ebnf$1\"]\n    }, {\n      \"name\": \"default_value\",\n      \"symbols\": [\"O_QUOTED_STRING\"]\n    }, {\n      \"name\": \"O_QUOTED_STRING\",\n      \"symbols\": [\"S_DQUOTE_STRING\"]\n    }, {\n      \"name\": \"O_QUOTED_STRING\",\n      \"symbols\": [\"S_SQUOTE_STRING\"]\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$1\",\n      \"symbols\": [/[cC]/, /[hH]/, /[aA]/, /[rR]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$1\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$1\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$1\", \"oracle_data_type$subexpression$1$ebnf$1\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'CHAR',\n          tag: 'text',\n          length: d[1]\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$2\",\n      \"symbols\": [/[nN]/, /[cC]/, /[hH]/, /[aA]/, /[rR]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$2\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$2\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$2\", \"oracle_data_type$subexpression$1$ebnf$2\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'NCHAR',\n          tag: 'text',\n          length: d[1]\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$3\",\n      \"symbols\": [/[vV]/, /[aA]/, /[rR]/, /[cC]/, /[hH]/, /[aA]/, /[rR]/, {\n        \"literal\": \"2\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$3\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$3\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$3\", \"oracle_data_type$subexpression$1$ebnf$3\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: d[0],\n          tag: 'textarea',\n          length: d[1]\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$4\",\n      \"symbols\": [/[vV]/, /[aA]/, /[rR]/, /[cC]/, /[hH]/, /[aA]/, /[rR]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$4\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$4\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$4\", \"oracle_data_type$subexpression$1$ebnf$4\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: d[0],\n          tag: 'textarea',\n          length: d[1]\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$5\",\n      \"symbols\": [/[nN]/, /[vV]/, /[aA]/, /[rR]/, /[cC]/, /[hH]/, /[aA]/, /[rR]/, {\n        \"literal\": \"2\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$5\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$5\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$5\", \"oracle_data_type$subexpression$1$ebnf$5\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'NVARCHAR2',\n          tag: 'text',\n          length: d[1]\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$6\",\n      \"symbols\": [/[iI]/, /[nN]/, /[tT]/, /[eE]/, /[gG]/, /[eE]/, /[rR]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$6\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$6\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$6\", \"oracle_data_type$subexpression$1$ebnf$6\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'INTEGER',\n          tag: 'number',\n          length: d[1]\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$7\",\n      \"symbols\": [/[cC]/, /[lL]/, /[oO]/, /[bB]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$7\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'CLOB',\n          tag: 'textarea'\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$8\",\n      \"symbols\": [/[nN]/, /[cC]/, /[lL]/, /[oO]/, /[bB]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$8\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'NCLOB',\n          tag: 'textarea'\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$9\",\n      \"symbols\": [/[lL]/, /[oO]/, /[nN]/, /[gG]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$7\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$7\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$9\", \"oracle_data_type$subexpression$1$ebnf$7\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'LONG',\n          tag: 'number',\n          length: d[1]\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$10\",\n      \"symbols\": [/[nN]/, /[uU]/, /[mM]/, /[bB]/, /[eE]/, /[rR]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$8\",\n      \"symbols\": [\"data_type_size\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$ebnf$8\",\n      \"symbols\": [],\n      \"postprocess\": function postprocess(d) {\n        return null;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$10\", \"oracle_data_type$subexpression$1$ebnf$8\"],\n      \"postprocess\": function postprocess(d) {\n        var data_type = {\n          datatype: 'NUMBER',\n          tag: 'number'\n        };\n        var number = d[1];\n\n        if (number != null) {\n          var numberAsString = number.toString();\n\n          if (numberAsString.indexOf('.') !== -1) {\n            var numberArr = numberAsString.split('.');\n            data_type.digits = numberArr[0];\n            data_type.decimals = numberArr[1] || '';\n          } else {\n            data_type.length = number;\n          }\n        }\n\n        return data_type;\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$11\",\n      \"symbols\": [/[dD]/, /[aA]/, /[tT]/, /[eE]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$11\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'DATE',\n          tag: 'date'\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$12\",\n      \"symbols\": [/[iI]/, /[nN]/, /[tT]/, /[eE]/, /[rR]/, /[vV]/, /[aA]/, /[lL]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$12\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'INTERVAL',\n          tag: 'text'\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1$subexpression$13\",\n      \"symbols\": [/[tT]/, /[iI]/, /[mM]/, /[eE]/, /[sS]/, /[tT]/, /[aA]/, /[mM]/, /[pP]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_data_type$subexpression$1\",\n      \"symbols\": [\"oracle_data_type$subexpression$1$subexpression$13\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          datatype: 'TIMESTAMP',\n          tag: 'date'\n        };\n      }\n    }, {\n      \"name\": \"oracle_data_type\",\n      \"symbols\": [\"oracle_data_type$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1$subexpression$1\",\n      \"symbols\": [/[nN]/, /[oO]/, /[tT]/, {\n        \"literal\": \" \"\n      }, /[nN]/, /[uU]/, /[lL]/, /[lL]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1\",\n      \"symbols\": [\"oracle_column_definition$subexpression$1$subexpression$1\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          type: \"not null\",\n          nullable: false\n        };\n      }\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1$subexpression$2\",\n      \"symbols\": [/[nN]/, /[uU]/, /[lL]/, /[lL]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1\",\n      \"symbols\": [\"oracle_column_definition$subexpression$1$subexpression$2\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          type: \"null\",\n          nullable: true\n        };\n      }\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1$subexpression$3\",\n      \"symbols\": [/[pP]/, /[rR]/, /[iI]/, /[mM]/, /[aA]/, /[rR]/, /[yY]/, {\n        \"literal\": \" \"\n      }, /[kK]/, /[eE]/, /[yY]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1\",\n      \"symbols\": [\"oracle_column_definition$subexpression$1$subexpression$3\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          type: \"primary key\",\n          is_primary_key: true\n        };\n      }\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1$subexpression$4\",\n      \"symbols\": [/[dD]/, /[eE]/, /[fF]/, /[aA]/, /[uU]/, /[lL]/, /[tT]/],\n      \"postprocess\": function postprocess(d) {\n        return d.join(\"\");\n      }\n    }, {\n      \"name\": \"oracle_column_definition$subexpression$1\",\n      \"symbols\": [\"oracle_column_definition$subexpression$1$subexpression$4\", \"__\", \"default_value\"],\n      \"postprocess\": function postprocess(d) {\n        return {\n          type: \"default\",\n          values: d[2].join(\"\")\n        };\n      }\n    }, {\n      \"name\": \"oracle_column_definition\",\n      \"symbols\": [\"oracle_column_definition$subexpression$1\"],\n      \"postprocess\": id\n    }, {\n      \"name\": \"comma\",\n      \"symbols\": [/[,]/],\n      \"postprocess\": id\n    }, {\n      \"name\": \"strchar\",\n      \"symbols\": [/[\\w]/],\n      \"postprocess\": id\n    }, {\n      \"name\": \"S_NUMBER$ebnf$1\",\n      \"symbols\": [/[0-9]/]\n    }, {\n      \"name\": \"S_NUMBER$ebnf$1\",\n      \"symbols\": [\"S_NUMBER$ebnf$1\", /[0-9]/],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"S_NUMBER\",\n      \"symbols\": [\"S_NUMBER$ebnf$1\"]\n    }, {\n      \"name\": \"S_DECIMAL$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"S_DECIMAL$ebnf$1\",\n      \"symbols\": [\"S_DECIMAL$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"S_DECIMAL\",\n      \"symbols\": [\"S_DECIMAL$ebnf$1\"]\n    }, {\n      \"name\": \"S_EQUAL\",\n      \"symbols\": [{\n        \"literal\": \"=\"\n      }]\n    }, {\n      \"name\": \"S_LPARENS\",\n      \"symbols\": [{\n        \"literal\": \"(\"\n      }]\n    }, {\n      \"name\": \"S_RPARENS\",\n      \"symbols\": [{\n        \"literal\": \")\"\n      }]\n    }, {\n      \"name\": \"S_COMMA\",\n      \"symbols\": [{\n        \"literal\": \",\"\n      }]\n    }, {\n      \"name\": \"S_SEMICOLON\",\n      \"symbols\": [{\n        \"literal\": \";\"\n      }]\n    }, {\n      \"name\": \"S_BIT_FORMAT\",\n      \"symbols\": [{\n        \"literal\": \"0\"\n      }]\n    }, {\n      \"name\": \"S_BIT_FORMAT\",\n      \"symbols\": [{\n        \"literal\": \"1\"\n      }]\n    }, {\n      \"name\": \"S_DQUOTE_STRING$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"S_DQUOTE_STRING$ebnf$1\",\n      \"symbols\": [\"S_DQUOTE_STRING$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"S_DQUOTE_STRING\",\n      \"symbols\": [{\n        \"literal\": \"\\\"\"\n      }, \"_\", \"S_DQUOTE_STRING$ebnf$1\", \"_\", {\n        \"literal\": \"\\\"\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[2].join(\"\");\n      }\n    }, {\n      \"name\": \"S_SQUOTE_STRING$ebnf$1\",\n      \"symbols\": [\"strchar\"]\n    }, {\n      \"name\": \"S_SQUOTE_STRING$ebnf$1\",\n      \"symbols\": [\"S_SQUOTE_STRING$ebnf$1\", \"strchar\"],\n      \"postprocess\": function arrpush(d) {\n        return d[0].concat([d[1]]);\n      }\n    }, {\n      \"name\": \"S_SQUOTE_STRING\",\n      \"symbols\": [{\n        \"literal\": \"'\"\n      }, \"_\", \"S_SQUOTE_STRING$ebnf$1\", \"_\", {\n        \"literal\": \"'\"\n      }],\n      \"postprocess\": function postprocess(d) {\n        return d[2].join(\"\");\n      }\n    }],\n    ParserStart: \"MAIN\"\n  };\n\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = grammar;\n  } else {\n    window.grammar = grammar;\n  }\n})();","map":null,"metadata":{},"sourceType":"script"}