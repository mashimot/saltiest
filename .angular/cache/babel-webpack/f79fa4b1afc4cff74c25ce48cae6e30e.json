{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport __NG_CLI_RESOURCE__0 from \"./form-info.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./form-info.component.css?ngResource\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { HtmlElementService } from '../shared/services/html-element.service';\n\nvar FormInfoComponent = /*#__PURE__*/function () {\n  function FormInfoComponent(formBuilder, htmlElementService) {\n    _classCallCheck(this, FormInfoComponent);\n\n    this.formBuilder = formBuilder;\n    this.htmlElementService = htmlElementService;\n    this.formSubmitAttempt = false;\n    this.pagesChange = new EventEmitter();\n  }\n\n  _createClass(FormInfoComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.tags$ = this.htmlElementService.getTags();\n      this.form = this.formBuilder.group({\n        \"pages\": this.formBuilder.array([])\n      }); //\n\n      this.pages.forEach(function (page, pageIndex) {\n        _this.getPages().push(_this.createPages());\n\n        var rowsFormArray = _this.getPagesRows(pageIndex);\n\n        page.rows.forEach(function (row, rowIndex) {\n          rowsFormArray.push(_this.createPagesRows());\n\n          var columnsFormArray = _this.getPagesRowsColumns(pageIndex, rowIndex);\n\n          row.columns.forEach(function (column, columnIndex) {\n            columnsFormArray.push(_this.createPagesRowsColumns());\n\n            var contentsFormArray = _this.getPagesRowsColumnsContents(pageIndex, rowIndex, columnIndex);\n\n            column.contents.forEach(function (content, contentIndex) {\n              contentsFormArray.push(_this.createPagesRowsColumnsContents());\n\n              if (content && content.html && content.html.choices) {\n                var htmlChoicesFormArray = _this.getPagesRowsColumnsContentsChoices(pageIndex, rowIndex, columnIndex, contentIndex).get('html.choices');\n\n                content.html.choices.forEach(function (choice) {\n                  htmlChoicesFormArray.push(_this.formBuilder.group({\n                    'text': ['', Validators.required],\n                    'value': ['', Validators.required]\n                  }));\n                });\n              }\n            });\n          });\n        });\n      });\n      this.getPages().patchValue(this.pages);\n      this.form.valueChanges.subscribe(function (result) {\n        _this.pagesChange.emit(result.pages);\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {//this.pages = this.form.get('pages').value;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      this.formSubmitAttempt = true;\n\n      if (this.f.valid) {\n        console.log('form submitted');\n      } else {\n        this.validateAllFormFields(this.f);\n      }\n    }\n  }, {\n    key: \"validateAllFormFields\",\n    value: function validateAllFormFields(control) {\n      var _this2 = this;\n\n      if (control instanceof FormControl) {\n        control.markAsTouched({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        Object.keys(control.controls).forEach(function (field) {\n          var groupControl = control.get(field);\n\n          _this2.validateAllFormFields(groupControl);\n        });\n      } else if (control instanceof FormArray) {\n        var controlAsFormArray = control;\n        controlAsFormArray.controls.forEach(function (arrayControl) {\n          return _this2.validateAllFormFields(arrayControl);\n        });\n      }\n    }\n  }, {\n    key: \"f\",\n    get: function get() {\n      return this.form;\n    }\n    /*    isFieldValid(field: string) {\r\n            return !this.f.get(field)?.valid && this.f.get(field)?.touched;\r\n        }*/\n\n  }, {\n    key: \"getField\",\n    value: function getField(field) {\n      return this.f.get(field);\n    }\n  }, {\n    key: \"getPagesRowsColumnsContents\",\n    value: function getPagesRowsColumnsContents(indexPages, indexRows, indexColumns) {\n      return this.form.get('pages').at(indexPages).get('rows').at(indexRows).get('columns').at(indexColumns).get('contents');\n    }\n  }, {\n    key: \"getPagesRowsColumnsContentsChoices\",\n    value: function getPagesRowsColumnsContentsChoices(indexPages, indexRows, indexColumns, indexContents) {\n      return this.form.get('pages').at(indexPages).get('rows').at(indexRows).get('columns').at(indexColumns).get('contents').at(indexContents);\n    }\n  }, {\n    key: \"deletePagesRowsColumnsContents\",\n    value: function deletePagesRowsColumnsContents(indexPages, indexRows, indexColumns, indexContents) {\n      this.getPagesRowsColumnsContents(indexPages, indexRows, indexColumns).removeAt(indexContents);\n    }\n  }, {\n    key: \"createPagesRowsColumnsContents\",\n    value: function createPagesRowsColumnsContents() {\n      return this.formBuilder.group({\n        'name': ['', Validators.required],\n        'html': this.formBuilder.group({\n          'content_choice_id': ['', Validators.required],\n          'label': ['', Validators.required],\n          'category': ['', Validators.required],\n          'text': ['', Validators.required],\n          'tag': ['', Validators.required],\n          'choices': this.formBuilder.array([]),\n          'class': [''],\n          'src': [''],\n          'data': [''],\n          'required': ['']\n        }),\n        'type': this.formBuilder.group({\n          'length': ['', [Validators.pattern('^[0-9]+(.[0-9])?$')]]\n        }),\n        'options': this.formBuilder.group({\n          'nullable': ['', Validators.required]\n        })\n      });\n    }\n  }, {\n    key: \"getPagesRowsColumns\",\n    value: function getPagesRowsColumns(indexPages, indexRows) {\n      return this.form.get('pages').at(indexPages).get('rows').at(indexRows).get('columns');\n    }\n  }, {\n    key: \"deletePagesRowsColumns\",\n    value: function deletePagesRowsColumns(indexPages, indexRows, indexColumns) {\n      this.getPagesRowsColumns(indexPages, indexRows).removeAt(indexColumns);\n    }\n  }, {\n    key: \"createPagesRowsColumns\",\n    value: function createPagesRowsColumns() {\n      return this.formBuilder.group({\n        \"contents\": this.formBuilder.array([//this.createPagesRowsColumnsContents()\n        ])\n      });\n    }\n  }, {\n    key: \"getPagesRows\",\n    value: function getPagesRows(indexPages) {\n      return this.form.get('pages').at(indexPages).get('rows');\n    }\n  }, {\n    key: \"deletePagesRows\",\n    value: function deletePagesRows(indexPages, indexRows) {\n      this.getPagesRows(indexPages).removeAt(indexRows);\n    }\n  }, {\n    key: \"createPagesRows\",\n    value: function createPagesRows() {\n      return this.formBuilder.group({\n        \"grid\": ['', [Validators.required]],\n        \"columns\": this.formBuilder.array([//this.createPagesRowsColumns()\n        ])\n      });\n    }\n  }, {\n    key: \"getPages\",\n    value: function getPages() {\n      return this.form.get('pages');\n    }\n  }, {\n    key: \"deletePages\",\n    value: function deletePages(indexPages) {\n      this.getPages().removeAt(indexPages);\n    }\n  }, {\n    key: \"createPages\",\n    value: function createPages() {\n      return this.formBuilder.group({\n        \"rows\": this.formBuilder.array([//this.createPagesRows()\n        ])\n      });\n    }\n  }]);\n\n  return FormInfoComponent;\n}();\n\nFormInfoComponent.ctorParameters = function () {\n  return [{\n    type: FormBuilder\n  }, {\n    type: HtmlElementService\n  }];\n};\n\nFormInfoComponent.propDecorators = {\n  pages: [{\n    type: Input\n  }],\n  pagesChange: [{\n    type: Output\n  }]\n};\nFormInfoComponent = __decorate([Component({\n  selector: 'app-form-info',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n}), __metadata(\"design:paramtypes\", [FormBuilder, HtmlElementService])], FormInfoComponent);\nexport { FormInfoComponent };","map":{"version":3,"sources":["C:/dev/saltiest/src/app/form-info/form-info.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","Input","Output","EventEmitter","Validators","FormControl","FormGroup","FormBuilder","FormArray","HtmlElementService","FormInfoComponent","formBuilder","htmlElementService","formSubmitAttempt","pagesChange","tags$","getTags","form","group","array","pages","forEach","page","pageIndex","getPages","push","createPages","rowsFormArray","getPagesRows","rows","row","rowIndex","createPagesRows","columnsFormArray","getPagesRowsColumns","columns","column","columnIndex","createPagesRowsColumns","contentsFormArray","getPagesRowsColumnsContents","contents","content","contentIndex","createPagesRowsColumnsContents","html","choices","htmlChoicesFormArray","getPagesRowsColumnsContentsChoices","get","choice","required","patchValue","valueChanges","subscribe","result","emit","changes","f","valid","console","log","validateAllFormFields","control","markAsTouched","onlySelf","keys","controls","field","groupControl","controlAsFormArray","arrayControl","indexPages","indexRows","indexColumns","at","indexContents","removeAt","pattern","ctorParameters","type","propDecorators","selector","template","styles"],"mappings":";;;AAAA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,MAAI,OAAON,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;;AAGA,OAAOE,oBAAP,MAAiC,uCAAjC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,YAAnC,QAAuD,eAAvD;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,SAAlC,EAA6CC,WAA7C,EAA0DC,SAA1D,QAA2E,gBAA3E;AACA,SAASC,kBAAT,QAAmC,yCAAnC;;AACA,IAAIC,iBAAiB;AACjB,6BAAYC,WAAZ,EAAyBC,kBAAzB,EAA6C;AAAA;;AACzC,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKC,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKC,WAAL,GAAmB,IAAIX,YAAJ,EAAnB;AACH;;AANgB;AAAA;AAAA,WAOjB,oBAAW;AAAA;;AACP,WAAKY,KAAL,GAAa,KAAKH,kBAAL,CAAwBI,OAAxB,EAAb;AACA,WAAKC,IAAL,GAAY,KAAKN,WAAL,CAAiBO,KAAjB,CAAuB;AAC/B,iBAAS,KAAKP,WAAL,CAAiBQ,KAAjB,CAAuB,EAAvB;AADsB,OAAvB,CAAZ,CAFO,CAKP;;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,SAAP,EAAqB;AACpC,QAAA,KAAI,CAACC,QAAL,GAAgBC,IAAhB,CAAqB,KAAI,CAACC,WAAL,EAArB;;AACA,YAAMC,aAAa,GAAG,KAAI,CAACC,YAAL,CAAkBL,SAAlB,CAAtB;;AACAD,QAAAA,IAAI,CAACO,IAAL,CAAUR,OAAV,CAAkB,UAACS,GAAD,EAAMC,QAAN,EAAmB;AACjCJ,UAAAA,aAAa,CAACF,IAAd,CAAmB,KAAI,CAACO,eAAL,EAAnB;;AACA,cAAMC,gBAAgB,GAAG,KAAI,CAACC,mBAAL,CAAyBX,SAAzB,EAAoCQ,QAApC,CAAzB;;AACAD,UAAAA,GAAG,CAACK,OAAJ,CAAYd,OAAZ,CAAoB,UAACe,MAAD,EAASC,WAAT,EAAyB;AACzCJ,YAAAA,gBAAgB,CAACR,IAAjB,CAAsB,KAAI,CAACa,sBAAL,EAAtB;;AACA,gBAAMC,iBAAiB,GAAG,KAAI,CAACC,2BAAL,CAAiCjB,SAAjC,EAA4CQ,QAA5C,EAAsDM,WAAtD,CAA1B;;AACAD,YAAAA,MAAM,CAACK,QAAP,CAAgBpB,OAAhB,CAAwB,UAACqB,OAAD,EAAUC,YAAV,EAA2B;AAC/CJ,cAAAA,iBAAiB,CAACd,IAAlB,CAAuB,KAAI,CAACmB,8BAAL,EAAvB;;AACA,kBAAIF,OAAO,IAAIA,OAAO,CAACG,IAAnB,IAA2BH,OAAO,CAACG,IAAR,CAAaC,OAA5C,EAAqD;AACjD,oBAAMC,oBAAoB,GAAG,KAAI,CAACC,kCAAL,CAAwCzB,SAAxC,EAAmDQ,QAAnD,EAA6DM,WAA7D,EAA0EM,YAA1E,EACxBM,GADwB,CACpB,cADoB,CAA7B;;AAEAP,gBAAAA,OAAO,CAACG,IAAR,CAAaC,OAAb,CAAqBzB,OAArB,CAA6B,UAAA6B,MAAM,EAAI;AACnCH,kBAAAA,oBAAoB,CAACtB,IAArB,CAA0B,KAAI,CAACd,WAAL,CAAiBO,KAAjB,CAAuB;AAC7C,4BAAQ,CAAC,EAAD,EAAKd,UAAU,CAAC+C,QAAhB,CADqC;AAE7C,6BAAS,CAAC,EAAD,EAAK/C,UAAU,CAAC+C,QAAhB;AAFoC,mBAAvB,CAA1B;AAIH,iBALD;AAMH;AACJ,aAZD;AAaH,WAhBD;AAiBH,SApBD;AAqBH,OAxBD;AAyBA,WAAK3B,QAAL,GAAgB4B,UAAhB,CAA2B,KAAKhC,KAAhC;AACA,WAAKH,IAAL,CAAUoC,YAAV,CACKC,SADL,CACe,UAAAC,MAAM,EAAI;AACrB,QAAA,KAAI,CAACzC,WAAL,CAAiB0C,IAAjB,CAAsBD,MAAM,CAACnC,KAA7B;AACH,OAHD;AAIH;AA3CgB;AAAA;AAAA,WA4CjB,qBAAYqC,OAAZ,EAAqB,CACjB;AACH;AA9CgB;AAAA;AAAA,WA+CjB,oBAAW;AACP,WAAK5C,iBAAL,GAAyB,IAAzB;;AACA,UAAI,KAAK6C,CAAL,CAAOC,KAAX,EAAkB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,OAFD,MAGK;AACD,aAAKC,qBAAL,CAA2B,KAAKJ,CAAhC;AACH;AACJ;AAvDgB;AAAA;AAAA,WAwDjB,+BAAsBK,OAAtB,EAA+B;AAAA;;AAC3B,UAAIA,OAAO,YAAY1D,WAAvB,EAAoC;AAChC0D,QAAAA,OAAO,CAACC,aAAR,CAAsB;AAClBC,UAAAA,QAAQ,EAAE;AADQ,SAAtB;AAGH,OAJD,MAKK,IAAIF,OAAO,YAAYzD,SAAvB,EAAkC;AACnCnB,QAAAA,MAAM,CAAC+E,IAAP,CAAYH,OAAO,CAACI,QAApB,EAA8B9C,OAA9B,CAAsC,UAAC+C,KAAD,EAAW;AAC7C,cAAMC,YAAY,GAAGN,OAAO,CAACd,GAAR,CAAYmB,KAAZ,CAArB;;AACA,UAAA,MAAI,CAACN,qBAAL,CAA2BO,YAA3B;AACH,SAHD;AAIH,OALI,MAMA,IAAIN,OAAO,YAAYvD,SAAvB,EAAkC;AACnC,YAAM8D,kBAAkB,GAAGP,OAA3B;AACAO,QAAAA,kBAAkB,CAACH,QAAnB,CAA4B9C,OAA5B,CAAoC,UAACkD,YAAD;AAAA,iBAAkB,MAAI,CAACT,qBAAL,CAA2BS,YAA3B,CAAlB;AAAA,SAApC;AACH;AACJ;AAxEgB;AAAA;AAAA,SAyEjB,eAAQ;AACJ,aAAO,KAAKtD,IAAZ;AACH;AACD;AACJ;AACA;;AA9EqB;AAAA;AAAA,WA+EjB,kBAASmD,KAAT,EAAgB;AACZ,aAAO,KAAKV,CAAL,CAAOT,GAAP,CAAWmB,KAAX,CAAP;AACH;AAjFgB;AAAA;AAAA,WAkFjB,qCAA4BI,UAA5B,EAAwCC,SAAxC,EAAmDC,YAAnD,EAAiE;AAC7D,aAAO,KAAKzD,IAAL,CAAUgC,GAAV,CAAc,OAAd,EAAuB0B,EAAvB,CAA0BH,UAA1B,EAAsCvB,GAAtC,CAA0C,MAA1C,EAAkD0B,EAAlD,CAAqDF,SAArD,EAAgExB,GAAhE,CAAoE,SAApE,EAA+E0B,EAA/E,CAAkFD,YAAlF,EAAgGzB,GAAhG,CAAoG,UAApG,CAAP;AACH;AApFgB;AAAA;AAAA,WAqFjB,4CAAmCuB,UAAnC,EAA+CC,SAA/C,EAA0DC,YAA1D,EAAwEE,aAAxE,EAAuF;AACnF,aAAO,KAAK3D,IAAL,CAAUgC,GAAV,CAAc,OAAd,EAAuB0B,EAAvB,CAA0BH,UAA1B,EAAsCvB,GAAtC,CAA0C,MAA1C,EAAkD0B,EAAlD,CAAqDF,SAArD,EAAgExB,GAAhE,CAAoE,SAApE,EAA+E0B,EAA/E,CAAkFD,YAAlF,EAAgGzB,GAAhG,CAAoG,UAApG,EAAgH0B,EAAhH,CAAmHC,aAAnH,CAAP;AACH;AAvFgB;AAAA;AAAA,WAwFjB,wCAA+BJ,UAA/B,EAA2CC,SAA3C,EAAsDC,YAAtD,EAAoEE,aAApE,EAAmF;AAC/E,WAAKpC,2BAAL,CAAiCgC,UAAjC,EAA6CC,SAA7C,EAAwDC,YAAxD,EAAsEG,QAAtE,CAA+ED,aAA/E;AACH;AA1FgB;AAAA;AAAA,WA2FjB,0CAAiC;AAC7B,aAAO,KAAKjE,WAAL,CAAiBO,KAAjB,CAAuB;AAC1B,gBAAQ,CAAC,EAAD,EAAKd,UAAU,CAAC+C,QAAhB,CADkB;AAE1B,gBAAQ,KAAKxC,WAAL,CAAiBO,KAAjB,CAAuB;AAC3B,+BAAqB,CAAC,EAAD,EAAKd,UAAU,CAAC+C,QAAhB,CADM;AAE3B,mBAAS,CAAC,EAAD,EAAK/C,UAAU,CAAC+C,QAAhB,CAFkB;AAG3B,sBAAY,CAAC,EAAD,EAAK/C,UAAU,CAAC+C,QAAhB,CAHe;AAI3B,kBAAQ,CAAC,EAAD,EAAK/C,UAAU,CAAC+C,QAAhB,CAJmB;AAK3B,iBAAO,CAAC,EAAD,EAAK/C,UAAU,CAAC+C,QAAhB,CALoB;AAM3B,qBAAW,KAAKxC,WAAL,CAAiBQ,KAAjB,CAAuB,EAAvB,CANgB;AAO3B,mBAAS,CAAC,EAAD,CAPkB;AAQ3B,iBAAO,CAAC,EAAD,CARoB;AAS3B,kBAAQ,CAAC,EAAD,CATmB;AAU3B,sBAAY,CAAC,EAAD;AAVe,SAAvB,CAFkB;AAc1B,gBAAQ,KAAKR,WAAL,CAAiBO,KAAjB,CAAuB;AAC3B,oBAAU,CAAC,EAAD,EAAK,CACPd,UAAU,CAAC0E,OAAX,CAAmB,mBAAnB,CADO,CAAL;AADiB,SAAvB,CAdkB;AAoB1B,mBAAW,KAAKnE,WAAL,CAAiBO,KAAjB,CAAuB;AAC9B,sBAAY,CAAC,EAAD,EAAKd,UAAU,CAAC+C,QAAhB;AADkB,SAAvB;AApBe,OAAvB,CAAP;AAwBH;AApHgB;AAAA;AAAA,WAqHjB,6BAAoBqB,UAApB,EAAgCC,SAAhC,EAA2C;AACvC,aAAO,KAAKxD,IAAL,CAAUgC,GAAV,CAAc,OAAd,EAAuB0B,EAAvB,CAA0BH,UAA1B,EAAsCvB,GAAtC,CAA0C,MAA1C,EAAkD0B,EAAlD,CAAqDF,SAArD,EAAgExB,GAAhE,CAAoE,SAApE,CAAP;AACH;AAvHgB;AAAA;AAAA,WAwHjB,gCAAuBuB,UAAvB,EAAmCC,SAAnC,EAA8CC,YAA9C,EAA4D;AACxD,WAAKxC,mBAAL,CAAyBsC,UAAzB,EAAqCC,SAArC,EAAgDI,QAAhD,CAAyDH,YAAzD;AACH;AA1HgB;AAAA;AAAA,WA2HjB,kCAAyB;AACrB,aAAO,KAAK/D,WAAL,CAAiBO,KAAjB,CAAuB;AAC1B,oBAAY,KAAKP,WAAL,CAAiBQ,KAAjB,CAAuB,CACnC;AADmC,SAAvB;AADc,OAAvB,CAAP;AAKH;AAjIgB;AAAA;AAAA,WAkIjB,sBAAaqD,UAAb,EAAyB;AACrB,aAAO,KAAKvD,IAAL,CAAUgC,GAAV,CAAc,OAAd,EAAuB0B,EAAvB,CAA0BH,UAA1B,EAAsCvB,GAAtC,CAA0C,MAA1C,CAAP;AACH;AApIgB;AAAA;AAAA,WAqIjB,yBAAgBuB,UAAhB,EAA4BC,SAA5B,EAAuC;AACnC,WAAK7C,YAAL,CAAkB4C,UAAlB,EAA8BK,QAA9B,CAAuCJ,SAAvC;AACH;AAvIgB;AAAA;AAAA,WAwIjB,2BAAkB;AACd,aAAO,KAAK9D,WAAL,CAAiBO,KAAjB,CAAuB;AAC1B,gBAAQ,CAAC,EAAD,EAAK,CAACd,UAAU,CAAC+C,QAAZ,CAAL,CADkB;AAE1B,mBAAW,KAAKxC,WAAL,CAAiBQ,KAAjB,CAAuB,CAClC;AADkC,SAAvB;AAFe,OAAvB,CAAP;AAMH;AA/IgB;AAAA;AAAA,WAgJjB,oBAAW;AACP,aAAO,KAAKF,IAAL,CAAUgC,GAAV,CAAc,OAAd,CAAP;AACH;AAlJgB;AAAA;AAAA,WAmJjB,qBAAYuB,UAAZ,EAAwB;AACpB,WAAKhD,QAAL,GAAgBqD,QAAhB,CAAyBL,UAAzB;AACH;AArJgB;AAAA;AAAA,WAsJjB,uBAAc;AACV,aAAO,KAAK7D,WAAL,CAAiBO,KAAjB,CAAuB;AAC1B,gBAAQ,KAAKP,WAAL,CAAiBQ,KAAjB,CAAuB,CAC/B;AAD+B,SAAvB;AADkB,OAAvB,CAAP;AAKH;AA5JgB;;AAAA;AAAA,GAArB;;AA8JAT,iBAAiB,CAACqE,cAAlB,GAAmC;AAAA,SAAM,CACrC;AAAEC,IAAAA,IAAI,EAAEzE;AAAR,GADqC,EAErC;AAAEyE,IAAAA,IAAI,EAAEvE;AAAR,GAFqC,CAAN;AAAA,CAAnC;;AAIAC,iBAAiB,CAACuE,cAAlB,GAAmC;AAC/B7D,EAAAA,KAAK,EAAE,CAAC;AAAE4D,IAAAA,IAAI,EAAE/E;AAAR,GAAD,CADwB;AAE/Ba,EAAAA,WAAW,EAAE,CAAC;AAAEkE,IAAAA,IAAI,EAAE9E;AAAR,GAAD;AAFkB,CAAnC;AAIAQ,iBAAiB,GAAGhC,UAAU,CAAC,CAC3BsB,SAAS,CAAC;AACNkF,EAAAA,QAAQ,EAAE,eADJ;AAENC,EAAAA,QAAQ,EAAErF,oBAFJ;AAGNsF,EAAAA,MAAM,EAAE,CAACrF,oBAAD;AAHF,CAAD,CADkB,EAM3BL,UAAU,CAAC,mBAAD,EAAsB,CAACa,WAAD,EAC5BE,kBAD4B,CAAtB,CANiB,CAAD,EAQ3BC,iBAR2B,CAA9B;AASA,SAASA,iBAAT","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport __NG_CLI_RESOURCE__0 from \"./form-info.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./form-info.component.css?ngResource\";\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup, FormBuilder, FormArray } from '@angular/forms';\r\nimport { HtmlElementService } from '../shared/services/html-element.service';\r\nlet FormInfoComponent = class FormInfoComponent {\r\n    constructor(formBuilder, htmlElementService) {\r\n        this.formBuilder = formBuilder;\r\n        this.htmlElementService = htmlElementService;\r\n        this.formSubmitAttempt = false;\r\n        this.pagesChange = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.tags$ = this.htmlElementService.getTags();\r\n        this.form = this.formBuilder.group({\r\n            \"pages\": this.formBuilder.array([]),\r\n        });\r\n        //\r\n        this.pages.forEach((page, pageIndex) => {\r\n            this.getPages().push(this.createPages());\r\n            const rowsFormArray = this.getPagesRows(pageIndex);\r\n            page.rows.forEach((row, rowIndex) => {\r\n                rowsFormArray.push(this.createPagesRows());\r\n                const columnsFormArray = this.getPagesRowsColumns(pageIndex, rowIndex);\r\n                row.columns.forEach((column, columnIndex) => {\r\n                    columnsFormArray.push(this.createPagesRowsColumns());\r\n                    const contentsFormArray = this.getPagesRowsColumnsContents(pageIndex, rowIndex, columnIndex);\r\n                    column.contents.forEach((content, contentIndex) => {\r\n                        contentsFormArray.push(this.createPagesRowsColumnsContents());\r\n                        if (content && content.html && content.html.choices) {\r\n                            const htmlChoicesFormArray = this.getPagesRowsColumnsContentsChoices(pageIndex, rowIndex, columnIndex, contentIndex)\r\n                                .get('html.choices');\r\n                            content.html.choices.forEach(choice => {\r\n                                htmlChoicesFormArray.push(this.formBuilder.group({\r\n                                    'text': ['', Validators.required],\r\n                                    'value': ['', Validators.required]\r\n                                }));\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        this.getPages().patchValue(this.pages);\r\n        this.form.valueChanges\r\n            .subscribe(result => {\r\n            this.pagesChange.emit(result.pages);\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        //this.pages = this.form.get('pages').value;\r\n    }\r\n    onSubmit() {\r\n        this.formSubmitAttempt = true;\r\n        if (this.f.valid) {\r\n            console.log('form submitted');\r\n        }\r\n        else {\r\n            this.validateAllFormFields(this.f);\r\n        }\r\n    }\r\n    validateAllFormFields(control) {\r\n        if (control instanceof FormControl) {\r\n            control.markAsTouched({\r\n                onlySelf: true\r\n            });\r\n        }\r\n        else if (control instanceof FormGroup) {\r\n            Object.keys(control.controls).forEach((field) => {\r\n                const groupControl = control.get(field);\r\n                this.validateAllFormFields(groupControl);\r\n            });\r\n        }\r\n        else if (control instanceof FormArray) {\r\n            const controlAsFormArray = control;\r\n            controlAsFormArray.controls.forEach((arrayControl) => this.validateAllFormFields(arrayControl));\r\n        }\r\n    }\r\n    get f() {\r\n        return this.form;\r\n    }\r\n    /*    isFieldValid(field: string) {\r\n            return !this.f.get(field)?.valid && this.f.get(field)?.touched;\r\n        }*/\r\n    getField(field) {\r\n        return this.f.get(field);\r\n    }\r\n    getPagesRowsColumnsContents(indexPages, indexRows, indexColumns) {\r\n        return this.form.get('pages').at(indexPages).get('rows').at(indexRows).get('columns').at(indexColumns).get('contents');\r\n    }\r\n    getPagesRowsColumnsContentsChoices(indexPages, indexRows, indexColumns, indexContents) {\r\n        return this.form.get('pages').at(indexPages).get('rows').at(indexRows).get('columns').at(indexColumns).get('contents').at(indexContents);\r\n    }\r\n    deletePagesRowsColumnsContents(indexPages, indexRows, indexColumns, indexContents) {\r\n        this.getPagesRowsColumnsContents(indexPages, indexRows, indexColumns).removeAt(indexContents);\r\n    }\r\n    createPagesRowsColumnsContents() {\r\n        return this.formBuilder.group({\r\n            'name': ['', Validators.required],\r\n            'html': this.formBuilder.group({\r\n                'content_choice_id': ['', Validators.required],\r\n                'label': ['', Validators.required],\r\n                'category': ['', Validators.required],\r\n                'text': ['', Validators.required],\r\n                'tag': ['', Validators.required],\r\n                'choices': this.formBuilder.array([]),\r\n                'class': [''],\r\n                'src': [''],\r\n                'data': [''],\r\n                'required': [''],\r\n            }),\r\n            'type': this.formBuilder.group({\r\n                'length': ['', [\r\n                        Validators.pattern('^[0-9]+(.[0-9])?$')\r\n                    ]\r\n                ]\r\n            }),\r\n            'options': this.formBuilder.group({\r\n                'nullable': ['', Validators.required],\r\n            })\r\n        });\r\n    }\r\n    getPagesRowsColumns(indexPages, indexRows) {\r\n        return this.form.get('pages').at(indexPages).get('rows').at(indexRows).get('columns');\r\n    }\r\n    deletePagesRowsColumns(indexPages, indexRows, indexColumns) {\r\n        this.getPagesRowsColumns(indexPages, indexRows).removeAt(indexColumns);\r\n    }\r\n    createPagesRowsColumns() {\r\n        return this.formBuilder.group({\r\n            \"contents\": this.formBuilder.array([\r\n            //this.createPagesRowsColumnsContents()\r\n            ]),\r\n        });\r\n    }\r\n    getPagesRows(indexPages) {\r\n        return this.form.get('pages').at(indexPages).get('rows');\r\n    }\r\n    deletePagesRows(indexPages, indexRows) {\r\n        this.getPagesRows(indexPages).removeAt(indexRows);\r\n    }\r\n    createPagesRows() {\r\n        return this.formBuilder.group({\r\n            \"grid\": ['', [Validators.required]],\r\n            \"columns\": this.formBuilder.array([\r\n            //this.createPagesRowsColumns()\r\n            ]),\r\n        });\r\n    }\r\n    getPages() {\r\n        return this.form.get('pages');\r\n    }\r\n    deletePages(indexPages) {\r\n        this.getPages().removeAt(indexPages);\r\n    }\r\n    createPages() {\r\n        return this.formBuilder.group({\r\n            \"rows\": this.formBuilder.array([\r\n            //this.createPagesRows()\r\n            ]),\r\n        });\r\n    }\r\n};\r\nFormInfoComponent.ctorParameters = () => [\r\n    { type: FormBuilder },\r\n    { type: HtmlElementService }\r\n];\r\nFormInfoComponent.propDecorators = {\r\n    pages: [{ type: Input }],\r\n    pagesChange: [{ type: Output }]\r\n};\r\nFormInfoComponent = __decorate([\r\n    Component({\r\n        selector: 'app-form-info',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [FormBuilder,\r\n        HtmlElementService])\r\n], FormInfoComponent);\r\nexport { FormInfoComponent };\r\n"]},"metadata":{},"sourceType":"module"}