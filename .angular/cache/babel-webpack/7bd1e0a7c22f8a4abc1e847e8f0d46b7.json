{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport __NG_CLI_RESOURCE__0 from \"./config-table-builder.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./config-table-builder.component.css?ngResource\";\nimport { Component, Input } from '@angular/core';\n\nvar ConfigTableBuilderComponent = /*#__PURE__*/function () {\n  function ConfigTableBuilderComponent() {\n    _classCallCheck(this, ConfigTableBuilderComponent);\n\n    this.oldValue = '';\n    this.newValue = '';\n  }\n\n  _createClass(ConfigTableBuilderComponent, [{\n    key: \"whileTyping\",\n    value: function whileTyping(event) {\n      this.newValue = event.target.value;\n    }\n  }, {\n    key: \"onFocusIn\",\n    value: function onFocusIn(oldValue) {\n      this.oldValue = oldValue;\n    }\n  }, {\n    key: \"onFocusOut\",\n    value: function onFocusOut() {\n      if (typeof this.newValue !== 'undefined' && this.newValue.trim() !== '' && this.oldValue !== '') {\n        if (this.fields.value.length > 0 && this.oldValue != this.newValue) {\n          var fields = this.fields.value;\n          var newFields = JSON.parse(JSON.stringify(fields).replace(new RegExp(\"\\\"\".concat(this.oldValue, \"\\\":\"), \"g\"), \"\\\"\".concat(this.newValue, \"\\\":\")));\n\n          for (var i = 0; i < fields.length; i++) {//cria um novo item\n            //fields[i][this.newValue] = fields[i][this.oldValue];\n            //deleta o item antigo\n            //delete fields[i][this.oldValue];\n          }\n\n          this.fields.value = newFields;\n          this.fields.updateValueAndValidity({\n            onlySelf: false,\n            emitEvent: true\n          });\n          this.keyFields = Object.keys(newFields[0]).map(function (item) {\n            return {\n              text: item\n            };\n          });\n          this.oldValue = '';\n          this.newValue = '';\n        }\n      }\n    }\n  }, {\n    key: \"newColumn\",\n    value: function newColumn(fieldIndex) {\n      if (this.keyFields.length > 0) {\n        var column_name = \"column \".concat(this.keyFields.length + 1);\n        this.keyFields.splice(fieldIndex + 1, 0, {\n          text: column_name\n        });\n\n        for (var i = 0; i < this.fields.value.length; i++) {\n          this.fields.value[i][column_name] = '';\n        }\n\n        this.fields.updateValueAndValidity({\n          onlySelf: false,\n          emitEvent: true\n        });\n      }\n    }\n  }, {\n    key: \"newLine\",\n    value: function newLine(fieldIndex) {\n      if (this.fields.value.length > 0) {\n        var cloned = Object.assign({}, this.fields.value[0]);\n\n        for (var key in cloned) {\n          if (cloned.hasOwnProperty(key)) {\n            cloned[key] = '';\n          }\n        }\n\n        this.fields.value.splice(fieldIndex + 1, 0, cloned);\n      }\n    }\n  }, {\n    key: \"deleteColumn\",\n    value: function deleteColumn(keyName) {\n      var _this = this;\n\n      if (this.fields.value.length > 0) {\n        this.fields.value.forEach(function (field) {\n          if (typeof field[keyName] != 'undefined') {\n            _this.keyFields.map(function (item, index) {\n              if (item.text == keyName) {\n                _this.keyFields.splice(index, 1);\n              }\n            });\n\n            delete field[keyName];\n          }\n        });\n        this.rebuildFieldsWhenEmpty();\n      }\n    }\n  }, {\n    key: \"deleteLine\",\n    value: function deleteLine(fieldIndex) {\n      if (this.fields.value.length > 0) {\n        this.fields.value.splice(fieldIndex, 1);\n        this.rebuildFieldsWhenEmpty();\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.keyFields = this.getKeyFields();\n    }\n  }, {\n    key: \"rebuildFieldsWhenEmpty\",\n    value: function rebuildFieldsWhenEmpty() {\n      if (this.fields.value[0] != null) {\n        var keyFields = Object.keys(this.fields.value[0]);\n\n        if (keyFields.length <= 0) {\n          this.fields.value = [{\n            \"Book ID\": \"\"\n          }];\n          this.keyFields = this.getKeyFields();\n        }\n      } else {\n        this.fields.value = [{\n          \"Book ID\": \"\"\n        }];\n        this.keyFields = this.getKeyFields();\n      }\n    }\n  }, {\n    key: \"getKeyFields\",\n    value: function getKeyFields() {\n      if (this.fields.value.length > 0) {\n        var fieldKeys = JSON.parse(JSON.stringify(this.fields.value[0]));\n        return Object.keys(fieldKeys).map(function (item) {\n          return {\n            text: item\n          };\n        });\n      }\n\n      return [];\n    }\n  }, {\n    key: \"html\",\n    get: function get() {\n      return this.parentFormGroup.controls.html;\n    }\n  }, {\n    key: \"fields\",\n    get: function get() {\n      return this.html.get('fields');\n    }\n  }]);\n\n  return ConfigTableBuilderComponent;\n}();\n\nConfigTableBuilderComponent.ctorParameters = function () {\n  return [];\n};\n\nConfigTableBuilderComponent.propDecorators = {\n  content: [{\n    type: Input\n  }],\n  parentFormGroup: [{\n    type: Input\n  }]\n};\nConfigTableBuilderComponent = __decorate([Component({\n  selector: 'app-config-table-builder',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n}), __metadata(\"design:paramtypes\", [])], ConfigTableBuilderComponent);\nexport { ConfigTableBuilderComponent };","map":{"version":3,"sources":["C:/dev/saltiest/src/app/form-builder/config/config-table-builder/config-table-builder.component.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","Input","ConfigTableBuilderComponent","oldValue","newValue","event","value","trim","fields","newFields","JSON","parse","stringify","replace","RegExp","updateValueAndValidity","onlySelf","emitEvent","keyFields","keys","map","item","text","fieldIndex","column_name","splice","cloned","assign","hasOwnProperty","keyName","forEach","field","index","rebuildFieldsWhenEmpty","getKeyFields","fieldKeys","parentFormGroup","controls","html","get","ctorParameters","propDecorators","content","type","selector","template","styles"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport __NG_CLI_RESOURCE__0 from \"./config-table-builder.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./config-table-builder.component.css?ngResource\";\r\nimport { Component, Input } from '@angular/core';\r\nlet ConfigTableBuilderComponent = class ConfigTableBuilderComponent {\r\n    constructor() {\r\n        this.oldValue = '';\r\n        this.newValue = '';\r\n    }\r\n    whileTyping(event) {\r\n        this.newValue = event.target.value;\r\n    }\r\n    onFocusIn(oldValue) {\r\n        this.oldValue = oldValue;\r\n    }\r\n    onFocusOut() {\r\n        if (typeof this.newValue !== 'undefined' && this.newValue.trim() !== '' && this.oldValue !== '') {\r\n            if (this.fields.value.length > 0 && this.oldValue != this.newValue) {\r\n                var fields = this.fields.value;\r\n                var newFields = JSON.parse(JSON.stringify(fields).replace(new RegExp(`\"${this.oldValue}\":`, \"g\"), `\"${this.newValue}\":`));\r\n                for (var i = 0; i < fields.length; i++) {\r\n                    //cria um novo item\r\n                    //fields[i][this.newValue] = fields[i][this.oldValue];\r\n                    //deleta o item antigo\r\n                    //delete fields[i][this.oldValue];\r\n                }\r\n                this.fields.value = newFields;\r\n                this.fields.updateValueAndValidity({ onlySelf: false, emitEvent: true });\r\n                this.keyFields = Object.keys(newFields[0]).map(item => {\r\n                    return { text: item };\r\n                });\r\n                this.oldValue = '';\r\n                this.newValue = '';\r\n            }\r\n        }\r\n    }\r\n    newColumn(fieldIndex) {\r\n        if (this.keyFields.length > 0) {\r\n            let column_name = `column ${this.keyFields.length + 1}`;\r\n            this.keyFields.splice(fieldIndex + 1, 0, { text: column_name });\r\n            for (let i = 0; i < this.fields.value.length; i++) {\r\n                this.fields.value[i][column_name] = '';\r\n            }\r\n            this.fields.updateValueAndValidity({ onlySelf: false, emitEvent: true });\r\n        }\r\n    }\r\n    newLine(fieldIndex) {\r\n        if (this.fields.value.length > 0) {\r\n            var cloned = Object.assign({}, this.fields.value[0]);\r\n            for (var key in cloned) {\r\n                if (cloned.hasOwnProperty(key)) {\r\n                    cloned[key] = '';\r\n                }\r\n            }\r\n            this.fields.value.splice(fieldIndex + 1, 0, cloned);\r\n        }\r\n    }\r\n    deleteColumn(keyName) {\r\n        if (this.fields.value.length > 0) {\r\n            this.fields.value.forEach(field => {\r\n                if (typeof field[keyName] != 'undefined') {\r\n                    this.keyFields.map((item, index) => {\r\n                        if (item.text == keyName) {\r\n                            this.keyFields.splice(index, 1);\r\n                        }\r\n                    });\r\n                    delete field[keyName];\r\n                }\r\n            });\r\n            this.rebuildFieldsWhenEmpty();\r\n        }\r\n    }\r\n    deleteLine(fieldIndex) {\r\n        if (this.fields.value.length > 0) {\r\n            this.fields.value.splice(fieldIndex, 1);\r\n            this.rebuildFieldsWhenEmpty();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.keyFields = this.getKeyFields();\r\n    }\r\n    rebuildFieldsWhenEmpty() {\r\n        if (this.fields.value[0] != null) {\r\n            let keyFields = Object.keys(this.fields.value[0]);\r\n            if (keyFields.length <= 0) {\r\n                this.fields.value = [{\r\n                        \"Book ID\": \"\",\r\n                    }];\r\n                this.keyFields = this.getKeyFields();\r\n            }\r\n        }\r\n        else {\r\n            this.fields.value = [{\r\n                    \"Book ID\": \"\",\r\n                }];\r\n            this.keyFields = this.getKeyFields();\r\n        }\r\n    }\r\n    getKeyFields() {\r\n        if (this.fields.value.length > 0) {\r\n            let fieldKeys = JSON.parse(JSON.stringify(this.fields.value[0]));\r\n            return Object.keys(fieldKeys).map(item => {\r\n                return { text: item };\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n    get html() {\r\n        return this.parentFormGroup.controls.html;\r\n    }\r\n    get fields() {\r\n        return this.html.get('fields');\r\n    }\r\n};\r\nConfigTableBuilderComponent.ctorParameters = () => [];\r\nConfigTableBuilderComponent.propDecorators = {\r\n    content: [{ type: Input }],\r\n    parentFormGroup: [{ type: Input }]\r\n};\r\nConfigTableBuilderComponent = __decorate([\r\n    Component({\r\n        selector: 'app-config-table-builder',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], ConfigTableBuilderComponent);\r\nexport { ConfigTableBuilderComponent };\r\n"]},"metadata":{},"sourceType":"module"}