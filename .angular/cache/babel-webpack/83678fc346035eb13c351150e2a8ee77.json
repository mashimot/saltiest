{"ast":null,"code":"import _inherits from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _toConsumableArray from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\n/**\n * @license Angular v13.1.0\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { CompilerConfig, ResourceLoader } from '@angular/compiler';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PACKAGE_ROOT_URL, Compiler, ViewEncapsulation, MissingTranslationStrategy, Injector, isDevMode, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\n\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\nvar COMPILER_PROVIDERS = [{\n  provide: Compiler,\n  useFactory: function useFactory() {\n    return new Compiler();\n  }\n}];\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\n\nvar JitCompilerFactory = /*#__PURE__*/function () {\n  /* @internal */\n  function JitCompilerFactory(defaultOptions) {\n    _classCallCheck(this, JitCompilerFactory);\n\n    var compilerOptions = {\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning\n    };\n    this._defaultOptions = [compilerOptions].concat(_toConsumableArray(defaultOptions));\n  }\n\n  _createClass(JitCompilerFactory, [{\n    key: \"createCompiler\",\n    value: function createCompiler() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var opts = _mergeOptions(this._defaultOptions.concat(options));\n\n      var injector = Injector.create([COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: function useFactory() {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            jitDevMode: isDevMode(),\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            preserveWhitespaces: opts.preserveWhitespaces\n          });\n        },\n        deps: []\n      }, opts.providers]);\n      return injector.get(Compiler);\n    }\n  }]);\n\n  return JitCompilerFactory;\n}();\n\nfunction _mergeOptions(optionsArr) {\n  return {\n    useJit: _lastDefined(optionsArr.map(function (options) {\n      return options.useJit;\n    })),\n    defaultEncapsulation: _lastDefined(optionsArr.map(function (options) {\n      return options.defaultEncapsulation;\n    })),\n    providers: _mergeArrays(optionsArr.map(function (options) {\n      return options.providers;\n    })),\n    missingTranslation: _lastDefined(optionsArr.map(function (options) {\n      return options.missingTranslation;\n    })),\n    preserveWhitespaces: _lastDefined(optionsArr.map(function (options) {\n      return options.preserveWhitespaces;\n    }))\n  };\n}\n\nfunction _lastDefined(args) {\n  for (var i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n\n  return undefined;\n}\n\nfunction _mergeArrays(parts) {\n  var result = [];\n  parts.forEach(function (part) {\n    return part && result.push.apply(result, _toConsumableArray(part));\n  });\n  return result;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\n\n\nvar platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [{\n  provide: COMPILER_OPTIONS,\n  useValue: {},\n  multi: true\n}, {\n  provide: CompilerFactory,\n  useClass: JitCompilerFactory,\n  deps: [COMPILER_OPTIONS]\n}]);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ResourceLoaderImpl = /*#__PURE__*/function (_ResourceLoader) {\n  _inherits(ResourceLoaderImpl, _ResourceLoader);\n\n  var _super = _createSuper(ResourceLoaderImpl);\n\n  function ResourceLoaderImpl() {\n    _classCallCheck(this, ResourceLoaderImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceLoaderImpl, [{\n    key: \"get\",\n    value: function get(url) {\n      var resolve;\n      var reject;\n      var promise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n      });\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'text';\n\n      xhr.onload = function () {\n        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n        // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n        // by IE10)\n        var response = xhr.response || xhr.responseText; // normalize IE9 bug (https://bugs.jquery.com/ticket/1450)\n\n        var status = xhr.status === 1223 ? 204 : xhr.status; // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status <= 300) {\n          resolve(response);\n        } else {\n          reject(\"Failed to load \".concat(url));\n        }\n      };\n\n      xhr.onerror = function () {\n        reject(\"Failed to load \".concat(url));\n      };\n\n      xhr.send();\n      return promise;\n    }\n  }]);\n\n  return ResourceLoaderImpl;\n}(ResourceLoader);\n\nResourceLoaderImpl.ɵfac = /* @__PURE__ */function () {\n  var ɵResourceLoaderImpl_BaseFactory;\n  return function ResourceLoaderImpl_Factory(t) {\n    return (ɵResourceLoaderImpl_BaseFactory || (ɵResourceLoaderImpl_BaseFactory = i0.ɵɵgetInheritedFactory(ResourceLoaderImpl)))(t || ResourceLoaderImpl);\n  };\n}();\n\nResourceLoaderImpl.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ResourceLoaderImpl,\n  factory: ResourceLoaderImpl.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResourceLoaderImpl, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, {\n  provide: COMPILER_OPTIONS,\n  useValue: {\n    providers: [{\n      provide: ResourceLoader,\n      useClass: ResourceLoaderImpl,\n      deps: []\n    }]\n  },\n  multi: true\n}, {\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\n\nvar CachedResourceLoader = /*#__PURE__*/function (_ResourceLoader2) {\n  _inherits(CachedResourceLoader, _ResourceLoader2);\n\n  var _super2 = _createSuper(CachedResourceLoader);\n\n  function CachedResourceLoader() {\n    var _this;\n\n    _classCallCheck(this, CachedResourceLoader);\n\n    _this = _super2.call(this);\n    _this._cache = ɵglobal.$templateCache;\n\n    if (_this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n\n    return _this;\n  }\n\n  _createClass(CachedResourceLoader, [{\n    key: \"get\",\n    value: function get(url) {\n      if (this._cache.hasOwnProperty(url)) {\n        return Promise.resolve(this._cache[url]);\n      } else {\n        return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n      }\n    }\n  }]);\n\n  return CachedResourceLoader;\n}(ResourceLoader);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = new Version('13.1.0');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\nvar RESOURCE_CACHE_PROVIDER = [{\n  provide: ResourceLoader,\n  useClass: CachedResourceLoader,\n  deps: []\n}];\n/**\n * @publicApi\n */\n\nvar platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, platformCoreDynamic as ɵplatformCoreDynamic };","map":{"version":3,"sources":["C:/dev/saltiest/node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.mjs"],"names":["CompilerConfig","ResourceLoader","i0","InjectionToken","PACKAGE_ROOT_URL","Compiler","ViewEncapsulation","MissingTranslationStrategy","Injector","isDevMode","createPlatformFactory","platformCore","COMPILER_OPTIONS","CompilerFactory","Injectable","PLATFORM_ID","ɵglobal","Version","ɵPLATFORM_BROWSER_ID","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ERROR_COLLECTOR_TOKEN","DEFAULT_PACKAGE_URL_PROVIDER","provide","useValue","COMPILER_PROVIDERS","useFactory","JitCompilerFactory","defaultOptions","compilerOptions","useJit","defaultEncapsulation","Emulated","missingTranslation","Warning","_defaultOptions","options","opts","_mergeOptions","concat","injector","create","jitDevMode","preserveWhitespaces","deps","providers","get","optionsArr","_lastDefined","map","_mergeArrays","args","i","length","undefined","parts","result","forEach","part","push","platformCoreDynamic","multi","useClass","ResourceLoaderImpl","url","resolve","reject","promise","Promise","res","rej","xhr","XMLHttpRequest","open","responseType","onload","response","responseText","status","onerror","send","ɵfac","ɵprov","type","INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","CachedResourceLoader","_cache","$templateCache","Error","hasOwnProperty","VERSION","RESOURCE_CACHE_PROVIDER","platformBrowserDynamic","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","ɵplatformCoreDynamic"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,mBAA/C;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,QAA3C,EAAqDC,iBAArD,EAAwEC,0BAAxE,EAAoGC,QAApG,EAA8GC,SAA9G,EAAyHC,qBAAzH,EAAgJC,YAAhJ,EAA8JC,gBAA9J,EAAgLC,eAAhL,EAAiMC,UAAjM,EAA6MC,WAA7M,EAA0NC,OAA1N,EAAmOC,OAAnO,QAAkP,eAAlP;AACA,SAASC,oBAAT,QAAqC,iBAArC;AACA,SAASC,oCAAT,QAAqD,2BAArD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,qBAAqB,GAAG,IAAIjB,cAAJ,CAAmB,gBAAnB,CAA9B;AACA;AACA;AACA;;AACA,IAAMkB,4BAA4B,GAAG;AACjCC,EAAAA,OAAO,EAAElB,gBADwB;AAEjCmB,EAAAA,QAAQ,EAAE;AAFuB,CAArC;AAIA,IAAMC,kBAAkB,GAAG,CAAC;AAAEF,EAAAA,OAAO,EAAEjB,QAAX;AAAqBoB,EAAAA,UAAU,EAAE;AAAA,WAAM,IAAIpB,QAAJ,EAAN;AAAA;AAAjC,CAAD,CAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMqB,kB;AACF;AACA,8BAAYC,cAAZ,EAA4B;AAAA;;AACxB,QAAMC,eAAe,GAAG;AACpBC,MAAAA,MAAM,EAAE,IADY;AAEpBC,MAAAA,oBAAoB,EAAExB,iBAAiB,CAACyB,QAFpB;AAGpBC,MAAAA,kBAAkB,EAAEzB,0BAA0B,CAAC0B;AAH3B,KAAxB;AAKA,SAAKC,eAAL,IAAwBN,eAAxB,4BAA4CD,cAA5C;AACH;;;;WACD,0BAA6B;AAAA,UAAdQ,OAAc,uEAAJ,EAAI;;AACzB,UAAMC,IAAI,GAAGC,aAAa,CAAC,KAAKH,eAAL,CAAqBI,MAArB,CAA4BH,OAA5B,CAAD,CAA1B;;AACA,UAAMI,QAAQ,GAAG/B,QAAQ,CAACgC,MAAT,CAAgB,CAC7BhB,kBAD6B,EACT;AAChBF,QAAAA,OAAO,EAAEtB,cADO;AAEhByB,QAAAA,UAAU,EAAE,sBAAM;AACd,iBAAO,IAAIzB,cAAJ,CAAmB;AACtB;AACA;AACA6B,YAAAA,MAAM,EAAEO,IAAI,CAACP,MAHS;AAItBY,YAAAA,UAAU,EAAEhC,SAAS,EAJC;AAKtB;AACA;AACAqB,YAAAA,oBAAoB,EAAEM,IAAI,CAACN,oBAPL;AAQtBE,YAAAA,kBAAkB,EAAEI,IAAI,CAACJ,kBARH;AAStBU,YAAAA,mBAAmB,EAAEN,IAAI,CAACM;AATJ,WAAnB,CAAP;AAWH,SAde;AAehBC,QAAAA,IAAI,EAAE;AAfU,OADS,EAkB7BP,IAAI,CAACQ,SAlBwB,CAAhB,CAAjB;AAoBA,aAAOL,QAAQ,CAACM,GAAT,CAAaxC,QAAb,CAAP;AACH;;;;;;AAEL,SAASgC,aAAT,CAAuBS,UAAvB,EAAmC;AAC/B,SAAO;AACHjB,IAAAA,MAAM,EAAEkB,YAAY,CAACD,UAAU,CAACE,GAAX,CAAe,UAAAb,OAAO;AAAA,aAAIA,OAAO,CAACN,MAAZ;AAAA,KAAtB,CAAD,CADjB;AAEHC,IAAAA,oBAAoB,EAAEiB,YAAY,CAACD,UAAU,CAACE,GAAX,CAAe,UAAAb,OAAO;AAAA,aAAIA,OAAO,CAACL,oBAAZ;AAAA,KAAtB,CAAD,CAF/B;AAGHc,IAAAA,SAAS,EAAEK,YAAY,CAACH,UAAU,CAACE,GAAX,CAAe,UAAAb,OAAO;AAAA,aAAIA,OAAO,CAACS,SAAZ;AAAA,KAAtB,CAAD,CAHpB;AAIHZ,IAAAA,kBAAkB,EAAEe,YAAY,CAACD,UAAU,CAACE,GAAX,CAAe,UAAAb,OAAO;AAAA,aAAIA,OAAO,CAACH,kBAAZ;AAAA,KAAtB,CAAD,CAJ7B;AAKHU,IAAAA,mBAAmB,EAAEK,YAAY,CAACD,UAAU,CAACE,GAAX,CAAe,UAAAb,OAAO;AAAA,aAAIA,OAAO,CAACO,mBAAZ;AAAA,KAAtB,CAAD;AAL9B,GAAP;AAOH;;AACD,SAASK,YAAT,CAAsBG,IAAtB,EAA4B;AACxB,OAAK,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,GAAc,CAA3B,EAA8BD,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,QAAID,IAAI,CAACC,CAAD,CAAJ,KAAYE,SAAhB,EAA2B;AACvB,aAAOH,IAAI,CAACC,CAAD,CAAX;AACH;AACJ;;AACD,SAAOE,SAAP;AACH;;AACD,SAASJ,YAAT,CAAsBK,KAAtB,EAA6B;AACzB,MAAMC,MAAM,GAAG,EAAf;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,IAAD;AAAA,WAAUA,IAAI,IAAIF,MAAM,CAACG,IAAP,OAAAH,MAAM,qBAASE,IAAT,EAAxB;AAAA,GAAd;AACA,SAAOF,MAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMI,mBAAmB,GAAGjD,qBAAqB,CAACC,YAAD,EAAe,aAAf,EAA8B,CAC3E;AAAEW,EAAAA,OAAO,EAAEV,gBAAX;AAA6BW,EAAAA,QAAQ,EAAE,EAAvC;AAA2CqC,EAAAA,KAAK,EAAE;AAAlD,CAD2E,EAE3E;AAAEtC,EAAAA,OAAO,EAAET,eAAX;AAA4BgD,EAAAA,QAAQ,EAAEnC,kBAAtC;AAA0DiB,EAAAA,IAAI,EAAE,CAAC/B,gBAAD;AAAhE,CAF2E,CAA9B,CAAjD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMkD,kB;;;;;;;;;;;;;WACF,aAAIC,GAAJ,EAAS;AACL,UAAIC,OAAJ;AACA,UAAIC,MAAJ;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtCL,QAAAA,OAAO,GAAGI,GAAV;AACAH,QAAAA,MAAM,GAAGI,GAAT;AACH,OAHe,CAAhB;AAIA,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBT,GAAhB,EAAqB,IAArB;AACAO,MAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;;AACAH,MAAAA,GAAG,CAACI,MAAJ,GAAa,YAAY;AACrB;AACA;AACA;AACA,YAAMC,QAAQ,GAAGL,GAAG,CAACK,QAAJ,IAAgBL,GAAG,CAACM,YAArC,CAJqB,CAKrB;;AACA,YAAIC,MAAM,GAAGP,GAAG,CAACO,MAAJ,KAAe,IAAf,GAAsB,GAAtB,GAA4BP,GAAG,CAACO,MAA7C,CANqB,CAOrB;AACA;AACA;;AACA,YAAIA,MAAM,KAAK,CAAf,EAAkB;AACdA,UAAAA,MAAM,GAAGF,QAAQ,GAAG,GAAH,GAAS,CAA1B;AACH;;AACD,YAAI,OAAOE,MAAP,IAAiBA,MAAM,IAAI,GAA/B,EAAoC;AAChCb,UAAAA,OAAO,CAACW,QAAD,CAAP;AACH,SAFD,MAGK;AACDV,UAAAA,MAAM,0BAAmBF,GAAnB,EAAN;AACH;AACJ,OAnBD;;AAoBAO,MAAAA,GAAG,CAACQ,OAAJ,GAAc,YAAY;AACtBb,QAAAA,MAAM,0BAAmBF,GAAnB,EAAN;AACH,OAFD;;AAGAO,MAAAA,GAAG,CAACS,IAAJ;AACA,aAAOb,OAAP;AACH;;;;EApC4BjE,c;;AAsCjC6D,kBAAkB,CAACkB,IAAnB;AAAA;AAAA;AAAA,kFAAqG9E,EAArG,uBAA+G4D,kBAA/G,SAA+GA,kBAA/G;AAAA;AAAA;;AACAA,kBAAkB,CAACmB,KAAnB,kBADqG/E,EACrG;AAAA,SAAmH4D,kBAAnH;AAAA,WAAmHA,kBAAnH;AAAA;;AACA;AAAA,qDAFqG5D,EAErG,mBAA2F4D,kBAA3F,EAA2H,CAAC;AAChHoB,IAAAA,IAAI,EAAEpE;AAD0G,GAAD,CAA3H;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAMqE,2CAA2C,GAAG,CAChDhE,oCADgD,EAEhD;AACIG,EAAAA,OAAO,EAAEV,gBADb;AAEIW,EAAAA,QAAQ,EAAE;AAAEqB,IAAAA,SAAS,EAAE,CAAC;AAAEtB,MAAAA,OAAO,EAAErB,cAAX;AAA2B4D,MAAAA,QAAQ,EAAEC,kBAArC;AAAyDnB,MAAAA,IAAI,EAAE;AAA/D,KAAD;AAAb,GAFd;AAGIiB,EAAAA,KAAK,EAAE;AAHX,CAFgD,EAOhD;AAAEtC,EAAAA,OAAO,EAAEP,WAAX;AAAwBQ,EAAAA,QAAQ,EAAEL;AAAlC,CAPgD,CAApD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMkE,oB;;;;;AACF,kCAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,MAAL,GAAcrE,OAAO,CAACsE,cAAtB;;AACA,QAAI,MAAKD,MAAL,IAAe,IAAnB,EAAyB;AACrB,YAAM,IAAIE,KAAJ,CAAU,uEAAV,CAAN;AACH;;AALS;AAMb;;;;WACD,aAAIxB,GAAJ,EAAS;AACL,UAAI,KAAKsB,MAAL,CAAYG,cAAZ,CAA2BzB,GAA3B,CAAJ,EAAqC;AACjC,eAAOI,OAAO,CAACH,OAAR,CAAgB,KAAKqB,MAAL,CAAYtB,GAAZ,CAAhB,CAAP;AACH,OAFD,MAGK;AACD,eAAOI,OAAO,CAACF,MAAR,CAAe,4DAA4DF,GAA3E,CAAP;AACH;AACJ;;;;EAf8B9D,c;AAkBnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAMwF,OAAO,GAAG,IAAIxE,OAAJ,CAAY,QAAZ,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAMyE,uBAAuB,GAAG,CAAC;AAAEpE,EAAAA,OAAO,EAAErB,cAAX;AAA2B4D,EAAAA,QAAQ,EAAEuB,oBAArC;AAA2DzC,EAAAA,IAAI,EAAE;AAAjE,CAAD,CAAhC;AACA;AACA;AACA;;AACA,IAAMgD,sBAAsB,GAAGjF,qBAAqB,CAACiD,mBAAD,EAAsB,gBAAtB,EAAwCwB,2CAAxC,CAApD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASzD,kBAAT,EAA6BgE,uBAA7B,EAAsDD,OAAtD,EAA+DE,sBAA/D,EAAuFR,2CAA2C,IAAIS,4CAAtI,EAAoLjC,mBAAmB,IAAIkC,oBAA3M","sourcesContent":["/**\n * @license Angular v13.1.0\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { CompilerConfig, ResourceLoader } from '@angular/compiler';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PACKAGE_ROOT_URL, Compiler, ViewEncapsulation, MissingTranslationStrategy, Injector, isDevMode, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nconst DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: PACKAGE_ROOT_URL,\n    useValue: '/'\n};\nconst COMPILER_PROVIDERS = [{ provide: Compiler, useFactory: () => new Compiler() }];\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\nclass JitCompilerFactory {\n    /* @internal */\n    constructor(defaultOptions) {\n        const compilerOptions = {\n            useJit: true,\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n            missingTranslation: MissingTranslationStrategy.Warning,\n        };\n        this._defaultOptions = [compilerOptions, ...defaultOptions];\n    }\n    createCompiler(options = []) {\n        const opts = _mergeOptions(this._defaultOptions.concat(options));\n        const injector = Injector.create([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: () => {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        jitDevMode: isDevMode(),\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        preserveWhitespaces: opts.preserveWhitespaces,\n                    });\n                },\n                deps: []\n            },\n            opts.providers\n        ]);\n        return injector.get(Compiler);\n    }\n}\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n        defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n        providers: _mergeArrays(optionsArr.map(options => options.providers)),\n        missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n        preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n    };\n}\nfunction _lastDefined(args) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\nfunction _mergeArrays(parts) {\n    const result = [];\n    parts.forEach((part) => part && result.push(...part));\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nconst platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n    { provide: COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS] },\n]);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ResourceLoaderImpl extends ResourceLoader {\n    get(url) {\n        let resolve;\n        let reject;\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n            // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n            // by IE10)\n            const response = xhr.response || xhr.responseText;\n            // normalize IE9 bug (https://bugs.jquery.com/ticket/1450)\n            let status = xhr.status === 1223 ? 204 : xhr.status;\n            // fix status code when it is 0 (0 status is undocumented).\n            // Occurs when accessing file resources or on Android 4.1 stock browser\n            // while retrieving files from application cache.\n            if (status === 0) {\n                status = response ? 200 : 0;\n            }\n            if (200 <= status && status <= 300) {\n                resolve(response);\n            }\n            else {\n                reject(`Failed to load ${url}`);\n            }\n        };\n        xhr.onerror = function () {\n            reject(`Failed to load ${url}`);\n        };\n        xhr.send();\n        return promise;\n    }\n}\nResourceLoaderImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ResourceLoaderImpl, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nResourceLoaderImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ResourceLoaderImpl });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ResourceLoaderImpl, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n    ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,\n    {\n        provide: COMPILER_OPTIONS,\n        useValue: { providers: [{ provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: [] }] },\n        multi: true\n    },\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\nclass CachedResourceLoader extends ResourceLoader {\n    constructor() {\n        super();\n        this._cache = ɵglobal.$templateCache;\n        if (this._cache == null) {\n            throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n        }\n    }\n    get(url) {\n        if (this._cache.hasOwnProperty(url)) {\n            return Promise.resolve(this._cache[url]);\n        }\n        else {\n            return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('13.1.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst RESOURCE_CACHE_PROVIDER = [{ provide: ResourceLoader, useClass: CachedResourceLoader, deps: [] }];\n/**\n * @publicApi\n */\nconst platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, platformCoreDynamic as ɵplatformCoreDynamic };\n"]},"metadata":{},"sourceType":"module"}