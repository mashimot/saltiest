{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\n\n/**\n * @license Angular v13.1.0\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, createPlatformFactory, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { ɵplatformCoreDynamic, ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport { ɵgetDOM, DOCUMENT } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\n\nvar DOMTestComponentRenderer = /*#__PURE__*/function (_TestComponentRendere) {\n  _inherits(DOMTestComponentRenderer, _TestComponentRendere);\n\n  var _super = _createSuper(DOMTestComponentRenderer);\n\n  function DOMTestComponentRenderer(_doc) {\n    var _this;\n\n    _classCallCheck(this, DOMTestComponentRenderer);\n\n    _this = _super.call(this);\n    _this._doc = _doc;\n    return _this;\n  }\n\n  _createClass(DOMTestComponentRenderer, [{\n    key: \"insertRootElement\",\n    value: function insertRootElement(rootElId) {\n      this.removeAllRootElements();\n      var rootElement = ɵgetDOM().getDefaultDocument().createElement('div');\n      rootElement.setAttribute('id', rootElId);\n\n      this._doc.body.appendChild(rootElement);\n    }\n  }, {\n    key: \"removeAllRootElements\",\n    value: function removeAllRootElements() {\n      // TODO(juliemr): can/should this be optional?\n      var oldRoots = this._doc.querySelectorAll('[id^=root]');\n\n      for (var i = 0; i < oldRoots.length; i++) {\n        ɵgetDOM().remove(oldRoots[i]);\n      }\n    }\n  }]);\n\n  return DOMTestComponentRenderer;\n}(TestComponentRenderer);\n\nDOMTestComponentRenderer.ɵfac = function DOMTestComponentRenderer_Factory(t) {\n  return new (t || DOMTestComponentRenderer)(i0.ɵɵinject(DOCUMENT));\n};\n\nDOMTestComponentRenderer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DOMTestComponentRenderer,\n  factory: DOMTestComponentRenderer.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DOMTestComponentRenderer, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Platform for dynamic tests\n *\n * @publicApi\n */\n\n\nvar platformCoreDynamicTesting = createPlatformFactory(ɵplatformCoreDynamic, 'coreDynamicTesting', []);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\nvar platformBrowserDynamicTesting = createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\n\nvar BrowserDynamicTestingModule = function BrowserDynamicTestingModule() {\n  _classCallCheck(this, BrowserDynamicTestingModule);\n};\n\nBrowserDynamicTestingModule.ɵfac = function BrowserDynamicTestingModule_Factory(t) {\n  return new (t || BrowserDynamicTestingModule)();\n};\n\nBrowserDynamicTestingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserDynamicTestingModule,\n  exports: [BrowserTestingModule]\n});\nBrowserDynamicTestingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: TestComponentRenderer,\n    useClass: DOMTestComponentRenderer\n  }],\n  imports: [BrowserTestingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserDynamicTestingModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserTestingModule],\n      providers: [{\n        provide: TestComponentRenderer,\n        useClass: DOMTestComponentRenderer\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BrowserDynamicTestingModule, platformBrowserDynamicTesting, DOMTestComponentRenderer as ɵDOMTestComponentRenderer, platformCoreDynamicTesting as ɵplatformCoreDynamicTesting };","map":{"version":3,"sources":["C:/dev/saltiest/node_modules/@angular/platform-browser-dynamic/fesm2015/testing.mjs"],"names":["i0","Injectable","Inject","createPlatformFactory","NgModule","TestComponentRenderer","ɵplatformCoreDynamic","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserTestingModule","ɵgetDOM","DOCUMENT","DOMTestComponentRenderer","_doc","rootElId","removeAllRootElements","rootElement","getDefaultDocument","createElement","setAttribute","body","appendChild","oldRoots","querySelectorAll","i","length","remove","ɵfac","ɵprov","type","undefined","decorators","args","platformCoreDynamicTesting","platformBrowserDynamicTesting","BrowserDynamicTestingModule","ɵmod","ɵinj","provide","useClass","exports","providers","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,qBAA7B,EAAoDC,QAApD,QAAoE,eAApE;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,oBAAT,EAA+BC,4CAA/B,QAAmF,mCAAnF;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,iBAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;IACMC,wB;;;;;AACF,oCAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd;AACA,UAAKA,IAAL,GAAYA,IAAZ;AAFc;AAGjB;;;;WACD,2BAAkBC,QAAlB,EAA4B;AACxB,WAAKC,qBAAL;AACA,UAAMC,WAAW,GAAGN,OAAO,GAAGO,kBAAV,GAA+BC,aAA/B,CAA6C,KAA7C,CAApB;AACAF,MAAAA,WAAW,CAACG,YAAZ,CAAyB,IAAzB,EAA+BL,QAA/B;;AACA,WAAKD,IAAL,CAAUO,IAAV,CAAeC,WAAf,CAA2BL,WAA3B;AACH;;;WACD,iCAAwB;AACpB;AACA,UAAMM,QAAQ,GAAG,KAAKT,IAAL,CAAUU,gBAAV,CAA2B,YAA3B,CAAjB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCd,QAAAA,OAAO,GAAGgB,MAAV,CAAiBJ,QAAQ,CAACE,CAAD,CAAzB;AACH;AACJ;;;;EAjBkClB,qB;;AAmBvCM,wBAAwB,CAACe,IAAzB;AAAA,mBAAqHf,wBAArH,EAA2GX,EAA3G,UAA+JU,QAA/J;AAAA;;AACAC,wBAAwB,CAACgB,KAAzB,kBAD2G3B,EAC3G;AAAA,SAAyHW,wBAAzH;AAAA,WAAyHA,wBAAzH;AAAA;;AACA;AAAA,qDAF2GX,EAE3G,mBAA2FW,wBAA3F,EAAiI,CAAC;AACtHiB,IAAAA,IAAI,EAAE3B;AADgH,GAAD,CAAjI,EAE4B,YAAY;AAChC,WAAO,CAAC;AAAE2B,MAAAA,IAAI,EAAEC,SAAR;AAAmBC,MAAAA,UAAU,EAAE,CAAC;AACxBF,QAAAA,IAAI,EAAE1B,MADkB;AAExB6B,QAAAA,IAAI,EAAE,CAACrB,QAAD;AAFkB,OAAD;AAA/B,KAAD,CAAP;AAIH,GAPL;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMsB,0BAA0B,GAAG7B,qBAAqB,CAACG,oBAAD,EAAuB,oBAAvB,EAA6C,EAA7C,CAAxD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAM2B,6BAA6B,GAAG9B,qBAAqB,CAAC6B,0BAAD,EAA6B,uBAA7B,EAAsDzB,4CAAtD,CAA3D;AACA;AACA;AACA;AACA;AACA;;IACM2B,2B;;;;AAENA,2BAA2B,CAACR,IAA5B;AAAA,mBAAwHQ,2BAAxH;AAAA;;AACAA,2BAA2B,CAACC,IAA5B,kBApD2GnC,EAoD3G;AAAA,QAAyHkC,2BAAzH;AAAA,YAAgK1B,oBAAhK;AAAA;AACA0B,2BAA2B,CAACE,IAA5B,kBArD2GpC,EAqD3G;AAAA,aAAiK,CACzJ;AAAEqC,IAAAA,OAAO,EAAEhC,qBAAX;AAAkCiC,IAAAA,QAAQ,EAAE3B;AAA5C,GADyJ,CAAjK;AAAA,YAEiBH,oBAFjB;AAAA;;AAGA;AAAA,qDAxD2GR,EAwD3G,mBAA2FkC,2BAA3F,EAAoI,CAAC;AACzHN,IAAAA,IAAI,EAAExB,QADmH;AAEzH2B,IAAAA,IAAI,EAAE,CAAC;AACCQ,MAAAA,OAAO,EAAE,CAAC/B,oBAAD,CADV;AAECgC,MAAAA,SAAS,EAAE,CACP;AAAEH,QAAAA,OAAO,EAAEhC,qBAAX;AAAkCiC,QAAAA,QAAQ,EAAE3B;AAA5C,OADO;AAFZ,KAAD;AAFmH,GAAD,CAApI;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASuB,2BAAT,EAAsCD,6BAAtC,EAAqEtB,wBAAwB,IAAI8B,yBAAjG,EAA4HT,0BAA0B,IAAIU,2BAA1J","sourcesContent":["/**\n * @license Angular v13.1.0\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, createPlatformFactory, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { ɵplatformCoreDynamic, ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport { ɵgetDOM, DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    insertRootElement(rootElId) {\n        this.removeAllRootElements();\n        const rootElement = ɵgetDOM().getDefaultDocument().createElement('div');\n        rootElement.setAttribute('id', rootElId);\n        this._doc.body.appendChild(rootElement);\n    }\n    removeAllRootElements() {\n        // TODO(juliemr): can/should this be optional?\n        const oldRoots = this._doc.querySelectorAll('[id^=root]');\n        for (let i = 0; i < oldRoots.length; i++) {\n            ɵgetDOM().remove(oldRoots[i]);\n        }\n    }\n}\nDOMTestComponentRenderer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DOMTestComponentRenderer, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDOMTestComponentRenderer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DOMTestComponentRenderer });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DOMTestComponentRenderer, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Platform for dynamic tests\n *\n * @publicApi\n */\nconst platformCoreDynamicTesting = createPlatformFactory(ɵplatformCoreDynamic, 'coreDynamicTesting', []);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst platformBrowserDynamicTesting = createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nclass BrowserDynamicTestingModule {\n}\nBrowserDynamicTestingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BrowserDynamicTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserDynamicTestingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BrowserDynamicTestingModule, exports: [BrowserTestingModule] });\nBrowserDynamicTestingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BrowserDynamicTestingModule, providers: [\n        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n    ], imports: [BrowserTestingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BrowserDynamicTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserTestingModule],\n                    providers: [\n                        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserDynamicTestingModule, platformBrowserDynamicTesting, DOMTestComponentRenderer as ɵDOMTestComponentRenderer, platformCoreDynamicTesting as ɵplatformCoreDynamicTesting };\n"]},"metadata":{},"sourceType":"module"}