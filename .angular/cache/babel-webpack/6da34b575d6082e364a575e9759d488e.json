{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\dev\\\\saltiest\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Injectable } from '@angular/core';\n\nvar BootstrapHtmlTemplate = /*#__PURE__*/function () {\n  function BootstrapHtmlTemplate() {\n    _classCallCheck(this, BootstrapHtmlTemplate);\n  }\n\n  _createClass(BootstrapHtmlTemplate, [{\n    key: \"get\",\n    value: function get(content) {\n      var _this = this;\n\n      this.content = content || {};\n      var nullable = '';\n\n      if (typeof this.content.options != 'undefined') {\n        nullable = this.content.options.nullable ? \"\" : \"required\";\n      }\n\n      if (typeof this.content.html.choices != 'undefined') {\n        this.choices = this.content.html.choices.reduce(function (acc, el) {\n          var input = {\n            radio: \"<div class=\\\"radio\\\"><label><input type=\\\"radio\\\" name=\\\"\".concat(_this.content.name, \"\\\" value=\\\"\").concat(el.value, \"\\\"> \").concat(el.text, \"</label></div>\"),\n            checkbox: \"<div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" name=\\\"\".concat(_this.content.name, \"\\\" value=\\\"\").concat(el.value, \"\\\"> \").concat(el.text, \"</label></div>\"),\n            select: \"<option value=\\\"\".concat(el.value, \"\\\">\").concat(el.text, \"</option>\")\n          };\n          Object.keys(input).forEach(function (item) {\n            if (typeof acc[item] == 'undefined') {\n              acc[item] = [input[item]];\n            }\n\n            acc[item].push(input[item]);\n          });\n          return acc;\n        }, {\n          radio: [],\n          checkbox: [],\n          select: []\n        });\n      }\n\n      var data = {\n        \"html\": [\"\".concat(this.content.html.data)],\n        \"legend\": [\"<legend>\".concat(this.content.html.text, \"</legend>\")],\n        \"h1\": [\"<h1>\".concat(this.content.html.text, \"</h1>\")],\n        \"h2\": [\"<h2>\".concat(this.content.html.text, \"</h2>\")],\n        \"h3\": [\"<h3>\".concat(this.content.html.text, \"</h3>\")],\n        \"h4\": [\"<h4>\".concat(this.content.html.text, \"</h4>\")],\n        \"h5\": [\"<h5>\".concat(this.content.html.text, \"</h5>\")],\n        \"h6\": [\"<h6>\".concat(this.content.html.text, \"</h6>\")],\n        \"table\": [\"<table class=\\\"table\\\">\", //`${this.content.html.fields? this.content.html.fields.map((field, key) => (`<tr>${Object.keys(this.content.html.fields[0]).map((f, k) => `<td>${field[f]}</td>`).join('')}</tr>`)).join('') : []}`,\n        \"</table>\"],\n        \"image\": [\"<img src=\\\"\".concat(this.content.html.src, \"\\\" class=\\\"img-fluid\\\">\")],\n        \"textarea\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<textarea class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\"  \").concat(nullable ? \"\" : \"required\", \"></textarea>\"), \"</div>\"],\n        \"select\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<select class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" \").concat(nullable ? \"\" : \"required\", \">\"), \"<option value=\\\"\\\">Selecione</option>\", \"\".concat(this.choices ? this.choices.select.join('') : ''), \"</select>\", \"</div>\"],\n        \"checkbox\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"\".concat(this.choices ? this.choices.checkbox.join('') : ''), \"</div>\"],\n        \"radio\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"\".concat(this.choices ? this.choices.radio.join('') : ''), \"</div>\"],\n        \"text\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" value=\\\"\\\"  \").concat(nullable, \">\"), \"</div>\"],\n        \"number\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" value=\\\"\\\" \").concat(nullable, \">\"), \"</div>\"],\n        \"date\": [\"<div class=\\\"form-group\\\">\", \"<label for=\\\"\".concat(this.content.name, \"\\\">\").concat(this.content.html.label, \"</label>\"), \"<input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"\".concat(this.content.name, \"\\\" id=\\\"\").concat(this.content.name, \"\\\" value=\\\"\\\" \").concat(nullable, \">\"), \"</div>\"]\n      };\n      return typeof data[this.content.html.tag] !== 'undefined' ? data[this.content.html.tag].join(\"\\n\") : '';\n    }\n  }, {\n    key: \"getTemplate\",\n    value: function getTemplate(pages) {\n      var _this2 = this;\n\n      var htmlPages = [];\n      var addTabSpace = \"\\n\\t\";\n      var inputs = [];\n      pages.forEach(function (page, pageNumber) {\n        htmlPages.push(\"\\n<section class=\\\"page-\".concat(pageNumber + 1, \"\\\">\"));\n        var tabNum = 1;\n        addTabSpace = _this2.tabSpace(tabNum);\n        page.rows.forEach(function (row) {\n          var grid = row.grid.split(' ');\n          htmlPages.push(\"\".concat(addTabSpace, \"<div class=\\\"row\\\">\"));\n          tabNum++;\n          addTabSpace = _this2.tabSpace(tabNum);\n          row.columns.forEach(function (column, j) {\n            htmlPages.push(\"\".concat(addTabSpace, \"<div class=\\\"col-md-\").concat(grid[j], \"\\\">\"));\n            column.contents.forEach(function (content) {\n              if (content.html.category === 'form') {\n                inputs.push(content);\n              }\n\n              content.html['grid'] = grid[j];\n              htmlPages.push(addTabSpace + _this2.get(content));\n            });\n            htmlPages.push(\"\".concat(addTabSpace, \"</div>\"));\n          });\n          tabNum--;\n          addTabSpace = _this2.tabSpace(tabNum);\n          htmlPages.push(\"\".concat(addTabSpace, \"</div>\"));\n        });\n        htmlPages.push(\"</section>\");\n      });\n      return htmlPages.join('\\n');\n    }\n  }, {\n    key: \"tabSpace\",\n    value: function tabSpace(tabNum) {\n      var tab = \"\\t\";\n      var newTab = \"\";\n\n      for (var i = 0; i < tabNum; i++) {\n        newTab += tab;\n      }\n\n      return newTab;\n    }\n  }]);\n\n  return BootstrapHtmlTemplate;\n}();\n\nBootstrapHtmlTemplate = __decorate([Injectable({\n  providedIn: 'root'\n})], BootstrapHtmlTemplate);\nexport { BootstrapHtmlTemplate };","map":{"version":3,"sources":["C:/dev/saltiest/src/app/_services/bootstrap-html-template.service.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Injectable","BootstrapHtmlTemplate","content","nullable","options","html","choices","reduce","acc","el","input","radio","name","value","text","checkbox","select","keys","forEach","item","push","data","src","label","join","tag","pages","htmlPages","addTabSpace","inputs","page","pageNumber","tabNum","tabSpace","rows","row","grid","split","columns","column","j","contents","category","get","tab","newTab","providedIn"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Injectable } from '@angular/core';\r\nlet BootstrapHtmlTemplate = class BootstrapHtmlTemplate {\r\n    get(content) {\r\n        this.content = content || {};\r\n        let nullable = '';\r\n        if (typeof this.content.options != 'undefined') {\r\n            nullable = this.content.options.nullable\r\n                ? ``\r\n                : `required`;\r\n        }\r\n        if (typeof this.content.html.choices != 'undefined') {\r\n            this.choices = this.content.html.choices.reduce((acc, el) => {\r\n                var input = {\r\n                    radio: `<div class=\"radio\"><label><input type=\"radio\" name=\"${this.content.name}\" value=\"${el.value}\"> ${el.text}</label></div>`,\r\n                    checkbox: `<div class=\"checkbox\"><label><input type=\"checkbox\" name=\"${this.content.name}\" value=\"${el.value}\"> ${el.text}</label></div>`,\r\n                    select: `<option value=\"${el.value}\">${el.text}</option>`\r\n                };\r\n                Object.keys(input)\r\n                    .forEach((item) => {\r\n                    if (typeof acc[item] == 'undefined') {\r\n                        acc[item] = [input[item]];\r\n                    }\r\n                    acc[item].push(input[item]);\r\n                });\r\n                return acc;\r\n            }, {\r\n                radio: [],\r\n                checkbox: [],\r\n                select: []\r\n            });\r\n        }\r\n        var data = {\r\n            \"html\": [`${this.content.html.data}`],\r\n            \"legend\": [`<legend>${this.content.html.text}</legend>`],\r\n            \"h1\": [`<h1>${this.content.html.text}</h1>`],\r\n            \"h2\": [`<h2>${this.content.html.text}</h2>`],\r\n            \"h3\": [`<h3>${this.content.html.text}</h3>`],\r\n            \"h4\": [`<h4>${this.content.html.text}</h4>`],\r\n            \"h5\": [`<h5>${this.content.html.text}</h5>`],\r\n            \"h6\": [`<h6>${this.content.html.text}</h6>`],\r\n            \"table\": [\r\n                `<table class=\"table\">`,\r\n                //`${this.content.html.fields? this.content.html.fields.map((field, key) => (`<tr>${Object.keys(this.content.html.fields[0]).map((f, k) => `<td>${field[f]}</td>`).join('')}</tr>`)).join('') : []}`,\r\n                `</table>`\r\n            ],\r\n            \"image\": [`<img src=\"${this.content.html.src}\" class=\"img-fluid\">`],\r\n            \"textarea\": [`<div class=\"form-group\">`,\r\n                `<label for=\"${this.content.name}\">${this.content.html.label}</label>`,\r\n                `<textarea class=\"form-control\" name=\"${this.content.name}\" id=\"${this.content.name}\"  ${nullable ? `` : `required`}></textarea>`,\r\n                `</div>`],\r\n            \"select\": [`<div class=\"form-group\">`,\r\n                `<label for=\"${this.content.name}\">${this.content.html.label}</label>`,\r\n                `<select class=\"form-control\" name=\"${this.content.name}\" id=\"${this.content.name}\" ${nullable ? `` : `required`}>`,\r\n                `<option value=\"\">Selecione</option>`,\r\n                `${this.choices ? this.choices.select.join('') : ''}`,\r\n                `</select>`,\r\n                `</div>`],\r\n            \"checkbox\": [`<div class=\"form-group\">`,\r\n                `<label for=\"${this.content.name}\">${this.content.html.label}</label>`,\r\n                `${this.choices ? this.choices.checkbox.join('') : ''}`,\r\n                `</div>`],\r\n            \"radio\": [`<div class=\"form-group\">`,\r\n                `<label for=\"${this.content.name}\">${this.content.html.label}</label>`,\r\n                `${this.choices ? this.choices.radio.join('') : ''}`,\r\n                `</div>`],\r\n            \"text\": [`<div class=\"form-group\">`,\r\n                `<label for=\"${this.content.name}\">${this.content.html.label}</label>`,\r\n                `<input type=\"text\" class=\"form-control\" name=\"${this.content.name}\" id=\"${this.content.name}\" value=\"\"  ${nullable}>`,\r\n                `</div>`],\r\n            \"number\": [`<div class=\"form-group\">`,\r\n                `<label for=\"${this.content.name}\">${this.content.html.label}</label>`,\r\n                `<input type=\"number\" class=\"form-control\" name=\"${this.content.name}\" id=\"${this.content.name}\" value=\"\" ${nullable}>`,\r\n                `</div>`],\r\n            \"date\": [`<div class=\"form-group\">`,\r\n                `<label for=\"${this.content.name}\">${this.content.html.label}</label>`,\r\n                `<input type=\"date\" class=\"form-control\" name=\"${this.content.name}\" id=\"${this.content.name}\" value=\"\" ${nullable}>`,\r\n                `</div>`]\r\n        };\r\n        return typeof data[this.content.html.tag] !== 'undefined'\r\n            ? data[this.content.html.tag].join(\"\\n\")\r\n            : '';\r\n    }\r\n    getTemplate(pages) {\r\n        var htmlPages = [];\r\n        var addTabSpace = \"\\n\\t\";\r\n        var inputs = [];\r\n        pages.forEach((page, pageNumber) => {\r\n            htmlPages.push(`\\n<section class=\"page-${pageNumber + 1}\">`);\r\n            var tabNum = 1;\r\n            addTabSpace = this.tabSpace(tabNum);\r\n            page.rows.forEach(row => {\r\n                let grid = row.grid.split(' ');\r\n                htmlPages.push(`${addTabSpace}<div class=\"row\">`);\r\n                tabNum++;\r\n                addTabSpace = this.tabSpace(tabNum);\r\n                row.columns.forEach((column, j) => {\r\n                    htmlPages.push(`${addTabSpace}<div class=\"col-md-${grid[j]}\">`);\r\n                    column.contents.forEach(content => {\r\n                        if (content.html.category === 'form') {\r\n                            inputs.push(content);\r\n                        }\r\n                        content.html['grid'] = grid[j];\r\n                        htmlPages.push(addTabSpace + this.get(content));\r\n                    });\r\n                    htmlPages.push(`${addTabSpace}</div>`);\r\n                });\r\n                tabNum--;\r\n                addTabSpace = this.tabSpace(tabNum);\r\n                htmlPages.push(`${addTabSpace}</div>`);\r\n            });\r\n            htmlPages.push(`</section>`);\r\n        });\r\n        return htmlPages.join('\\n');\r\n    }\r\n    tabSpace(tabNum) {\r\n        const tab = \"\\t\";\r\n        var newTab = \"\";\r\n        for (let i = 0; i < tabNum; i++) {\r\n            newTab += tab;\r\n        }\r\n        return newTab;\r\n    }\r\n};\r\nBootstrapHtmlTemplate = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    })\r\n], BootstrapHtmlTemplate);\r\nexport { BootstrapHtmlTemplate };\r\n"]},"metadata":{},"sourceType":"module"}