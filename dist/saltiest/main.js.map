{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-table-to-json/create-table-to-json.component.css","webpack:///./src/app/create-table-to-json/create-table-to-json.component.html","webpack:///./src/app/create-table-to-json/create-table-to-json.component.ts","webpack:///./src/app/form-builder/config/config-choices/config-choices.component.css","webpack:///./src/app/form-builder/config/config-choices/config-choices.component.html","webpack:///./src/app/form-builder/config/config-choices/config-choices.component.ts","webpack:///./src/app/form-builder/config/config-general/config-general.component.css","webpack:///./src/app/form-builder/config/config-general/config-general.component.html","webpack:///./src/app/form-builder/config/config-general/config-general.component.ts","webpack:///./src/app/form-builder/config/config-html-editor/config-html-editor.component.css","webpack:///./src/app/form-builder/config/config-html-editor/config-html-editor.component.html","webpack:///./src/app/form-builder/config/config-html-editor/config-html-editor.component.ts","webpack:///./src/app/form-builder/config/config-img/config-img.component.css","webpack:///./src/app/form-builder/config/config-img/config-img.component.html","webpack:///./src/app/form-builder/config/config-img/config-img.component.ts","webpack:///./src/app/form-builder/config/config-table-builder/config-table-builder.component.css","webpack:///./src/app/form-builder/config/config-table-builder/config-table-builder.component.html","webpack:///./src/app/form-builder/config/config-table-builder/config-table-builder.component.ts","webpack:///./src/app/form-builder/config/config-title/config-title.component.css","webpack:///./src/app/form-builder/config/config-title/config-title.component.html","webpack:///./src/app/form-builder/config/config-title/config-title.component.ts","webpack:///./src/app/form-builder/form-builder-routing.module.ts","webpack:///./src/app/form-builder/form-builder.component.css","webpack:///./src/app/form-builder/form-builder.component.html","webpack:///./src/app/form-builder/form-builder.component.ts","webpack:///./src/app/form-builder/form-builder.module.ts","webpack:///./src/app/form-builder/form-config/form-config.component.css","webpack:///./src/app/form-builder/form-config/form-config.component.html","webpack:///./src/app/form-builder/form-config/form-config.component.ts","webpack:///./src/app/form-builder/form-config/form-config.module.ts","webpack:///./src/app/form-builder/form-menu/form-menu.component.css","webpack:///./src/app/form-builder/form-menu/form-menu.component.html","webpack:///./src/app/form-builder/form-menu/form-menu.component.ts","webpack:///./src/app/form-info/form-info.component.css","webpack:///./src/app/form-info/form-info.component.html","webpack:///./src/app/form-info/form-info.component.ts","webpack:///./src/app/form-info/form-info.module.ts","webpack:///./src/app/form-pages/form-columns/form-columns.component.css","webpack:///./src/app/form-pages/form-columns/form-columns.component.html","webpack:///./src/app/form-pages/form-columns/form-columns.component.ts","webpack:///./src/app/form-pages/form-contents/form-contents.component.css","webpack:///./src/app/form-pages/form-contents/form-contents.component.html","webpack:///./src/app/form-pages/form-contents/form-contents.component.ts","webpack:///./src/app/form-pages/form-pages.component.css","webpack:///./src/app/form-pages/form-pages.component.html","webpack:///./src/app/form-pages/form-pages.component.ts","webpack:///./src/app/form-pages/form-pages.module.ts","webpack:///./src/app/form-pages/form-rows/form-rows.component.css","webpack:///./src/app/form-pages/form-rows/form-rows.component.html","webpack:///./src/app/form-pages/form-rows/form-rows.component.ts","webpack:///./src/app/form-pages/render-content/render-content.component.css","webpack:///./src/app/form-pages/render-content/render-content.component.html","webpack:///./src/app/form-pages/render-content/render-content.component.ts","webpack:///./src/app/form-pages/render-content/render-content.module.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/services/bootstrap-grid-system.service.ts","webpack:///./src/app/services/create-table-to-json.service.ts","webpack:///./src/app/services/form-config.service.ts","webpack:///./src/app/services/form-content-config.service.ts","webpack:///./src/app/services/render-html.service.ts","webpack:///./src/app/shared/directives/sum-be-equals-to.directive.ts","webpack:///./src/app/shared/models/html.model.ts","webpack:///./src/app/shared/models/table.model.ts","webpack:///./src/app/shared/pipes/group-by.pipe.ts","webpack:///./src/app/shared/services/database-engine.service.ts","webpack:///./src/app/shared/services/home.service.ts","webpack:///./src/app/shared/services/html-element.service.ts","webpack:///./src/app/shared/services/language-tool.service.ts","webpack:///./src/app/spell-checker/spell-checker.component.css","webpack:///./src/app/spell-checker/spell-checker.component.html","webpack:///./src/app/spell-checker/spell-checker.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\r\nimport { FormBuilderComponent } from \"./form-builder/form-builder.component\";\r\nimport { SpellCheckerComponent } from './spell-checker/spell-checker.component';\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", redirectTo: \"home\", pathMatch: \"full\" },\r\n    { path: 'spell-checker', component: SpellCheckerComponent },\r\n    { path: '**', component: PageNotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<app-menu></app-menu>\\n<div class=\\\"splash\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-lg-12\\\">\\n\\t\\t\\t\\t<img src=\\\"https://i.imgur.com/WlEBazl.png\\\" alt=\\\"\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<div id=\\\"social\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"center-block text-center\\\">\\n\\t\\t\\t\\t\\t\\t<iframe id=\\\"gh-star\\\" src=\\\"https://ghbtns.com/github-btn.html?user=mashimot&repo=saltiest&type=watch&count=true\\\" width=\\\"110\\\" height=\\\"20\\\" style=\\\"border: none;\\\"></iframe>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'salt';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { DragulaModule, DragulaService } from 'ng2-dragula';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { FormBuilderModule } from './form-builder/form-builder.module';\nimport { HomeModule } from './home/home.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HighlightModule } from 'ngx-highlightjs';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        MenuComponent,\n        PageNotFoundComponent\n    ],\n    imports: [\n        BrowserModule,\n        RouterModule,\n        FormsModule,\n        FormBuilderModule,\n        HomeModule,\n        DragulaModule,\n        AppRoutingModule,\n        HttpModule,\n        HttpClientModule,\n        NgbModule,\n        HighlightModule.forRoot()\n    ],\n    providers: [DragulaService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<section class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <form class=\\\"card\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-8\\\">\\n                        <section type=\\\"pills\\\" active=\\\"active\\\" justified=\\\"true\\\">\\n                            <div index=\\\"0\\\" heading=\\\"Create Table\\\">\\n                                <textarea [(ngModel)]=\\\"string\\\"\\n                                          name=\\\"string\\\"\\n                                          [ngClass]=\\\"{ 'is-invalid' : errors.length > 0 }\\\"\\n                                          class=\\\"form-control form-control-sm h-100\\\"\\n                                          rows=\\\"10\\\"></textarea>\\n                                <div *ngIf=\\\"errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngFor=\\\"let e of errors\\\">\\n                                        {{ e.message }}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div index=\\\"1\\\" heading=\\\"JSON\\\">\\n                                <pre>{{ primaryKeys | json }}</pre>\\n                            </div>\\n                        </section>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"form_ct_database\\\">Database</label>\\n                            <select id=\\\"form_ct_database\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"options.database\\\" name=\\\"database\\\">\\n                                <option *ngFor=\\\"let db of database\\\" [value]=\\\"db\\\">{{ db }}</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"form_ct_grid\\\">Bootstrap Grid</label>\\n                            <input type=\\\"text\\\"\\n                                   id=\\\"form_ct_grid\\\"\\n                                   [(ngModel)]=\\\"gridModel\\\"\\n                                   name=\\\"grid\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': f.controls.grid?.invalid }\\\"\\n                                   class=\\\"form-control form-control-sm\\\"\\n                                   [ngStyle]=\\\"{ cursor: 'pointer' }\\\"\\n                                   sumBeEqualsTo=\\\"12\\\"\\n                                   minlength=\\\"2\\\"\\n                                   pattern=\\\"[0-9 ]+\\\"\\n                                   required>\\n                            <div *ngIf=\\\"f.controls.grid?.invalid || f.controls.grid?.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.controls.grid?.errors?.required \\\">* Enter with your grid.</div>\\n                                <div *ngIf=\\\"f.controls.grid?.errors?.pattern\\\">* Allows only numbers and space.</div>\\n                                <div *ngIf=\\\"f.controls.grid?.errors?.minlength\\\">* Min. Length is {{ f.controls.grid?.errors.minlength.requiredLength }}.</div>\\n                                <div *ngIf=\\\"f.controls.grid?.errors?.isSumInvalid\\\">* The sum must be equals to {{ f.controls.grid.errors?.sumBeEqualsTo }}.</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"createTable()\\\">Generate</button>\\n            </div>\\n        </form>\\n    </div>\\n</section>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { CreateTableToJsonService } from '../services/create-table-to-json.service';\nimport { BootstrapGridSystemService } from '../services/bootstrap-grid-system.service'\nimport { DatabaseEngine } from '../shared/services/database-engine.service';\n\n@Component({\n\tselector: 'app-create-table-to-json',\n\ttemplateUrl: './create-table-to-json.component.html',\n\tstyleUrls: ['./create-table-to-json.component.css']\n})\nexport class CreateTableToJsonComponent implements OnInit {\n\t@Output() pageChange = new EventEmitter();\n\tgridModel: string;\n\tdatabase: Array<string>;\n\terrors: Array<{ message?: string }>;\n\tprimaryKeys: any[];\n\toptions = {\n\t\tdatabase: <string> 'oracle'\n\t};\n\tstring: string;\n\n\n\tconstructor() {\n\t\tthis.gridModel = '4 4 4';\n\t\tthis.errors = [];\n\t\tthis.database = [];\n\t}\n\n\tngOnInit() {\n\t\tthis.database = DatabaseEngine.getDatabaseEngines();\n\t\tthis.string = [\n\t\t\t'supplier_id number(10) NOT NULL',\n\t\t\t'supplier_name varchar2(50) NOT NULL',\n\t\t\t'address varchar2(50)',\n\t\t\t'city varchar2(50)',\n\t\t\t'state varchar2(25)',\n\t\t\t'dat_now date',\n\t\t\t'zip_code varchar2(10),price NUMBER(12,2)'\n\t\t].join(\",\\n\");\n\t}\n\n\tpublic onSubmit() {\n\n\t}\n\n\tpublic createTable() {\n\t\tlet ct = new CreateTableToJsonService();\n\t\tct.setString(this.string);\n\t\tct.convert();\n\t\tthis.errors = ct.getError();\n\t\tif (!ct.hasError()) {\n            let data = ct.getData();\n            let bootstrapGridSystem = new BootstrapGridSystemService(data, this.gridModel);\n\t\t\tbootstrapGridSystem.convert();\n\t\t\tlet pages = bootstrapGridSystem.getPage();\n\t\t\tthis.pageChange.emit(pages);\n\t\t}\n\t}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n\\t<div class=\\\"card-header\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-5\\\">\\n\\t\\t\\t<button class=\\\"btn btn-secondary btn-sm btn-block\\\" type=\\\"button\\\" (click)=\\\"orderBy('text')\\\">\\n\\t\\t\\t\\tOrder by Text\\n\\t\\t\\t\\t<span ng-show=\\\"sortType == 'text' && !sortReverse\\\" class=\\\"fa fa-caret-down\\\"></span>\\n\\t\\t\\t\\t<span ng-show=\\\"sortType == 'text' && sortReverse\\\" class=\\\"fa fa-caret-up\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col-md-5\\\">\\n\\t\\t\\t<button class=\\\"btn btn-secondary btn-sm btn-block\\\" type=\\\"button\\\" (click)=\\\"orderBy('value')\\\">\\n\\t\\t\\t\\tOrder by Value\\n\\t\\t\\t\\t<span ng-show=\\\"sortType == 'value' && !sortReverse\\\" class=\\\"fa fa-caret-down\\\"></span>\\n\\t\\t\\t\\t<span ng-show=\\\"sortType == 'value' && sortReverse\\\" class=\\\"fa fa-caret-up\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t<button class=\\\"btn btn-secondary btn-sm btn-block\\\" type=\\\"button\\\" (click)=\\\"addElement()\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"card-body\\\" [formGroup]=\\\"parentFormGroup.controls.html\\\"\\n\\t[ngClass]=\\\"{ 'is-invalid': elements.invalid }\\\">\\n\\n\\t\\t<div *ngIf=\\\"elements.invalid || elements.touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t<div *ngIf=\\\"elements.errors?.required\\\">Array, woo woo woo</div>\\n\\t\\t</div>\\n\\t\\t<div [dragula]='\\\"sortableElements\\\"'\\n\\t\\t\\t[(dragulaModel)]=\\\"elements.controls\\\"\\n\\t\\t\\tformArrayName=\\\"elements\\\">\\n\\t\\t\\t<div *ngFor=\\\"let element of elements.controls; let id = index;\\\"\\n\\t\\t\\t\\t[formGroupName]=\\\"id\\\"\\n\\t\\t\\t\\tclass=\\\"sortable-item-contents\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t(input)=\\\"elementChanged()\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control form-control-sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': getField('text', id).invalid }\\\" />\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"getField('text', id).invalid || getField('text', id).touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"getField('text', id).errors?.required\\\">You did not enter a field</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"getField('text', id).errors?.minlength\\\">Your field is too short</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"value\\\"\\n\\t\\t\\t\\t\\t\\t\\t(input)=\\\"elementChanged()\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control form-control-sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': getField('value', id).invalid }\\\" />\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"getField('value', id).invalid || getField('value', id).touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"getField('value', id).errors?.required\\\">You did not enter a field</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"getField('value', id).errors?.minlength\\\">Your field is too short</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm btn-block\\\" (click)=\\\"removeContent(id)\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"far fa-trash-alt\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"element-handle\\\">\\n\\t\\t\\t\\t\\t\\tmove\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-5\\\">\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" (click)=\\\"cloneThis('value')\\\" class=\\\"btn btn-secondary btn-sm btn-block\\\">\\n\\t\\t\\t\\t\\tClone Text to Values\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-5\\\">\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" (click)=\\\"cloneThis('text')\\\" class=\\\"btn btn-secondary btn-sm btn-block\\\">\\n\\t\\t\\t\\t\\tClone Values To Text\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"card-footer\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"fast-entry\\\">Fast Entry</label>\\n\\t\\t\\t<textarea id=\\\"fast-entry\\\"\\n\\t\\t\\t\\t\\t[(ngModel)]=\\\"text\\\"\\n\\t\\t\\t\\t\\t(ngModelChange)=\\\"stringToElement()\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\tstyle=\\\"resize: none; height: 210px;\\\"></textarea>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { DragulaService } from 'ng2-dragula';\nimport { Subscription } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\n\n@Component({\n    selector: 'app-config-choices',\n    templateUrl: './config-choices.component.html',\n    styleUrls: ['./config-choices.component.css']\n})\nexport class ConfigChoicesComponent implements OnInit {\n    @Input() parentFormGroup;\n\n    text: string = '';\n    sortType: string;\n    sortReverse: boolean;\n    subs = new Subscription();\n    html: any;\n    \n    constructor(\n        private dragulaService: DragulaService,\n        private fb: FormBuilder\n    ) {\n        dragulaService.createGroup('sortableElements', {\n            moves: (el, container, handle) => {\n                return handle.classList.contains('element-handle');\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.subs.add(this.dragulaService.dropModel('sortableElements').subscribe(\n          ({ sourceModel, targetModel, item }) => {\n                this.elements.controls = sourceModel;\n                this.text = this.elementToString();\n            }\n        ));\n        this.html = this.parentFormGroup.controls.html;\n    }\n\n    ngOnChanges() {\n        this.text = this.elementToString();\n    }\n\n    ngOnDestroy() {\n        this.dragulaService.destroy('sortableElements');\n    }\n\n    elementChanged(): void {\n        this.text = this.elementToString();        \n    }\n\n    addElement(): void {\n        this.elements.push(this.getElement());\n    }\n\n    private getElement(text: string = '', value: string = '') : object {\n        return this.fb.group({\n            'text': [text, [\n                Validators.required\n            ]],\n            'value': [value, [\n                Validators.required\n            ]]\n        });\n    }\n\n    public stringToElement(): void{\n      if (this.text.length > 0) {\n            let string = this.text.split('\\n');\n            let cloneElements = JSON.parse(JSON.stringify(this.elements.value));\n\n            for (let i = 0; i < string.length; i++) {\n                let str = string[i];\n                let firstMatch = str;\n                let secondMatch = '';\n                if(str.indexOf('|') !== -1){\n                    let match = str.split('|');\n                    firstMatch = match[0];\n                    secondMatch = str.substring(firstMatch.length + 1); //return '' if '|' was not found\n                }\n                let text  = (typeof firstMatch  !== 'undefined')? firstMatch: '';\n                let value = (typeof secondMatch !== 'undefined') ? secondMatch : '';\n\n                this.elements.removeAt(i);\n                if (typeof this.elements.controls[i] === 'undefined') {\n                    this.elements.push(this.getElement(text, value));\n                } else {\n                    this.elements.controls[i].patchValue({\n                        text: text,\n                        value: value\n                    });\n                }\n            }\n        } else {\n            while (this.elements.length !== 0) {\n                this.elements.removeAt(0);\n            }\n        }\n    }\n\n    public removeContent($index: number) {\n        this.elements.removeAt($index);\n        this.text = this.elementToString();\n    }\n\n    public orderBy(type){\n        if(this.sortType !== type){\n            this.sortReverse = true;\n        }\n        this.sortReverse = !this.sortReverse;\n        this.sortType    = type;\n    }\n\n    public cloneThis(name){\n        let elementsLength = this.elements.value.length;\n        if(elementsLength > 0){\n            let cloneThisObjectName = (name === 'value')? 'text' : 'value';\n            for(let i = 0; i < elementsLength; i++){\n                this.elements.value[i][name] = this.elements.value[i][cloneThisObjectName];\n            }\n            this.text = this.elementToString();\n            this.stringToElement();\n        }\n    }\n\n    public elementToString(): string {\n        let string = '';\n        //fire the `valueChanges` manually\n        this.elements.updateValueAndValidity({ onlySelf: false, emitEvent: true });\n        let e = this.elements.value;\n\n        if(typeof e !== 'undefined'){\n            if (e.length > 0){\n                for (let i = 0; i < e.length; i++){\n                    let str = e[i];\n                    let pipe = (str.value === '')? '' : '|';\n                    let element = {\n                        text: typeof str.text !== 'undefined'? str.text : '',\n                        value: typeof str.value !== 'undefined'? str.value : '',\n                    };\n\n                    string += (element.text + pipe + element.value) + (i === e.length - 1 ? '' : \"\\n\");\n                }\n            } \n        }\n        return string;\n    }\n\n    public getField(field: string, index: number) {\n        return this.elements.controls[index].get(field);\n    }\n\n    get elements() {\n        return this.parentFormGroup.get('html.elements');\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <form class=\\\"card-body\\\">\\r\\n    <div class=\\\"form-group\\\" [formGroup]=\\\"parentFormGroup.controls.table\\\">\\r\\n      <label>\\r\\n        <div class=\\\"checkbox-inline\\\">\\r\\n          <input type=\\\"checkbox\\\"\\r\\n                 formControlName=\\\"nullable\\\"\\r\\n                 style=\\\"display: none;\\\" checked>\\r\\n          Required?\\r\\n          <div [ngSwitch]=\\\"nullable.value\\\" >\\r\\n            <span *ngSwitchCase=\\\"true\\\"><i class=\\\"far fa-check-square\\\"></i> Yes</span>\\r\\n            <span *ngSwitchCase=\\\"false\\\"><i class=\\\"far fa-square\\\"></i> No</span>\\r\\n            <span *ngSwitchDefault><i class=\\\"far fa-square\\\"></i> No</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" [formGroup]=\\\"parentFormGroup.controls.html\\\">\\r\\n      <label>Description:</label>\\r\\n      <input type=\\\"text\\\"\\r\\n              formControlName=\\\"label\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              [ngClass]=\\\"{ 'is-invalid': label.invalid }\\\"\\r\\n      />\\r\\n      <div *ngIf=\\\"label.invalid || label.touched\\\" class=\\\"invalid-feedback\\\">\\r\\n        <div *ngIf=\\\"label.errors?.required\\\">You did not enter a field</div>\\r\\n        <div *ngIf=\\\"label.errors?.minlength\\\">Your field is too short</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-config-general',\r\n  templateUrl: './config-general.component.html',\r\n  styleUrls: ['./config-general.component.css']\r\n})\r\nexport class ConfigGeneralComponent implements OnInit {\r\n  @Input() parentFormGroup;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  get html() {\r\n    return this.parentFormGroup.controls.html;\r\n  }\r\n\r\n  get label() {\r\n    return this.parentFormGroup.get('html.label');\r\n  }\r\n\r\n  get nullable() {\r\n    return this.parentFormGroup.get('table.nullable');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"parentFormGroup.controls.html\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <textarea formControlName=\\\"data\\\" class=\\\"form-control h-100\\\" rows=\\\"10\\\"></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config-html-editor',\r\n  templateUrl: './config-html-editor.component.html',\r\n  styleUrls: ['./config-html-editor.component.css']\r\n})\r\nexport class ConfigHtmlEditorComponent implements OnInit {\r\n  @Input() parentFormGroup;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get data() {\r\n    return this.parentFormGroup.get('html.data');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-group\\\" [formGroup]=\\\"parentFormGroup.controls.html\\\">\\r\\n  <label for=\\\"title-text\\\">Image source</label>\\r\\n  <input type=\\\"text\\\"\\r\\n         id=\\\"img-src\\\"\\r\\n         formControlName=\\\"src\\\"\\r\\n         class=\\\"form-control\\\"\\r\\n         [ngClass]=\\\"{ 'is-invalid': src.invalid }\\\"\\r\\n         />\\r\\n  <div *ngIf=\\\"src.invalid || src.touched\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"src.errors?.required\\\">You did not enter a field</div>\\r\\n    <div *ngIf=\\\"src.errors?.minlength\\\">Your field is too short</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config-img',\r\n  templateUrl: './config-img.component.html',\r\n  styleUrls: ['./config-img.component.css']\r\n})\r\nexport class ConfigImgComponent implements OnInit {\r\n  @Input() parentFormGroup;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get src() {\r\n      return this.html.get('src');\r\n  }\r\n\r\n  get html() {\r\n      return this.parentFormGroup.controls.html;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button type=\\\"button\\\" ng-click=\\\"newColumn()\\\" class=\\\"btn btn-outline-primary btn-block btn-sm\\\">\\r\\n          <i class=\\\"fa fa-columns\\\" aria-hidden=\\\"true\\\"></i> New Column\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button type=\\\"button\\\" ng-click=\\\"newLine()\\\" class=\\\"btn btn-outline-primary btn-block btn-sm\\\">\\r\\n          <i class=\\\"fa fa-bars\\\"></i> New Line\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <pre>{{ content.html.fields | json }}</pre>\\r\\n\\r\\n    <div *ngIf=\\\"content.html.fields.length > 0\\\">\\r\\n      <div ng-show=\\\"hasDuplicateName\\\" class=\\\"alert alert-danger\\\">\\r\\n        <strong ng-bind=\\\"duplicatedName\\\" class=\\\"text-dark\\\"></strong> already exists! The name must be unique.\\r\\n      </div>\\r\\n      <table class=\\\"table table-condensed table-bordered\\\" *ngIf=\\\"content.html.fields.length > 0\\\">\\r\\n        <thead class=\\\"thead-light\\\" ui-sortable>\\r\\n          <tr>\\r\\n            <th *ngFor=\\\"let f of fields; let fieldIndex = index;\\\">\\r\\n              {{ fieldIndex }}\\r\\n              <div class=\\\"input-group input-group-sm\\\">\\r\\n                <input type=\\\"text\\\"\\r\\n                       ng-change=\\\"verifyDuplicates($index, hadouken)\\\"\\r\\n                       (blur)=\\\"newField(fieldIndex, f, hadouken)\\\"\\r\\n                       [(ngModel)]=\\\"hadouken\\\"\\r\\n                       [value]=\\\"f\\\"\\r\\n                       class=\\\"form-control form-control-sm\\\" />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <span class=\\\"input-group-text text-danger\\\" ng-click=\\\"deleteColumn(key)\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody ui-sortable>\\r\\n          <tr *ngFor=\\\"let field of content.html.fields; let fieldIndex = index;\\\">\\r\\n            <td *ngFor=\\\"let f of fields\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"field[f]\\\">\\r\\n            </td>\\r\\n            <td>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" ng-click=\\\"deleteLine(fieldIndex)\\\">\\r\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <h6 class=\\\"alert alert-danger\\\" *ngIf=\\\"content.html.fields.length <= 0\\\">\\r\\n      <i class=\\\"fa fa-exclamation-triangle\\\"></i> Empty Table\\r\\n    </h6>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config-table-builder',\r\n  templateUrl: './config-table-builder.component.html',\r\n  styleUrls: ['./config-table-builder.component.css']\r\n})\r\nexport class ConfigTableBuilderComponent implements OnInit {\r\n  @Input() content;\r\n  fields: Array<any>;\r\n  hadouken: number[];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public newField(index, key, newKey) {\r\n    //console.log(key);\r\n    console.log(newKey);\r\n    if (typeof newKey !== 'undefined' && newKey.trim() !== '') {\r\n      var fields = this.content.html.fields;\r\n      console.log(fields);\r\n\r\n      if (fields.length > 0) {\r\n        for (var i = 0; i < fields.length; i++) {\r\n          var field = fields[i];\r\n          fields[i][newKey] = field[key];\r\n          delete fields[i][key];\r\n        }\r\n        var keysArr = Object.keys(fields[0]);\r\n        var lastItem = keysArr[keysArr.length - 1];\r\n        keysArr.splice(index, 0, lastItem);\r\n\r\n        this.content.html.fields = JSON.parse(JSON.stringify(fields, keysArr));\r\n        this.fields = this.getKeyFields();\r\n      }\r\n    }\r\n  }\r\n  ngOnInit() {\r\n      this.fields = this.getKeyFields();\r\n  }\r\n\r\n  ngOnChanges() {\r\n  }\r\n\r\n  public getKeyFields() {\r\n      if (this.content.html.fields.length > 0) {\r\n          return Object.keys(this.content.html.fields[0]);\r\n      }\r\n      return [];\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\"  [formGroup]=\\\"parentFormGroup.controls.html\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title-heading-type\\\">Heading Type</label>\\r\\n      <select id=\\\"title-heading-type\\\" formControlName=\\\"tag\\\" class=\\\"form-control form-control-sm\\\">\\r\\n        <option *ngFor=\\\"let h of headingTypes\\\" [value]=\\\"h\\\">{{ h }}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title-text\\\">Title</label>\\r\\n      <input type=\\\"text\\\"\\r\\n             id=\\\"title-text\\\"\\r\\n             formControlName=\\\"text\\\"\\r\\n             class=\\\"form-control form-control-sm\\\"\\r\\n             [ngClass]=\\\"{ 'is-invalid': text.invalid }\\\" />\\r\\n      <div *ngIf=\\\"text.invalid || text.touched\\\" class=\\\"invalid-feedback\\\">\\r\\n        <div *ngIf=\\\"text.errors?.required\\\">You did not enter a field</div>\\r\\n        <div *ngIf=\\\"text.errors?.minlength\\\">Your field is too short</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config-title',\r\n  templateUrl: './config-title.component.html',\r\n  styleUrls: ['./config-title.component.css']\r\n})\r\nexport class ConfigTitleComponent implements OnInit {\r\n  //@Input() content;\r\n  @Input() parentFormGroup;\r\n\r\n  headingTypes: Array<string>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.headingTypes = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\r\n  }\r\n\r\n  get html() {\r\n    return this.parentFormGroup.controls.html;\r\n  }\r\n\r\n  get text() {\r\n    return this.html.get('text');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormBuilderComponent } from \"./form-builder.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: 'form-builder', component: FormBuilderComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [RouterModule],\r\n    declarations: []\r\n})\r\nexport class FormBuilderRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <app-create-table-to-json (pageChange)=\\\"getPages($event)\\\" class=\\\"col-md-12\\\"></app-create-table-to-json>\\n</div>\\n<ul class=\\\"nav nav-tabs nav-pills\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" (click)=\\\"tabNumber = 1;\\\">Salt</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#menu1\\\" (click)=\\\"tabNumber = 2;\\\">Salty Suite</a>\\n    </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n    <div *ngIf=\\\"tabNumber == 1\\\">\\n        <div class=\\\"row\\\">\\n            <app-form-menu (isNewFile)=\\\"isNewFile($event)\\\" (isNewPage)=\\\"isNewPage($event)\\\" class=\\\"col-md-3\\\"></app-form-menu>\\n            <app-form-pages [(pages)]=\\\"pages\\\" class=\\\"col-md-9\\\"></app-form-pages>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"tabNumber == 2\\\">\\n        <app-form-info [(pages)]=\\\"pages\\\" class=\\\"col-md-12\\\"></app-form-info>\\n    </div>\\n</div>\\n<app-form-config></app-form-config>\\n\\n<textarea class=\\\"form-control\\\" rows=\\\"40\\\">\\n@extends('Admin.layouts.app_index')\\n\\n@section('css')\\n@endsection\\n\\n@section('breadcrumb-manual')\\n<li>Financeiro</li>\\n<li></li>\\n@endsection\\n\\n@section('pagina_header')\\n@endsection\\n\\n@section('pagina_conteudo')    \\n    {{ bootstrap.init() }}\\n\\n    {{ bootstrap.table() }}\\n\\n    <!-- MODAL CRUD -->\\n    {!! $HTML::modalOpen('crud_mudar_aqui', 'Adicionar') !!}\\n        {!! $HTML::formOpen('form_mudar_aqui', $acao) !!}  \\n            {{ bootstrap.html() }}\\n        {!! $HTML::formClose() !!}\\n    {!! $HTML::modalClose(true, $HTML::modalBotoesSalvar('mudar_aqui')) !!}\\n@endsection   \\n \\n@section('bibliotecascript')\\n    @include('bibliotecas.js.scripts.modalCrud')\\n@endsection\\n\\n@section('script')    \\n    {{ bootstrap.script() }}\\n@endsection\\n</textarea>\\n<textarea class=\\\"form-control\\\" rows=\\\"40\\\">\\n    /**\\n     * Determine if the user is authorized to make this request.\\n     *\\n     * @return bool\\n     */\\n    public function authorize(){\\n        return true;\\n    }\\n\\n    public function rules(){\\n        $rules = [\\n            {{ laravel.rules }}\\n        ];\\n        return $rules;\\n    }\\n\\n    /**\\n     * Get the validation rules that apply to the request.\\n     *\\n     * @return array\\n     */\\n    public function attributes(){\\n        $attributes = [\\n            {{ laravel.attributes }}\\n        ];\\n        return $attributes;\\n    }\\n</textarea>\\n\\n<textarea class=\\\"form-control\\\" rows=\\\"40\\\">\\nclass AlgumaClasse extends ModelAuditable {\\n  protected $table      = '{{ laravel.table }}';\\n  protected $primaryKey = '{{ laravel.primaryKey }}';\\n  public $incrementing  = true; \\n  public $sequence      = 'sga_{{ laravel.primaryKey }}_seq';  \\n  \\n  protected $fillable = {{ laravel.fillable }};\\n\\n}\\n</textarea>\\n\\n\"","import { Component, OnInit, ChangeDetectionStrategy, Injectable } from '@angular/core';\nimport { RenderHtmlService } from '../services/render-html.service';\nimport { HomeService } from \"../shared/services/home.service\";\nimport { DragulaService } from 'ng2-dragula';\n\nimport { Page } from \"../shared/models/page.model\";\nimport { Content } from \"../shared/models/content.model\";\nimport { Html, IHtml } from \"../shared/models/html.model\";\nimport { Table, ITable } from \"../shared/models/table.model\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Validator {\n\n    inputs: any[];\n    rules: string;\n    attributes: string;\n    messages: string;\n    \n    html: IHtml;\n    table: ITable;\n\n    constructor() { \n        this.inputs = [];\n    }\n\n    setParams(d) {\n        this.html = new Html(d.html);\n        this.table = new Table(d.table);\n    }\n\n    setInputs(inputs) {\n        this.inputs = inputs;\n    }\n\n    getValidator() {\n        var rules = [];\n        rules.push(\n            this.isRequired(),\n            this.getDataType(),\n            this.getMaxlength()\n        );\n        var rules = rules.filter(function (el) {\n            return el != \"\" && el != null;\n        });\n        this.rules = `\\t'${this.table.columnName}' => ${JSON.stringify(rules)},\\n`;\n        this.attributes = `\\t'${this.table.columnName}' => '${this.html.label}',\\n`;        \n    }\n\n    getDataType(): string {\n        switch (this.table.type) {\n            case 'number':\n                return 'numeric';\n            case 'date':\n                return 'date_format:\"d/m/Y\"';\n            default:\n                return null;\n        }\n    }\n\n    getMaxlength(): string {\n        if (parseInt(this.table.size) > 0) {             \n            if (this.table.type == 'number') {\n                if(this.table.size.indexOf('.') !== -1){\n                    var sizeArr = this.table.size.split('.');\n                    var b = '.';\n                    var position = parseInt(sizeArr[0]) - parseInt(sizeArr[1]);\n                    var endBetween = '';\n                    for(var i = 0; i < parseInt(this.table.size); i++){\n                        endBetween += '9';\n                    }\n                    var output = [endBetween.slice(0, position), b, endBetween.slice(position)].join('');\n\n        \n                    return `between:0,${output}`;\n                }  \n                return `digits_between:1,${this.table.size}`;\n            }\n            return 'max:' + this.table.size;\n        }\n        return null;\n    }\n\n    laravel() {\n        let attr = '';\n        let rules = '';\n        let fillable = '';\n        return this.inputs.reduce(\n            (prev, curr) => {\n                this.setParams(curr);\n                this.getValidator();\n                fillable += `\"${curr.table.columnName}\",\\n`;\n                return {\n                    rules: rules += this.rules,\n                    attributes: attr += this.attributes,\n                    fillable: `[${fillable}]`,\n                    th: `<th>${curr.html.labelName}</th>`,\n                    primaryKey: '',\n                    table: ''\n                };\n            }\n        , {});\n    }\n\n    isRequired(): string {\n        return this.table.nullable ? 'required' : 'nullable';\n    }\n\n    getMessages(): string {\n        return this.messages;\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Bootstrap {\n    tableName: string = \"i_table_mudar_aqui\";\n    pages: Array<Page>;\n    inputs: Array<Content>;\n    code: string = '';\n\n    constructor(\n        private renderHtmlService: RenderHtmlService\n    ) {\n    }\n\n    init(): void {\n        this.inputs = [];\n        /*this.code   = this.pages.map((page, pageNumber) => {\n            return `\n            <section class=\"page-${pageNumber + 1}\">\n                ${page.rows.map(row => {\n                    let grid = row.grid.split(' ');\n                    return `\n                    <div class=\"row\">\n                        ${row.columns.map((column, j) => {\n                            return `\n                                ${column.contents.map(content => {\n                                    if (content.html.category === 'form') {\n                                        this.inputs.push(content);\n                                    }\n                                    content.html['grid'] = grid[j];\n                                    this.renderHtmlService.setParams(content);\n                                    return this.renderHtmlService.get().code;\n                                })}\n                            `\n                        }).join('')}  \n                    </div>`\n                }).join('')}\n            </section>`\n        }).join('');*/\n        var htmlPages = [];\n        var t = \"\\n\\t\";\n\n        this.pages.forEach((page, pageNumber) => {\n            htmlPages.push(`\\n<section class=\"page-${pageNumber + 1}\">`);\n                var tabNum = 1;\n                t = this.tabSpace(tabNum);\n                page.rows.forEach(row => {\n                    let grid = row.grid.split(' ');\n                    htmlPages.push(`${t}<div class=\"row\">`);\n                    tabNum++;\n                    t = this.tabSpace(tabNum);\n                        row.columns.forEach((column, j) => {\n                            //htmlPages.push(`${t}<div class=\"col-md-${grid[j]}\">`);\n                            column.contents.forEach(content => {\n                                if (content.html.category === 'form') {\n                                    this.inputs.push(content);\n                                }\n                                content.html['grid'] = grid[j];\n                                this.renderHtmlService.setParams(content);\n                                htmlPages.push(t + this.renderHtmlService.get().code);\n                            });\n                            //htmlPages.push(`${t}</div>`);\n                        });\n                    tabNum--;\n                    t = this.tabSpace(tabNum);\n                    htmlPages.push(`${t}</div>`);\n                });\n            htmlPages.push(`</section>`);\n        });\n        this.code = htmlPages.join(\"\\n\");\n    }\n\n    private tabSpace(tabNum : number) : string{\n        var tab = \"\\t\";\n        var newTab = \"\";\n        for(var i = 0; i < tabNum; i++){\n            newTab += tab;\n        }\n        return newTab;\n    }\n\n    html(): string{\n        return this.code;\n    }\n\n    table(): string{\n        let th = this.inputs.map((item) => { \n            return `\\n<th>${item.html.label}</th>`;\n        }, '').join('');\n        return `\n        <table class=\"table table-striped\" id=\"${this.tableName}\">\n            <thead>\n                <tr>\n                ${th}\n                <th class=\"td_justo no-sort text-right\">\n                {!! $HTML::iconeCriar(\n                    Auth::user()->can('admin.financeirodescontos.create'), \n                    '#', \n                    true, \n                    route('admin.financeirodescontos.store'))\n                !!}\n                </th>                \n                </tr>\n            </thead>\n        </table>\n        `;\n    }\n\n    script(){\n        var script = this.inputs.map((item) => {\n            return { \n                data: item.table.columnName,\n                name: item.table.columnName\n            };\n        }, []);\n\n        script.push({\n            'data': 'action',\n            'name': 'name'     \n        });\n\n        return `\n<script>\n    /*---------------------Datatables--------------------------------*/\n    var table = $('#${this.tableName}').DataTable({\n        stateSave: true,\n        processing: true,\n        serverSide: true,\n        cache: true,\n        columns: ${JSON.stringify(script, null, '\\t')}\n    });\n    /*---------------------/Datatables-------------------------------*/\n</script>        \n        `;\n    }\n\n    getInputs() {\n        return this.inputs;\n    }\n\n    setPages(pages) {\n        this.pages = pages;\n    }\n}\n\n@Component({\n    selector: 'app-form-builder',\n    templateUrl: './form-builder.component.html',\n    styleUrls: ['./form-builder.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormBuilderComponent implements OnInit {\n    pages: Array<Page>;\n    inputs: Array<Content>;\n    tabNumber: number;\n    tabMVC: number; \n\n    constructor(\n        private b: Bootstrap,\n        private validator: Validator,\n\t\tprivate homeService: HomeService\n    ) {\n    }\n\n    ngOnInit() {\n        this.tabNumber = 1;\n        this.tabMVC = 1;\n        this.pages = this.homeService.get();\n    }\n\n    get bootstrap() {\n        this.b.setPages(this.pages);\n        return this.b;\n    }\n\n    get laravel() {\n        this.validator.setInputs(this.b.getInputs());\n        return this.validator.laravel();\n    }\n\n    public isNewFile(newFile: boolean): void {\n        if (newFile) {\n            this.pages = [];\n        }\n    }\n\n    public isNewPage(newPage: boolean): void {\n        if (newPage) {\n            this.pages.push({\n                name: 'Page ' + (this.pages.length + 1),\n                rows: []\n            });\n        }\n    }\n\n    public getPages(pages): void {\n        this.pages.push(pages);\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DragulaModule, DragulaService } from 'ng2-dragula';\n\nimport { FormBuilderComponent } from \"./form-builder.component\";\nimport { CreateTableToJsonComponent } from './../create-table-to-json/create-table-to-json.component';\n\nimport { FormMenuComponent } from './form-menu/form-menu.component';\n\nimport { FormBuilderRoutingModule } from \"./form-builder-routing.module\";\nimport { FormConfigModule } from './../form-builder/form-config/form-config.module';\nimport { FormPagesModule } from './../form-pages/form-pages.module';\nimport { GroupByPipe } from '../shared/pipes/group-by.pipe';\nimport { FormInfoModule } from '../form-info/form-info.module';\nimport { ConfigTitleComponent } from './config/config-title/config-title.component';\nimport { SumBeEqualsToDirective } from '../shared/directives/sum-be-equals-to.directive';\nimport { RenderContentModule } from '../form-pages/render-content/render-content.module';\n\n@NgModule({\n    imports: [\n        FormBuilderRoutingModule,\n        CommonModule,\n        FormsModule,\n        DragulaModule,\n        RenderContentModule,\n        FormPagesModule,\n        FormConfigModule,\n        FormInfoModule\n    ],\n    exports: [\n        DragulaModule\n    ],\n    declarations: [\n        CreateTableToJsonComponent,\n        FormMenuComponent,\n        FormBuilderComponent,\n        GroupByPipe,\n        SumBeEqualsToDirective\n    ],\n    providers: []\n})\nexport class FormBuilderModule { }\n","module.exports = \"\"","module.exports = \"\\n<ng-template #modal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <form *ngIf=\\\"formConfig\\\" [formGroup]=\\\"formConfig\\\" (ngSubmit)=\\\"c('Save')\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">{{ title }}</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <app-render-content [content]=\\\"formConfig.value\\\"></app-render-content>\\n                                    <div *ngFor=\\\"let r of render.components\\\">\\n                                        <app-config-general [parentFormGroup]=\\\"formConfig\\\"\\n                                                            *ngIf=\\\"r.componentName === 'app-config-general'\\\"></app-config-general>\\n                                        <app-config-img [parentFormGroup]=\\\"formConfig\\\"\\n                                                        *ngIf=\\\"r.componentName === 'app-config-img'\\\"></app-config-img>\\n                                        <app-config-choices [parentFormGroup]=\\\"formConfig\\\"\\n                                                            *ngIf=\\\"r.componentName === 'app-config-choices'\\\"></app-config-choices>\\n                                        <app-config-title [parentFormGroup]=\\\"formConfig\\\"\\n                                                        *ngIf=\\\"r.componentName === 'app-config-title'\\\"></app-config-title>\\n                                        <app-config-html-editor [parentFormGroup]=\\\"formConfig\\\"\\n                                                                *ngIf=\\\"r.componentName === 'app-config-html-editor'\\\"></app-config-html-editor>\\n                                    </div>\\n                                    <!--<button type=\\\"submit\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!formConfig.valid\\\">Submit </button>-->\\n                                </div>\\n                            </div>\\n                            <!--\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6 col-offset-3\\\">\\n                                    <pre>{{ formConfig.value | json }}</pre>\\n                                </div>\\n                            </div>\\n                            -->\\n                        </div>\\n                    </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-outline-success btn-sm\\\" [ngClass]=\\\"{'btn-outline-danger': !formConfig.valid }\\\" [disabled]=\\\"!formConfig.valid\\\">Save </button>\\n            </div>\\n        </div>\\n    </form>\\n    </ng-template>\\n    \"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { FormContentConfigService } from './../../services/form-content-config.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-form-config',\n    templateUrl: './form-config.component.html',\n    styleUrls: ['./form-config.component.css']\n})\nexport class FormConfigComponent implements OnInit {\n    @ViewChild('modal') modal: TemplateRef<any>;\n\n    closeResult: string;\n    options: NgbModalOptions;\n    formConfig: FormGroup;\n    render: {\n        [key: string]: {\n            tabs: Array<string>\n        }\n    };\n    constructor(\n        private formContentConfig: FormContentConfigService,\n        private fb: FormBuilder,\n        private modalService: NgbModal\n    ) { }\n\n    ngOnInit() {\n        this.options = {\n            size: 'lg',\n            backdrop : 'static',\n            keyboard : false,\n            centered: true\n        };\n        this.formContentConfig.getContent().subscribe(\n            (data) => {\n                const tag = data.html.tag;\n                this.render = this.formContentConfig.render()[tag];\n                this.formConfig = this.fb.group({\n                    html: this.fb.group({\n                        'tag': [data.html.tag],\n                        'category': [data.html.category],\n                        'elements': this.fb.array([], [\n                            //Validators.required\n                        ]),\n                        'label': [data.html.label, [\n                            //Validators.required,\n                            //Validators.minLength(10)\n                        ]],\n                        'src': [data.html.src, [\n                            //Validators.required,\n                            //Validators.minLength(5)\n                        ]],\n                        'text': [data.html.text, [\n                            //Validators.required\n                        ]],\n                        'data': [data.html.data, [\n                            //Validators.required\n                        ]]\n                    }),\n                    table: this.fb.group({\n                        'columnName': [data.table.columnName],\n                        'type': [data.table.type],\n                        'size': [data.table.size],\n                        'nullable': [data.table.nullable, [\n                            //Validators.required\n                        ]]\n                    })\n                });\n                if (data.html.elements) {\n                    this.populate(data.html.elements);\n                }\n                let m = this.modalService.open(this.modal, this.options)\n                m.result.then((result) => {\n                    this.closeResult = `Closed with: ${result}`;\n                    if (typeof data.html !== undefined) {\n                        data.html = this.formConfig.value.html;\n                    }\n                    if (typeof data.table !== undefined) {\n                        data.table = this.formConfig.value.table;\n                    }\n                }, (reason) => {\n                    //this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n                });\n     \n                /*this.formConfig.valueChanges.subscribe((form) => {\n                    if (typeof data.html !== undefined) {\n                        this.content.html = form.html;\n                    }\n                    if (typeof data.table !== undefined) {\n                        this.content.table = form.table;\n                    }\n                });*/\n              \n            }\n        );\n    }\n\n    populate(e) {\n        return e.map(\n            (d) => this.elements['controls'].push(this.getElement(d.text, d.value))\n        );\n    }\n\n    private getElement(text: string = '', value: string = ''): object {\n        return this.fb.group({\n            'text': [text, [\n                Validators.required\n            ]],\n            'value': [value, [\n                Validators.required\n            ]]\n        });\n    }\n\n    get elements() {\n        return this.formConfig.controls['html'].get('elements');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigChoicesComponent } from './../config/config-choices/config-choices.component';\nimport { ConfigGeneralComponent } from './../config/config-general/config-general.component';\nimport { ConfigHtmlEditorComponent } from './../config/config-html-editor/config-html-editor.component';\nimport { ConfigImgComponent } from './../config/config-img/config-img.component';\nimport { FormConfigComponent } from './form-config.component';\nimport { DragulaModule } from 'ng2-dragula';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConfigTableBuilderComponent } from '../config/config-table-builder/config-table-builder.component';\nimport { RenderContentModule } from '../../form-pages/render-content/render-content.module';\nimport { ConfigTitleComponent } from '../config/config-title/config-title.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tDragulaModule,\n\t\tFormsModule,\n\t\tRenderContentModule,\n\t\tReactiveFormsModule\n\t],\n\texports: [\n\t\tFormConfigComponent,\n\t\tConfigChoicesComponent,\n\t\tConfigGeneralComponent,\n\t\tConfigHtmlEditorComponent,\n\t\tConfigImgComponent,\n\t\tConfigTableBuilderComponent,\n\t\tConfigTitleComponent\n\t],\n\tdeclarations: [\n\t\tFormConfigComponent,\n\t\tConfigChoicesComponent,\n\t\tConfigGeneralComponent,\n\t\tConfigHtmlEditorComponent,\n\t\tConfigImgComponent,\n\t\tConfigTableBuilderComponent,\n\t\tConfigTitleComponent\n\t]\n})\nexport class FormConfigModule { }\n","module.exports = \".full-width {\\r\\n}\\r\\n\"","module.exports = \"<section class=\\\"sticky-top scrollable\\\">\\n  <div class=\\\"px-3 py-3 card bg-white text-black\\\">\\n    <div class=\\\"row\\\">\\n      <section id=\\\"page\\\" class=\\\"col-md-12\\\">\\n        <button (click)=\\\"preview()\\\"\\n                class=\\\"btn btn-block btn-lg btn-link\\\">\\n                <i [ngClass]=\\\"{ 'fa-eye': previewMode, 'fa-eye-slash': !previewMode }\\\" class=\\\"fa fa-3x\\\"></i>\\n            Preview {{ previewMode? 'Mode' : '' }}\\n        </button>\\n        <button class=\\\"btn btn-primary btn-block btn-sm\\\" (click)=\\\"newFile()\\\">\\n            <i class=\\\"fa fa-tasks\\\" aria-hidden=\\\"true\\\"></i>\\n          New Task\\n        </button>\\n        <div [dragula]=\\\"'pages'\\\" [(dragulaModel)]=\\\"pageModel\\\" class=\\\"menu-page-sortable\\\">\\n          <span (click)=\\\"newPage()\\\" class=\\\"badge badge-primary col-md-12 page-handle\\\">\\n            <i class=\\\"fa fa-file\\\"></i> New Page\\n          </span>\\n        </div>\\n      </section>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <section id=\\\"containers\\\" class=\\\"col-md-12\\\">\\n        <fieldset name=\\\"bootstrap_container\\\" [dragula]='\\\"rowSortable\\\"' [(dragulaModel)]=\\\"bootstrap\\\" class=\\\"menu-row-sortable\\\">\\n          <div *ngFor=\\\"let b of bootstrap\\\">\\n            <form #f=\\\"ngForm\\\">\\n              <div [hidden]=\\\"f.invalid\\\">\\n                <strong class=\\\"badge badge-primary row-handle col-md-12\\\" [ngStyle]=\\\"{ cursor: 'move' }\\\">\\n                  <i class=\\\"fa fa-arrows-alt fa-1x\\\"></i> GRID {{ b.grid }}\\n                </strong>\\n              </div>\\n              <div class=\\\"input-group input-group-sm\\\">\\n                <input type=\\\"text\\\"\\n                       [(ngModel)]=\\\"b.grid\\\"\\n                       name=\\\"grid\\\"\\n                       [ngClass]=\\\"{ 'is-invalid': f.controls.grid?.invalid }\\\"\\n                       class=\\\"form-control form-control-sm\\\"\\n                       [ngStyle]=\\\"{ cursor: 'pointer' }\\\"\\n                       sumBeEqualsTo=\\\"12\\\"\\n                       minlength=\\\"2\\\"\\n                       pattern=\\\"[0-9 ]+\\\"\\n                       required>\\n                <div *ngIf=\\\"f.controls.grid?.invalid || f.controls.grid?.touched\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.controls.grid?.errors?.required \\\">* Enter with your grid.</div>\\n                  <div *ngIf=\\\"f.controls.grid?.errors?.pattern\\\">* Allows only numbers and space.</div>\\n                  <div *ngIf=\\\"f.controls.grid?.errors?.minlength\\\">* Min. Length is {{ f.controls.grid?.errors.minlength.requiredLength }}.</div>\\n                  <div *ngIf=\\\"f.controls.grid?.errors?.isSumInvalid\\\">* The sum must be equals to {{ f.controls.grid.errors?.sumBeEqualsTo }}.</div>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </fieldset>\\n      </section>\\n    </div>\\n    <section id=\\\"tools\\\" class=\\\"py-1\\\">\\n      <div *ngFor=\\\"let tool of tools | groupBy: 'html.category'; let toolCategoryIndex = index;\\\">\\n        <strong class=\\\"text-center text-uppercase px-2\\\">{{ tool.key }}</strong>\\n        <div [dragula]='\\\"contents\\\"'\\n             [(dragulaModel)]=\\\"tool.value\\\"\\n             class=\\\"menu-content-sortable\\\">\\n          <div *ngFor=\\\"let t of tool.value\\\"\\n               [ngStyle]=\\\"{ 'cursor': 'move' }\\\"\\n               class=\\\"badge bg-dark col-md-6 text-white content-handle menu-content-sortable\\\"\\n               [attr.data-content]=\\\"t | json\\\"\\n               >\\n              <span class=\\\"content-handle text-white\\\">{{ t.html.tag }}</span>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </div>\\n</section>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormConfigService } from './../../services/form-config.service';\nimport { HtmlElementService } from '../../shared/services/html-element.service';\nimport { BootstrapGridSystemService } from '../../services/bootstrap-grid-system.service';\n\n@Component({\n    selector: 'app-form-menu',\n    templateUrl: './form-menu.component.html',\n    styleUrls: ['./form-menu.component.css']\n})\nexport class FormMenuComponent implements OnInit {\n    tools: Array<any>;\n    pageModel: object; \n    grids: Array<any>;\n    bootstrap: Array<{\n        grid: string,\n        columns: Array<any>\n    }>;\n    config: {\n        previewMode: boolean\n    };\n    previewMode: boolean;\n\n    @Output() isNewFile = new EventEmitter();\n    @Output() isNewPage = new EventEmitter();\n\n    constructor(\n      private formConfigService: FormConfigService,\n      private htmlElementService: HtmlElementService\n    ) {\n      }\n\n    ngOnInit() {\n        this.previewMode = true;\n        this.config = {\n            previewMode: this.previewMode\n        };\n        this.preview();\n        this.grids = new BootstrapGridSystemService().getGrid();\n        this.bootstrap = [this.grids[0]];\n        this.tools = this.htmlElementService.get();\n        this.pageModel = [{\n            rows: [],\n            name: \"Salt - A tool for Lazy Developer\"\n        }];\n    }\n\n    public preview(): void {\n        this.previewMode = !this.previewMode;\n        this.config = {\n            previewMode: this.previewMode\n        };\n        this.formConfigService.setConfig(this.config);\n    }\n\n    public newFile(): void {\n        this.isNewFile.emit(true);\n    }\n\n    public newPage(): void {\n        this.isNewPage.emit(true);\n    }\n}\n","module.exports = \"\"","module.exports = \"<form  class=\\\"card\\\">\\n    <div *ngFor=\\\"let page of pages; let pageIndex = index;\\\" class=\\\"px-2 py-2\\\">\\n        <span>Page {{ pageIndex + 1 }}</span>\\n        <hr />\\n        <div *ngFor=\\\"let row of page.rows; let rowIndex = index;\\\">\\n            <section *ngFor=\\\"let column of row.columns; let columnIndex = index;\\\">\\n                <div *ngFor=\\\"let d of column.contents; let contentIndex = index;\\\">\\n                    <section *ngIf=\\\"d.html?.category === 'form'\\\" class=\\\"row\\\">\\n                        <div class=\\\"col-md-1\\\">\\n                        \\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-append\\\" *ngIf=\\\"d.table.columnName.toLowerCase().indexOf('ind_') != -1 && d.table.columnName\\\">\\n                                    <button (click)=\\\"buscaDominio(d.table.columnName)\\\" class=\\\"btn btn-secondary btn-sm dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                        <i class=\\\"fa fa-search fa-1x\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </button>\\n                                    <div class=\\\"dropdown-menu\\\" [ngStyle]=\\\"{ width: '100%' }\\\">\\n                                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ng-show=\\\"vm.loading\\\">\\n                                            <i class=\\\"fa fa-cog fa-1x fa-spin\\\"></i> Loading...\\n                                        </a>\\n                                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ng-show=\\\"!vm.loading && vm.dominio.error.has\\\">\\n                                            <span class=\\\"text-danger\\\" ng-bind=\\\"vm.dominio.error.msg\\\"></span>\\n                                        </a>\\n                                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ng-repeat=\\\"(dI, dom) in vm.dominio.data\\\" ng-if=\\\"vm.dominio.data.length > 0\\\">\\n                                            <span ng-bind=\\\"dom.val_dominio_item\\\"></span> - <span ng-bind=\\\"dom.dsc_dominio_item\\\"></span>\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': tableColumnName.invalid }\\\" \\n                                name=\\\"table-column-name-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\"                                 \\n                                [(ngModel)]=\\\"d.table.columnName\\\" \\n                                [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                                #tableColumnName=\\\"ngModel\\\"\\n                                required\\n                                >\\n                                <div *ngIf=\\\"tableColumnName.invalid || tableColumnName.touched\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"tableColumnName.errors?.required\\\">This is required.</div>\\n                                </div> \\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': htmlLabel.invalid }\\\" \\n                            name=\\\"html-label-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\"                                 \\n                            [(ngModel)]=\\\"d.html.label\\\" \\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            #htmlLabel=\\\"ngModel\\\"\\n                            required\\n                            >                            \\n                            <div *ngIf=\\\"htmlLabel.invalid || htmlLabel.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"htmlLabel.errors?.required\\\">This is required.</div>\\n                            </div>   \\n                        </div>\\n                        <div class=\\\"col-md-2\\\" >\\n                            <select class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': htmlTag.invalid }\\\"\\n                            name=\\\"input-type-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\" \\n                            [(ngModel)]=\\\"d.html.tag\\\"\\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            #htmlTag=\\\"ngModel\\\"\\n                            required\\n                            >\\n                                <option value=\\\"\\\">Selecione</option>\\n                                <option value=\\\"{{ tag }}\\\" *ngFor=\\\"let tag of tags\\\">{{ tag }}</option>\\n                            </select>\\n                            <div *ngIf=\\\"htmlTag.invalid || htmlTag.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"htmlTag.errors?.required\\\">This is required.</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <select class=\\\"form-control text-uppercase\\\" [ngClass]=\\\"{ 'is-invalid': tableType.invalid }\\\"\\n                            name=\\\"table-type-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\" \\n                            [(ngModel)]=\\\"d.table.type\\\"\\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            #tableType=\\\"ngModel\\\"\\n                            required\\n                            >\\n                                <option value=\\\"\\\">Selecione</option>\\n                                <option *ngFor=\\\"let db of database; let columnName = index;\\\" [value]=\\\"db.toLowerCase()\\\">{{ db }}</option>\\n                            </select>\\n                            <div *ngIf=\\\"tableType.invalid || tableType.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"tableType.errors?.required\\\">This is required.</div>\\n                            </div>                            \\n                        </div>\\n                        <div class=\\\"col-md-1\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': tableSize.invalid }\\\"\\n                            [(ngModel)]=\\\"d.table.size\\\"\\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            pattern=\\\"^[0-9]+(.[0-9])?$\\\"\\n                            name=\\\"table-size-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\" \\n                            #tableSize=\\\"ngModel\\\"                            \\n                            >\\n                            <div *ngIf=\\\"tableSize.invalid || tableSize.touched\\\" class=\\\"invalid-feedback\\\">\\n                            </div>                               \\n                        </div>\\n                        <div class=\\\"col-md-1\\\">\\n                            <div class=\\\"row\\\">\\n                                <label [ngClass]=\\\"{'badge-danger': d.table.nullable, 'badge-default' : !d.table.nullable}\\\"\\n                                       class=\\\"badge col-md-12\\\"\\n                                       [ngStyle]=\\\"{ 'cursor': 'pointer' }\\\">\\n                                    nullable? {{ d.table.nullable? 'No' : 'Yes' }}\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.table.nullable\\\" name=\\\"asd3\\\" class=\\\"checkbox\\\" [ngStyle]=\\\"{ display: 'none' }\\\">\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-1\\\">\\n                            <button type=\\\"button\\\" (click)=\\\"column.contents.splice(contentIndex, 1)\\\" class=\\\"btn btn-outline-danger btn-sm btn-block\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n                        </div>\\n                    </section>\\n                </div>\\n            </section>\\n        </div>\\n    </div>\\n</form>\\n\"","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { DatabaseEngine } from '../shared/services/database-engine.service';\nimport { HtmlElementService } from '../shared/services/html-element.service';\n\n@Component({\n\tselector: 'app-form-info',\n\ttemplateUrl: './form-info.component.html',\n\tstyleUrls: ['./form-info.component.css'],\n})\nexport class FormInfoComponent implements OnInit {\n\t@Input() pages;\n\t@Output() pagesChange = new EventEmitter();\n\n\tdatabase: Array<any>;\n\ttags: Array<string>;\n\n\tconstructor(\n\t\tprivate htmlElementService: HtmlElementService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.database = Object.keys(DatabaseEngine.get()).map((item) => {\n\t\t\treturn item.toUpperCase();\n\t\t});\n\t\tthis.tags = this.htmlElementService.getTags();\n    }\n\n    public buscaDominio() {\n        alert(\"implementação\");\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormInfoComponent } from './form-info.component';\nimport { FormsModule } from '@angular/forms';\nimport { SpellCheckerComponent } from '../spell-checker/spell-checker.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule\n\t],\n\texports: [\n\t\tFormInfoComponent\n\t],\n\tdeclarations: [\n\t\tFormInfoComponent,\n\t\tSpellCheckerComponent\n\t]\n})\nexport class FormInfoModule { }\n","module.exports = \"\"","module.exports = \"<div\\n    [attr.data-bootstrap-grid]=\\\"row.grid\\\"\\n    dragula=\\\"columns\\\"\\n\\t[(dragulaModel)]=\\\"row.columns\\\"\\n\\tclass=\\\"row page-{{ pageIndex }}_row-{{ rowIndex }}\\\"\\n>\\n\\t<div *ngFor=\\\"let column of row.columns; let columnIndex = index\\\"\\n\\t\\tclass=\\\"col-md-{{ colNumber(columnIndex) }}\\\"\\n\\t\\t[attr.data-current-page-index]=\\\"pageIndex\\\"\\n\\t\\t[attr.data-current-row-index]=\\\"rowIndex\\\"\\n\\t\\t[attr.data-current-column-index]=\\\"columnIndex\\\"\\n\\t>\\n\\t\\t<!--b>[{{ pageIndex }}][{{ rowIndex }}][{{ columnIndex }}]</b-->\\n\\t\\t<div class=\\\"option-column\\\">\\n\\t\\t\\t<div [hidden]=\\\"config?.previewMode\\\">\\n\\t\\t\\t\\t<small class=\\\"column-handle\\\" [ngStyle]=\\\"{ 'cursor': 'move' }\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrows-alt\\\"></i> col-md-{{ colNumber(columnIndex) }}\\n\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t<div class=\\\"border-bottom border-danger\\\"></div>\\n\\t\\t\\t</div>\\t\\n\\t\\t\\t<app-form-contents [column]=\\\"column\\\"></app-form-contents>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormConfigService } from './../../services/form-config.service';\n\n@Component({\n  selector: 'app-form-columns',\n  templateUrl: './form-columns.component.html',\n  styleUrls: ['./form-columns.component.css']\n})\nexport class FormColumnsComponent implements OnInit {\n  @Input() row;\n  @Input() pageIndex;\n  @Input() rowIndex;\n\n  config: {\n    previewMode: boolean\n  };\n\n  constructor(private formConfigService: FormConfigService) { }\n\n  ngOnInit() {\n    this.formConfigService.getConfig().subscribe(\n      (data) => { this.config = data; }\n    );\n  }\n\n  colNumber(columnIndex) {\n      return this.row.grid.trim().split(' ')[columnIndex]\n  }\n}\n","module.exports = \"\"","module.exports = \"<div dragula=\\\"contents\\\"\\n     [(dragulaModel)]=\\\"column.contents\\\"\\n     [ngStyle]=\\\"{ 'min-height': '20px' }\\\">\\n    <div *ngFor=\\\"let content of column.contents; let contentIndex = index\\\"\\n         class=\\\"mt-1\\\">\\n        <div class=\\\"row\\\" [hidden]=\\\"config?.previewMode\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"float-left\\\">\\n                    <small class=\\\"content-handle\\\" [ngStyle]=\\\"{ 'cursor': 'move' }\\\">\\n                        <i class=\\\"fa fa-arrows-alt content-handle\\\"></i> move\\n                    </small>\\n                    <span (click)=\\\"sendDataToModal(content)\\\" [ngStyle]=\\\"{ 'cursor': 'pointer' }\\\" class=\\\"badge btn-outline-primary\\\">\\n                        <i class=\\\"fa fa-edit\\\"></i> edit\\n                    </span>\\n                    <span (click)=\\\"copyHtml(content)\\\" [ngStyle]=\\\"{ 'cursor': 'pointer' }\\\" class=\\\"badge btn-outline-primary\\\">\\n                        <i class=\\\"fa fa-edit\\\"></i> copy html\\n                    </span>                    \\n                </div>\\n                <div class=\\\"float-right\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                    <span (click)=\\\"deleteContent(contentIndex)\\\" class=\\\"badge btn-outline-danger col-md-12\\\" style=\\\"cursor: pointer;\\\">\\n                        <i class=\\\"fas fa-window-close\\\"></i>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"content\\\">\\n            <div [hidden]=\\\"config?.previewMode\\\">\\n                <span *ngIf=\\\"content.html.tag\\\" class=\\\"badge badge-primary\\\">{{ content.html.tag }}</span>\\n                <span *ngIf=\\\"content.table?.nullable && content.html.category === 'form'\\\" class=\\\"badge badge-success\\\">required</span>\\n                <span *ngIf=\\\"!content.table?.nullable && content.html.category === 'form'\\\" class=\\\"badge badge-danger\\\">not required</span>\\n            </div>\\n            <app-render-content [content]=\\\"content\\\"></app-render-content>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormContentConfigService } from '../../services/form-content-config.service';\nimport { FormConfigService } from './../../services/form-config.service';\nimport { RenderHtmlService } from '../../services/render-html.service';\n\n\n@Component({\n    selector: 'app-form-contents',\n    templateUrl: './form-contents.component.html',\n    styleUrls: ['./form-contents.component.css']\n})\nexport class FormContentsComponent implements OnInit {\n    showOptions: boolean;\n    config: {\n        previewMode: boolean\n    };\n\n    @Input() column;\n\n    constructor(\n        private formContentConfigService: FormContentConfigService,\n        private formConfigService: FormConfigService,\n        private renderHtmlService: RenderHtmlService\n    ) {}\n\n    ngOnInit() {\n        this.showOptions = false;\n        this.formConfigService.getConfig().subscribe(\n            (data) => this.config = data\n        );\n    }\n\n    copyHtml(content): void{\n        this.renderHtmlService.setParams(content);\n        let code = this.renderHtmlService.get().html;\n        this.copyToClipboard(code);\n    }\n\n    copyToClipboard(text) {\n        if ((<any>window).clipboardData && (<any>window).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            return (<any>window).clipboardData.setData(\"Text\", text);\n        } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\n            var textarea = document.createElement(\"textarea\");\n            textarea.textContent = text;\n            textarea.style.position = \"fixed\";  // Prevent scrolling to bottom of page in MS Edge.\n            document.body.appendChild(textarea);\n            textarea.select();\n            try {\n                return document.execCommand(\"copy\");  // Security exception may be thrown by some browsers.\n            } catch (ex) {\n                console.warn(\"Copy to clipboard failed.\", ex);\n                return false;\n            } finally {\n                document.body.removeChild(textarea);\n            }\n        }\n    }\n\n    sendDataToModal(content): void {\n        this.formContentConfigService.setContent(content);\n    }\n\n    deleteContent(contentIndex) : void {\n        this.column.contents.splice(contentIndex, 1);\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div \\n    dragula=\\\"pages\\\"\\n    [(dragulaModel)]=\\\"pages\\\"\\n>\\n    <div *ngFor=\\\"let page of pages; let pageIndex = index\\\" class=\\\"mb-1\\\">\\n        <div class=\\\"px-3 py-3\\\" [ngClass]=\\\"{ 'card bg-white text-dark': !config?.previewMode }\\\">\\n            <div class=\\\"row\\\" [hidden]=\\\"config?.previewMode\\\">\\n                <div class=\\\"col-md-12 page-handle\\\" [ngStyle]=\\\"{ cursor: 'move' }\\\">\\n                    <div class=\\\"float-left\\\">\\n                        <span class=\\\"page-handle\\\">{{ page.name }}</span>\\n                    </div>\\n                    <div class=\\\"float-right\\\">\\n                        <small (click)=\\\"deletePage(pageIndex)\\\" class=\\\"badge btn-outline-danger\\\" [ngStyle]=\\\"{ cursor: 'pointer' }\\\">\\n                            <i class=\\\"fas fa-window-close\\\"></i>\\n                            <strong> page {{ pageIndex + 1 }}</strong>\\n                        </small>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"border-bottom border-secondary\\\" [hidden]=\\\"config?.previewMode\\\"></div>\\n            <app-form-rows [page]=\\\"page\\\" [pageIndex]=\\\"pageIndex\\\"></app-form-rows>\\n        </div>\\n    </div><!--/.ng-repeat-->\\n</div>\"","import { Component, OnInit, OnChanges, Input, Output, EventEmitter,  SimpleChanges } from '@angular/core';\nimport { FormConfigService } from './../services/form-config.service';\nimport { DragulaService } from 'ng2-dragula';\nimport { Subscription } from 'rxjs';\n//import { RenderHtmlService } from '../services/render-html.service';\nimport { BootstrapForm } from '../services/render-html.service';\n\n@Component({\n    selector: 'app-form-pages',\n    templateUrl: './form-pages.component.html',\n    styleUrls: ['./form-pages.component.css']   \n})\nexport class FormPagesComponent implements OnInit {\n    @Input() pages;\n    @Output() pagesChange = new EventEmitter();\n    config: {\n        previewMode: boolean\n    };\n    subs = new Subscription();\n    private dropModelPageUpdated = false;\n\n    constructor(\n        private formConfigService: FormConfigService,\n        private dragulaService: DragulaService\n    ) {\n        dragulaService.createGroup('pages', {\n            revertOnSpill: true,\n            removeOnSpill: false,\n            copy: (el, source) => {\n                return source.className === 'menu-page-sortable';\n            },\n            copyItem: (el) => {\n                return el;\n                //console.log(el);\n                //return JSON.parse(JSON.stringify(el));\n            },\n            accepts: (el, target, source, sibling) => {\n                // To avoid dragging from right to left container\n                return target.className !== 'menu-page-sortable';\n            },\n            moves: (el, container, handle) => {\n                if (handle.classList) {\n                    return handle.classList.contains('page-handle');\n                }\n                return false;\n            }\n        });\n        dragulaService.createGroup('columns', {\n            accepts: function(el, target, source, sibling) {\n                    let currRowIndex    = el.getAttribute('data-current-row-index');                \n                    let currPageIndex    = el.getAttribute('data-current-page-index');\n                    let currentClass = 'page-' + currPageIndex + '_row-' + currRowIndex;\n                    return target.classList.contains(currentClass);\n            },            \n            moves: (el, container, handle) => {\n                //let currColumnIndex = handle.getAttribute('data-current-column-index');\n                if (handle.classList) {\n                    return handle.classList.contains('column-handle');\n                }\n                return false;\n            }\n        });\n\n        this.subs.add(dragulaService.dropModel(\"columns\")\n            .subscribe(({ name, el, target, source, item, sourceModel, targetModel, sourceIndex, targetIndex }) => {\n                let currRowIndex    = el.getAttribute('data-current-row-index');\n                let pageIndex       = el.getAttribute('data-current-page-index');\n                if(pageIndex != null && currRowIndex != null){\n                    let gridArr = this.pages[pageIndex].rows[currRowIndex].grid.split(\" \");\n                    let aux     = gridArr[sourceIndex];\n                    \n                    gridArr.splice(sourceIndex, 1);\n                    gridArr.splice(targetIndex, 0, aux);\n\n                    this.pages[pageIndex].rows[currRowIndex].grid = gridArr.join(\" \").trim();\n                }   \n            })\n        );\n        \n        dragulaService.createGroup('rowSortable', {\n            copy: (el, source) => {\n                return source.className === 'menu-row-sortable';\n            },\n            copyItem: (el) => {\n                return JSON.parse(JSON.stringify(el));\n            },\n            accepts: function(el, target, source, sibling) {\n                // To avoid draggin from right to left container\n                return target.className !== 'menu-row-sortable';\n            },\n            moves: (el, container, handle) => {\n                if (handle.classList) {\n                    return handle.classList.contains('row-handle');\n                }\n                return false;\n            }\n        });\n        this.subs.add(dragulaService.dropModel(\"rowSortable\")\n            .subscribe(({ sourceModel, targetModel, item }) => {\n                if (item.columns.length <= 0) {\n                    let textWithoutExtraWhiteSpaces = item.grid.replace(/ +/g, ' ').trim();\n                    let arrNumbers = textWithoutExtraWhiteSpaces.split(' ');\n                    let columns = [];\n                    if (arrNumbers.length > 0) {\n                        for (let i = 0; i < arrNumbers.length; i++) {\n                            columns.push({\n                                contents: []\n                            });\n                        }\n                        item.grid = textWithoutExtraWhiteSpaces;\n                        item.columns = columns;\n                    }\n                    return item;\n                }\n            })\n        );\n        dragulaService.createGroup('contents', {\n            copy: (el, source) => {\n                return source.classList.contains('menu-content-sortable');\n            },\n            copyItem: (el) => {\n                return JSON.parse(JSON.stringify(el));\n            },\n            accepts: (el, target, source, sibling) => {\n                // To avoid dragging from right to left container\n                return !target.classList.contains('menu-content-sortable');\n            },\n            moves: (el, container, handle) => {\n                if (handle.classList) {\n                    return handle.classList.contains('content-handle');\n                }\n                return false;\n            }\n        });\n\n        this.subs.add(dragulaService.cloned(\"contents\")\n            .subscribe(({ name, clone, original, cloneType }) => {\n                if (original.classList.contains('menu-content-sortable')) {\n                    let currentDataAttr = JSON.parse(clone.getAttribute('data-content'));\n                    let r = new BootstrapForm(currentDataAttr);\n                    //r.setParams(currentDataAttr);\n                    clone.classList.remove('badge', 'bg-dark', 'col-md-6', 'bg-primary', 'text-white');\n                    clone.innerHTML = '';\n                    clone.insertAdjacentHTML('afterbegin',\n                        '<div class=\"px-1 py-1 bg-white text-dark\" style=\"min-width: 300px;\">' + r.get() + '</div>'\n                    );\n                }\n            })\n        );\n        this.subs.add(dragulaService.dropModel(\"contents\")\n            .subscribe(({ name, el, target, source, item, sourceModel, targetModel, sourceIndex, targetIndex }) => {\n                if (item.table && item.html) {\n                    if (\n                        typeof item.table.columnName === 'undefined' && item.html.category === 'form'\n                    ) {\n                        item.table.columnName = 'name__' + new Date().getUTCMilliseconds();\n                        item.table.size = '';\n                    }\n                }\n            })\n        );\n    }\n\n    ngOnInit() {\n        this.pages = this.pages ? this.pages.length > 0 ? this.pages : [] : [];\n        this.formConfigService.getConfig().subscribe(\n            (data) => { this.config = data; }\n        );\n    }\n\n    ngAfterViewInit() {\n        this.subs.add(this.dragulaService.drop(\"pages\")\n            .subscribe((value) => {\n                this.dropModelPageUpdated = true;\n            })\n        );\n    }\n\n    ngDoCheck() {    \n        if (this.dropModelPageUpdated) { // this excutes if this.dropModelUpdated is true only\n            this.pagesChange.emit(this.pages);\n        }\n    }\n\n    ngOnDestroy() {\n        this.dragulaService.destroy('pages');\n        this.dragulaService.destroy('contents');\n        this.dragulaService.destroy('columns');\n        this.dragulaService.destroy('rowSortable');\n    }\n\n    public deletePage(pageIndex) {\n        this.pages.splice(pageIndex, 1);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragulaModule } from 'ng2-dragula';\n\nimport { FormPagesComponent } from './form-pages.component';\nimport { FormRowsComponent } from './form-rows/form-rows.component';\nimport { FormColumnsComponent } from './form-columns/form-columns.component';\nimport { FormContentsComponent } from './form-contents/form-contents.component';\nimport { RenderContentModule } from './render-content/render-content.module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tDragulaModule.forRoot(),\n\t\tRenderContentModule\n\t],\n\texports: [\n\t\tFormPagesComponent,\n\t\tFormRowsComponent,\n\t\tFormColumnsComponent,\n\t\tFormContentsComponent\n\t],\n\tdeclarations: [\n\t\tFormPagesComponent,\n\t\tFormRowsComponent,\n\t\tFormColumnsComponent,\n\t\tFormContentsComponent\n\t]\n})\nexport class FormPagesModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"px-3 py-3 bg-danger text-white\\\" *ngIf=\\\"page.rows.length <= 0\\\">\\n  Place Bootstrap grid columns here\\n</div>\\n<div\\n\\tdragula=\\\"rowSortable\\\"\\n\\t[(dragulaModel)]=\\\"page.rows\\\"\\n    [ngStyle]=\\\"{ 'min-height': '20px' }\\\"\\n    class=\\\"row-sortable\\\"\\n>\\n<div *ngFor=\\\"let row of page.rows; let rowIndex = index;\\\">\\n    <div class=\\\"row\\\" [hidden]=\\\"config?.previewMode\\\">\\n      \\t<div class=\\\"col-md-12 row-handle\\\" [ngStyle]=\\\"{ cursor: 'move' }\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t<small class=\\\"row-handle\\\">row {{ rowIndex + 1 }}</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"float-right\\\">\\n\\t\\t\\t\\t<small (click)=\\\"page.rows.splice(rowIndex, 1);\\\" class=\\\"badge btn-outline-danger\\\" [ngStyle]=\\\"{ cursor: 'pointer' }\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-window-close\\\"></i> row {{ rowIndex + 1 }}\\n\\t\\t\\t\\t</small>\\n        \\t</div>\\n      \\t</div>\\n    </div>\\n    <div class=\\\"border-bottom border-secondary\\\" [hidden]=\\\"config?.previewMode\\\"></div>\\n    \\t<app-form-columns [row]=\\\"row\\\" [pageIndex]=\\\"pageIndex\\\" [rowIndex]=\\\"rowIndex\\\"></app-form-columns>\\n  \\t</div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormConfigService } from './../../services/form-config.service';\n\n@Component({\n    selector: 'app-form-rows',\n    templateUrl: './form-rows.component.html',\n    styleUrls: ['./form-rows.component.css']\n})\nexport class FormRowsComponent implements OnInit {\n    @Input() page;\n    @Input() pageIndex;\n\n    config: {\n        previewMode: boolean;\n    };\n    constructor(private formConfigService: FormConfigService) {\n\n    }\n\n    ngOnInit() {\n        this.formConfigService.getConfig().subscribe(\n            (data) => { this.config = data; }\n        );\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<span [innerHtml]=\\\"render()\\\"></span>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { RenderHtmlService } from './../../services/render-html.service';\n\n@Component({\n    selector: 'app-render-content',\n    templateUrl: './render-content.component.html',\n    styleUrls: ['./render-content.component.css']\n})\nexport class RenderContentComponent implements OnInit {\n\n    @Input() content;\n    innerHtml: SafeHtml;\n\n    constructor(\n        private sanitizer: DomSanitizer,\n        private renderHtml: RenderHtmlService\n    ) {\n        this.content = {\n            html: {},\n            table: {}\n        }\n    }\n\n    ngOnInit() {\n\n    }\n\n    render() {\n        if (typeof this.content !== 'undefined') {\n            this.renderHtml.setParams(this.content);\n            let html = this.renderHtml.get().html;\n            //console.log(html);\n            return this.sanitizer.bypassSecurityTrustHtml(html);\n        }\n        return 'undefined';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RenderContentComponent } from './render-content.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\texports: [\n\t\tRenderContentComponent\n\t],\n\tdeclarations: [RenderContentComponent]\n})\nexport class RenderContentModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n{\n\tpath: 'home', component: HomeComponent\n}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild(routes)\n\t],\n\texports: [\n\t\tRouterModule\n\t],\n\tdeclarations: []\n})\nexport class HomeRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <app-form-pages [pages]=\\\"pages\\\"></app-form-pages>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormConfigService } from './../services/form-config.service';\nimport { HomeService } from './../shared/services/home.service';\nimport { Page } from './../shared/models/page.model';\n\n@Component({\nselector: 'app-home',\ntemplateUrl: './home.component.html',\nstyleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\tpages: Array<Page>;\n\tconfig: {\n\t\tpreviewMode: boolean\n\t}\n\n\tconstructor(\n\t\tprivate formConfigService: FormConfigService,\n\t\tprivate homeService: HomeService\n\t\t) {\n\t\tthis.pages = [];\n\t}\n\n\tngOnInit() {\n\t\tthis.config = {\n\t\t\tpreviewMode: true\n\t\t};\n\t\tthis.formConfigService.setConfig(this.config);\n\t\tthis.pages = this.homeService.get();\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { FormPagesModule } from '../form-pages/form-pages.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HomeRoutingModule,\n    FormPagesModule,\n    ReactiveFormsModule\n  ],\n  exports: [HomeComponent],\n  declarations: [\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary navbar-transparent\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"active\\\">Home</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/form-builder']\\\">Salt</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/spell-checker']\\\">Spell Checker</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"http://builtwithbootstrap.com/\\\" target=\\\"_blank\\\">Built With Bootstrap</a>\\n                </li>\\n                <li>\\n                    <a class=\\\"nav-link\\\" href=\\\"https://blog.angular.io/\\\" target=\\\"_blank\\\">Built With Angular 6</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  page-not-found works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Page } from \"./../shared/models/page.model\";\n\n@Injectable()\nexport class BootstrapGridSystemService {\n    _data: any[];\n    _grid: string;\n    _page: Page;\n\n    constructor(data?: any[], grid: string = '4 4 4') {\n        this._data = data;\n        this._grid = grid;\n    }\n  \n    getGrid() {\n        return [{\n          grid: '6 6',\n          columns: []\n        },{\n            grid: '4 4 4',\n            columns: []\n        }, {\n            grid: '3 3 3 3',\n            columns: []\n        }, {\n            grid: '2 2 4 2 2',\n            columns: []\n        }, {\n            grid: '12',\n            columns: []\n        }];\n    }\n    convert() {\n        let groups = [];\n        let grid = this._grid.replace(/ +/g, ' ').trim();\n        let arrGrid = grid.split(' ');\n\n        let chunkSize = arrGrid.length;\n        let page = {\n            rows: [],\n            name: 'Page 1'\n        };\n\n        for (let i = 0; i < this._data.length; i += chunkSize) {\n            groups.push(this._data.slice(i, i + chunkSize));\n        }\n        let count = -1;\n        this._page = groups.reduce(function (acc, group, index) {\n            page.rows.push({\n                grid: grid,\n                columns: []\n            });\n            group.map(function (data, i) {\n                count++;\n                return page.rows[index].columns.push({\n                    contents: [data]\n                });\n            }, 0);\n            return page;\n        }, 0);\n\n        let lastRow = this._page.rows.length;\n        let columns = this._page.rows[lastRow - 1].columns;\n        if (columns.length < chunkSize) {\n            for (let k = columns.length; k < chunkSize; k++) {\n                this._page.rows[lastRow - 1].columns.push({\n                    contents: []\n                });\n            }\n        }\n    }\n    getPage() {\n        return this._page;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DatabaseEngine } from '../shared/services/database-engine.service';\nimport { Content } from \"./../shared/models/content.model\";\nimport { Html } from \"./../shared/models/html.model\";\nimport { Table } from \"./../shared/models/table.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CreateTableToJsonService {\n    _isTextareaWhenSizeEquals: number = 1000;\n    _wordIndex: number = 2;\n    _string: string;\n    _data: Array<Content>;\n    _errors: Array<{\n        message: string\n    }>;\n    _dataBase: {\n        [key: string]: string\n    };\n    _customLabel: {\n        [key: string]: string\n    };\n    html: Html;\n    table: Table;\n    regex: {\n        [key:string]: RegExp\n    } = {\n        onlyNumeric: /^([0-9]+(\\.[0-9]+)?)$/,\n        onlyDecimal: /^([0-9]*([\\,\\.]+)([0-9]+)?)$/g,\n        //valueBtwParentheses: /\\((.*)\\)/,\n        //valueBtwParenthesesGlobal: /\\((.+)\\)/g,\n        valueBtwParentheses: /\\(([^)]*)\\)/,\n        valueBtwParenthesesGlobal: /\\(([^)]*)\\)/g,\n        stringRestriction: /^[\\s\\w+\\_\\-\\,\\.()]*$/\n    };\n\n    constructor() {\n        this.html = new Html();\n        this.table = new Table();\n        this._data = [];\n        this._errors = [];\n        this._dataBase = DatabaseEngine.get('ORACLE');\n        this._customLabel = this.getCustomLabelName();\n    }\n \n    getDataTypeAndSize(str: Array<string>) {\n        let secondMatch = str[1];\n        let inputType, size = '';\n        let dataType = secondMatch;\n        let matchValBtwParen = secondMatch.match(this.regex.valueBtwParentheses);\n        let hasValueBtwParen = false;\n       \n        if (matchValBtwParen !== null) {\n            hasValueBtwParen = true;\n            dataType = secondMatch.replace(matchValBtwParen[0], '');\n        } else {\n            //(2) probably the next element -thirdMatch- must have(or not) the size of the columnName (it must be an integer or float)\n            if (str.length > 2) { //has more than 2 elements\n                let thirdMatch = str[2];\n                matchValBtwParen = thirdMatch.match(this.regex.valueBtwParentheses); //get value between parentheses\n                if (matchValBtwParen !== null){ // it goes to the next index if parentheses doesn't exists\n                    hasValueBtwParen = true;\n                    this._wordIndex = 3;\n                }\n            }\n        }\n\n        if (hasValueBtwParen) {\n            let numeric = matchValBtwParen[1];\n            let regex = new RegExp(this.regex.onlyNumeric);\n            if (!regex.test(numeric)) {\n                this._errors.push({\n                    message: `\\`${this.table.columnName}\\`: ${numeric} is not a number!`\n                });\n            }\n            size = numeric;\n        }\n\n        let database = this._dataBase[dataType.toUpperCase()];\n        //console.log(database);\n        if (typeof database !== 'undefined' && dataType !== '') {\n            inputType = database;\n        } else {\n            this._errors.push({\n                message: `You have an error in your SQL syntax; check the manual for the right syntax to use near '${this.table.columnName}'`\n            });\n        }\n        this.table.type = dataType;\n        this.html.tag = inputType;\n        this.table.size = size;\n    }\n    validateSyntax(words: Array<string>): void {\n        let value = '';\n        let allowed = {\n            'not': {\n                next: ['null'],\n                previous: [],\n                correct: 'not null'\n            },\n            'null': {\n                next: [],\n                previous: [],\n                correct: 'null'\n            },\n            'primary': {\n                next: ['key'],\n                previous: [],\n                correct: 'primary key'\n            },\n            'key': {\n                next: [],\n                previous: ['primary'],\n                correct: 'primary key'\n            },\n            'unique': {\n                    next: [],\n                    previous: [],\n                    correct: 'unique'\n            },\n        };\n        //'not null|null'\n        for (let i = this._wordIndex; i < words.length; i++) {\n            let currentWord = words[i].replace(/,/g, \"\");\n            let hasError = false;\n            let nextValue = '';\n            let prevValue = '';\n            if (typeof allowed[currentWord] === 'undefined') {\n                this._errors.push({\n                    message: `You have an error in your SQL syntax; check the manual for the right syntax to use near '${this.table.columnName}'`\n                });\n            } else {\n                let index = i + 1;\n                if (i === words.length - 1) {\n                    index = words.length - 1;\n                }\n                let nextString = words[index];\n                let prevString = words[i - 1];\n\n                if (allowed[currentWord].next.length > 0) {\n                    if (nextString.indexOf(allowed[currentWord].next[0]) !== -1) {\n                    } else {\n                    nextValue = allowed[currentWord].next[0];\n                        hasError = true;\n                    }\n                }\n                if (allowed[currentWord].previous.length > 0) {\n                    if (prevString.indexOf(allowed[currentWord].previous[0]) !== -1) {\n                    } else {\n                    prevValue = allowed[currentWord].previous[0];\n                        hasError = true;\n                    }\n                }\n                value += `${prevValue} ${currentWord} ${nextValue}`;\n                if (hasError && value !== '') {\n                    this._errors.push({\n                        message: `error: \\`${currentWord}\\` maybe \\`${allowed[currentWord].correct}\\` ? at line: ${this.table.columnName} `\n                    });\n                }\n            }\n        }\n        value = value.replace(/\\s\\s+/g, ' ').trim();\n        this.table.nullable = (value.indexOf(\"not null\") !== -1) ? true : false;\n        this.table.isPrimaryKey = (value.indexOf(\"primary key\") !== -1) ? true : false;\n        this._wordIndex = 2;\n    }\n    convert(): void {\n        let regex = new RegExp(this.regex.stringRestriction);\n        if(!regex.test(this._string)){\n            this._errors.push({\n                message: 'Only allowed dot (.|,|A-Z|a-z|white space|underscore|( )'\n            });\n        }\n\n        let split = this._string.replace(this.regex.valueBtwParenthesesGlobal, (string, first) => {\n            let regex = new RegExp(this.regex.onlyDecimal);\n            if(regex.test(first)){\n                return \"(\" +  first.replace(/,/g, '.') + \")\";\n            }\n            return string;\n        })\n        .split(\",\")\n        .reduce((previous, currentValue) => {\n            if (previous && currentValue !== '') {\n                previous.push(currentValue);\n            }\n            return previous;\n        }, []);\n        console.log(split);\n        let i = 0;\n        while (i < split.length && this._errors.length <= 0) {\n            let currentWord = split[i].toLowerCase().replace(/\\s+/g, \" \").trim();\n            let eachWords = currentWord.split(' ');\n\n            if (eachWords.length <= 1) {\n                this._errors.push({\n                    message: `Incompleted`\n                });\n            } else {\n                this.table.columnName = eachWords[0]; // column name\n\n                if (this.table.columnName === 'create' && eachWords[1] === 'table') {\n                    //this._data.name = stringArr[2];\n                } else {\n                    //the firstMatch  (stringArr[0]) will be always the column name\n                    //the secondMatch (stringArr[1]) will be always the column data type\n                    this.getDataTypeAndSize(eachWords);\n                    this.validateSyntax(eachWords);\n                    this.customInput();\n                    this.customLabelName();\n                    this._data.push({\n                        html: {\n                            category: 'form',\n                            tag: this.html.tag,\n                            label: this.html.label\n                        },\n                        table: {\n                            isPrimaryKey: this.table.isPrimaryKey,\n                            columnName: this.table.columnName,\n                            type: this.table.type,\n                            nullable: this.table.nullable,\n                            size: this.table.size\n                        }\n                    });\n                }\n            }\n            i++;\n        }\n        //console.log(this._data)\n    }\n\n    customLabelName() {\n        let splitColumnName = this.table.columnName.split('_');\n        if (splitColumnName.length > 0) {\n            for (let i = 0; i < splitColumnName.length; i++) {\n                let currentPartialName = splitColumnName[i];\n                let value = this._customLabel[currentPartialName];\n                if (typeof value !== 'undefined')\n                    currentPartialName = value;\n\n                splitColumnName[i] = currentPartialName.charAt(0).toUpperCase() + currentPartialName.substr(1);\n            }\n            this.html.label = splitColumnName.join(' ').trim();;\n        }\n    }\n   \n    customInput() {\n        if (this.table.columnName.indexOf('ind_') !== -1)\n            this.html.tag = 'select';\n\n        if (this.html.tag === 'text' || this.html.tag === 'textarea') {\n            //this.html.tag = (parseInt(this.table.size) <= this._isTextareaWhenSizeEquals)? 'text' : 'textarea';\n            this.html.tag = (parseInt(this.table.size) <= this._isTextareaWhenSizeEquals)? 'text' : 'textarea';\n        }\n    }\n    getData() {\n        return this._data;\n    }\n    setString(_string: string) {\n        this._string = _string;\n    }\n    getString(): string {\n        return this._string;\n    }\n    getError() {\n        return this._errors;\n    }\n    getCustomLabelName() {\n        return {\n            'dat': 'Data',\n            'qtd': 'Quantidade',\n            'cod': 'Código',\n            'dsc': 'Descrição',\n            'ind': '',\n            'usu': 'Usuário',\n            'tpo': 'Tipo',\n            'nom': 'Nome',\n            'est': 'Estado',\n            'acao': 'Ação',\n            'psv': 'Processo Seletivo',\n            'per': 'Porcentagem',\n            'abv': 'Abreviatura',\n            'obs': 'Observação',\n            'num': 'Número',\n            'usuario': 'Usuário',\n            'docto': 'Documento',\n            'doc': 'Documento',\n            'val': 'Valor',\n            'sta': 'Status',\n            'config': 'Configuração',\n            'inicio': 'Ínicio',\n            'termino': 'Término',\n            'situacao': 'Situação',\n            'nivel': 'Nível'\n        };\n    }\n\n    hasError(): boolean {\n        return this._errors.length > 0? true : false;\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\ninterface Config {\r\n    previewMode: boolean\r\n}\r\n//Enviando parametros para componentes diferentes com Subject (Tópico, Assunto) \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FormConfigService {\r\n    // Instância o objeto Subject\r\n    newFormConfigSubject = new BehaviorSubject<any>([]);\r\n\r\n    constructor() { }\r\n\r\n    setConfig(config: Config) {\r\n        console.log(config);\r\n        //Armazena o parametro que foi enviado\r\n        this.newFormConfigSubject.next(config);\r\n    }\r\n\r\n    getConfig() {\r\n        //Fica \"observando\" por atualizações nos dados\r\n        return this.newFormConfigSubject.asObservable();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormContentConfigService {\n\n    newFormConfigSubject = new Subject<any>();\n    component: {\n        [key: string]: {\n            title: string,\n            componentName: string\n        }\n    };\n\n    constructor() {\n        this.component = {\n            general: {\n                title: \"General Configuration\", componentName: 'app-config-general'\n            },\n            choices: {\n                title: \"Choices\", componentName: 'app-config-choices'\n            },\n            visibleIf: {\n                title: \"Vísivel Se\", componentName: '<hide-when-tab content=\"content\"></hide-when-tab>'\n            },\n            htmlEditor: {\n                title: \"Html Editor\", componentName: 'app-config-html-editor'\n            },\n            title: {\n                title: \"Title\", componentName: 'app-config-title'\n            },\n            table: {\n                title: \"Table\", componentName: 'app-config-table-builder'\n            },\n            img: {\n                title: \"Image\", componentName: 'app-config-img'\n            }\n        };\n    }\n\n    render() {\n        return {\n            'h1': {\n                components: [this.component.title]\n            },\n            'h2': {\n                components: [this.component.title]\n            },\n            'h3': {\n                components: [this.component.title]\n            },\n            'h4': {\n                components: [this.component.title]\n            },\n            'h5': {\n                components: [this.component.title]\n            },\n            'h6': {\n                components: [this.component.title]\n            },\n            'legend': {\n                components: [this.component.title]\n            },\n            'radio': {\n                components: [this.component.general, this.component.choices]\n            },\n            'checkbox': {\n                components: [this.component.general, this.component.choices]\n            },\n            'select': {\n                components: [this.component.general, this.component.choices]\n            },\n            'textarea': {\n                components: [this.component.general]\n            },\n            'text': {\n                components: [this.component.general]\n            },\n            'number': {\n                components: [this.component.general]\n            },\n            'date': {\n                components: [this.component.general]\n            },\n            'image': {\n                components: [this.component.img]\n            },\n            'html': {\n                components: [this.component.htmlEditor]\n            },\n            'table': {\n                components: [this.component.table]\n            },\n            'file': {\n                components: [this.component.general]\n            }\n        };\n    };\n\n    setContent(content) {\n        //Armazena o parametro que foi enviado\n        this.newFormConfigSubject.next(content);\n    }\n\n    getContent() {\n        //Fica \"observando\" por atualizações nos dados\n        return this.newFormConfigSubject.asObservable();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Html } from \"./../shared/models/html.model\";\nimport { Table } from \"./../shared/models/table.model\";\n\nexport class BootstrapForm{\n    table: Table;\n    html: Html;\n\n    constructor(d) { \n        this.html = new Html(d.html);\n        this.table = new Table(d.table);\n    }\n    \n    get() {\n        var data = {\n            \"html\": [`${this.html.data}`],\n            \"legend\": [`<legend>${this.html.text}</legend>`],\n            \"h1\": [`<h1>${this.html.text}</h1>`],\n            \"h2\": [`<h2>${this.html.text}</h2>`],\n            \"h3\": [`<h3>${this.html.text}</h3>`],\n            \"h4\": [`<h4>${this.html.text}</h4>`],\n            \"h5\": [`<h5>${this.html.text}</h5>`],\n            \"h6\": [`<h6>${this.html.text}</h6>`],\n            \"table\": \n            [`<table class=\"table\">`,\n                `${this.html.fields.map((field, key) => (`<tr>${Object.keys(this.html.fields[0]).map((f, k) => `<td>${field[f]}</td>`).join('')}</tr>`)).join('')}`,\n            `</table>`],\n            \"image\": [`<img src=\"${this.html.src}\" class=\"img-fluid\">`],\n            \"textarea\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"txt_${this.table.columnName}\">${this.html.label}</label>`,\n                `<textarea class=\"form-control\" name=\"${this.table.columnName}\" id=\"txt_${this.table.columnName}\"  ${this.table.nullable ? `` : `required`}></textarea>`,\n            `</div>`],\n            \"select\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<select class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" ${this.table.nullable ? `` : `required`}>`,\n                    `<option value=\"\">Selecione</option>`,\n                    `${this.html.elements.map(element => `<option value=\"${element.value}\">${element.text}</option>`).join('')}`,\n                `</select>`,\n            `</div>`],\n            \"checkbox\":\n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.elements.map(element => `<div class=\"checkbox\"><label><input type=\"checkbox\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"radio\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.elements.map(element => `<div class=\"radio\"><label><input type=\"radio\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"text\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<input type=\"text\" class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" value=\"\"  ${this.table.nullable ? `` : `required`}>`,\n            `</div>`],\n            \"number\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<input type=\"number\" class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" value=\"\" ${this.table.nullable ? `` : `required`}>`,\n            `</div>`],\n            \"date\":\n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<input type=\"date\" class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" value=\"\" ${this.table.nullable ? `` : `required`}>`,\n            `</div>`]\n        }\n        return typeof data[this.html.tag] !== 'undefined'? data[this.html.tag].join(\"\\n\") : '';\n    }    \n}\n\nexport class CustomForm{\n    table: Table;\n    html: Html;\n\n    constructor(d) { \n        this.html = new Html(d.html);\n        this.table = new Table(d.table);\n    }\n    \n    get() {\n        var data = {\n            \"html\": [`${this.html.data}`],\n            \"legend\": [`<legend>${this.html.text}</legend>`],\n            \"h1\": [`<h1>${this.html.text}</h1>`],\n            \"h2\": [`<h2>${this.html.text}</h2>`],\n            \"h3\": [`<h3>${this.html.text}</h3>`],\n            \"h4\": [`<h4>${this.html.text}</h4>`],\n            \"h5\": [`<h5>${this.html.text}</h5>`],\n            \"h6\": [`<h6>${this.html.text}</h6>`],\n            \"table\": \n            [`<table class=\"table\">`,\n                `${this.html.fields.map((field, key) => (`<tr>${Object.keys(this.html.fields[0]).map((f, k) => `<td>${field[f]}</td>`).join('')}</tr>`)).join('')}`,\n            `</table>`],\n            \"image\": [`<img src=\"${this.html.src}\" class=\"img-fluid\">`],\n            \"textarea\": \n            [`{!! $HTML::textArea(${this.html.grid}, '${this.table.columnName}', ${parseInt(this.table.size) > 0? `${this.table.size}` : `''`}, \"${this.html.label}\", ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`],\n            \"select\": \n            [`{!! $HTML::selectDominio(${this.html.grid}, '${this.table.columnName}', '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}' ) !!}`],\n            \"checkbox\":\n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.elements.map(element => `<div class=\"checkbox\"><label><input type=\"checkbox\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"radio\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.elements.map(element => `<div class=\"radio\"><label><input type=\"radio\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"text\": \n            [`{!! $HTML::inputTexto(${this.html.grid}, '${this.table.columnName}', ${parseInt(this.table.size) > 0? `${this.table.size}` : `''`}, '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`],\n            \"number\": \n            [`{!! $HTML::inputNumero(${this.html.grid}, '${this.table.size? (this.table.size.indexOf('.') != -1? `decimal`: `inteiro`) : '' }', '${this.table.columnName}', ${parseInt(this.table.size) > 0? `${this.table.size}` : `''`}, '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`],\n            \"date\": \n            [`{!! $HTML::inputData(${this.html.grid}, '${this.table.columnName}', '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`]\n        }\n        return typeof data[this.html.tag] !== 'undefined'? data[this.html.tag].join(\"\\n\") : '';\n    }    \n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RenderHtmlService {\n    fields?: any[];\n\n    bootstrapForm: BootstrapForm;\n    customForm: CustomForm;\n\n    constructor() {}\n\n    setParams(d) {\n        this.bootstrapForm = new BootstrapForm(d);\n        this.customForm = new CustomForm(d);\n    }\n\n    get() {\n        return {\n            html: this.bootstrapForm.get(),\n            code: this.customForm.get()\n        }\n    }\n}\n","import { Directive, Input } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS, ValidatorFn, ValidationErrors } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[sumBeEqualsTo]',\r\n  providers: [{\r\n    provide: NG_VALIDATORS,\r\n    useExisting: SumBeEqualsToDirective,\r\n    multi: true\r\n  }]\r\n})\r\nexport class SumBeEqualsToDirective {\r\n  @Input() sumBeEqualsTo;\r\n\r\n  constructor() { }\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    let sum = 0;\r\n    if (control.value) {\r\n      var arrValues = control.value.trim().replace(/ +/g, ' ').split(' ');\r\n\r\n      if (arrValues.length > 0) {\r\n        for (var i = 0; i < arrValues.length; i++) {\r\n          var num = parseInt(arrValues[i]);\r\n          sum += num;\r\n        }\r\n      }\r\n      return (parseInt(this.sumBeEqualsTo) === sum) ? null : { 'isSumInvalid': true, 'sumBeEqualsTo': this.sumBeEqualsTo };\r\n    }\r\n  }\r\n}\r\n","export interface IHtml {\n    category?: string;\n    tag?: string;\n    grid?: string;\n    label?: string;\n    text?: string;\n    class?: string;\n    fields?: Array<any>;\n    src?: string;\n    data?: string;\n    elements?: Array<{ text: string, value: string }>;\n}\n\nexport class Html {\n    category: string;\n    tag: string;\n    grid: string;\n    label: string;\n    text: string;\n    class: string;\n    fields: Array<any> = [];\n    src: string;\n    data: string;\n    elements: Array<{ text: string, value: string }> = [];\n\n    constructor(html: IHtml = {}){\n        for (let key in html)\n        {\n            if (html.hasOwnProperty(key))\n            {\n                let value = html[key];\n                if (typeof value !== \"undefined\")\n                    this[key] = value;\n            }\n        }\n    }\n}","export interface ITable {\n    columnName?: string;\n    isPrimaryKey?: boolean;\n    type?: string;\n    nullable?: boolean;\n    size?: string; \n}\nexport class Table {\n    columnName: string = '';\n    isPrimaryKey: boolean = false;\n    type: string = '';\n    nullable: boolean = false;\n    size?: string = ''; \n\n    constructor(table: ITable = {}){\n        for (let key in table)\n        {\n            if (table.hasOwnProperty(key))\n            {\n                let value = table[key];\n                if (typeof value !== \"undefined\")\n                    this[key] = value;\n            }\n        }\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'groupBy'\n})\nexport class GroupByPipe implements PipeTransform {\n\n    transform(collection: any, property: string): any {\n        const newCollection = collection.reduce((previous, currentValue) => {\n            let c = this.resolve(property, currentValue);\n\n            if (previous[c]) {\n                previous[c].push(currentValue)\n            } else {\n                previous[c] = [currentValue];\n            }\n            return previous;\n        }, {});\n\n        return Object.keys(newCollection).map((key) => {\n            return {\n                key: key,\n                value: newCollection[key]\n            }\n        });\n    }\n    resolve(path, obj = self, separator = '.') {\n        var properties = Array.isArray(path) ? path : path.split(separator)\n        return properties.reduce((prev, curr) => prev && prev[curr], obj)\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class DatabaseEngine {\n\tpublic static type: string = 'ORACLE'; //Oracle as Default\n\t/*\n\tkey = data_type. ex: type CHAR\n\tvalue = input type of html. ex. <input type=\"text\" />\n\t| key         | type\n\t| CHAR        | <input type=\"text\" />\n\t| NUMBER      | <input type=\"number\" />\n\t| TIMESTAMP   | <input type=\"text\" class=\"datepicker\"/> //from datepicker plugin\n\t| VARCHAR2    | <textarea></textarea>\n\t*/\t\n\tpublic static engines = {\n\t\tORACLE: {\n\t\t\tCHAR: 'text',\n\t\t\tNCHAR: 'text',\n\t\t\tVARCHAR2: 'textarea',\n\t\t\tVARCHAR: 'textarea',\n\t\t\tNVARCHAR2: 'textarea',\n\t\t\tINTEGER: 'number',\n\t\t\t/*CLOB : true,\n\t\t\tNCLOB : true,*/\n\t\t\tLONG: 'number',\n\t\t\tNUMBER: 'number',\n\t\t\tDATE: 'date',\n\t\t\tINTERVAL: 'text',\n\t\t\tTIMESTAMP: 'date'\n\t\t}\n\t};\n\n\tpublic static getDatabaseEngines() {\n\t\treturn Object.keys(this.engines).map(\n\t\t\tdata => { return data.toLowerCase(); }\n\t\t);\n\t}\n\n   public static get(type = \"ORACLE\") {\n\t\tlet engineExists = Object.keys(this.engines).find((item) => {\n\t\t\treturn item == type;\n\t\t});\n\t\t\n\t\tif(engineExists){\n\t\t\treturn this.engines[type];\n\t\t}\n\t\treturn {};\n\t}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HomeService {\n\n    constructor() {\n    }\n\n    get() {\n        return [\n            {\n              \"rows\": [\n                {\n                  \"grid\": \"12\",\n                  \"columns\": [\n                    {\n                      \"contents\": [\n                        {\n                          \"html\": {\n                            \"label\": \"Type your Text\",\n                            \"category\": \"headings\",\n                            \"tag\": \"h1\",\n                            \"text\": \"Salt.\",\n                            \"class\": \"text-center\"\n                          },\n                          \"table\": {}\n                        },\n                        {\n                          \"html\": {\n                            \"category\": \"headings\",\n                            \"tag\": \"h6\",\n                            \"text\": \"A tool for lazy Developers.\",\n                            \"class\": \"text-center\"\n                          },\n                          \"table\": {}\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  \"grid\": \"12\",\n                  \"columns\": [\n                    {\n                      \"contents\": [\n                        {\n                          \"html\": {\n                            \"tag\": \"html\",\n                            \"category\": \"html\",\n                            \"data\": \"<h1 class=\\\"p-3 mb-3 bg-danger text-white text-center\\\">A simple drag & drop Bootstrap Form Builder </h1>\"\n                          },\n                          \"table\": {}\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  \"grid\": \"3 9\",\n                  \"columns\": [\n                    {\n                      \"contents\": [\n                        {\n                          \"html\": {\n                            \"tag\": \"image\",\n                            \"category\": \"html\",\n                            \"src\": \"http://i.imgur.com/AVqsATi.gif\"\n                          },\n                          \"table\": {}\n                        }\n                      ]\n                    },\n                    {\n                      \"contents\": [\n                        {\n                          \"html\": {\n                            \"tag\": \"html\",\n                            \"category\": \"html\",\n                            \"data\": \"<p class=\\\"f3\\\">This project was made with Angular 6.1.2.</p>\\n<p>It's been in development since December 2017 and is <strong>currently being developed.</strong></p>\"\n                          },\n                          \"table\": {}\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  \"grid\": \"8 4\",\n                  \"columns\": [\n                    {\n                      \"contents\": [\n                        {\n                          \"html\": {\n                            \"label\": \"Type your Text\",\n                            \"category\": \"headings\",\n                            \"tag\": \"h1\",\n                            \"text\": \"Features\",\n                            \"class\": \"text-center\"\n                          },\n                          \"table\": {}\n                        }\n                      ]\n                    },\n                    {\n                      \"contents\": []\n                    }\n                  ]\n                },\n                {\n                  \"grid\": \"12\",\n                  \"columns\": [\n                    {\n                      \"contents\": [\n                        {\n                          \"html\": {\n                            \"tag\": \"html\",\n                            \"category\": \"html\",\n                            \"data\": \"<a href=\\\"http://wiki.languagetool.org/public-http-api\\\" target=\\\"_blank\\\">API RESTful - Language Tool (LanguageTool Style and Grammar Checker)</a> http://wiki.languagetool.org/public-http-api\"\n                          },\n                          \"table\": {}\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ],\n              \"name\": \"Salt - A tool for Lazy Developer\"\n            }\n          ];\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HtmlElementService {\n    category: string;\n\n    constructor() {\n        this.category = 'form';\n    }\n\n    getTags() {\n        const tags = this.get().reduce((previous, current) => {\n            if (current.html.category) {\n                if (current.html.category === this.category) {\n                    previous[current.html.tag] = null;\n                }\n            }\n            return previous;\n        }, {});\n        return Object.keys(tags);\n    }\n    get() {\n        return [{\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'select',\n                elements: [{\n                    value: 'Select 1',\n                    text: 'Select 1'\n                }, {\n                    value: 'Select 2',\n                    text: 'Select 2'\n                }, {\n                    value: 'Select 3',\n                    text: 'Select 3'\n                }]\n            },\n            table: {}\n        }, {\n            html: {\n                tag: 'html',\n                category: 'html',\n                data: '<h1>HTML</h1>'\n            },\n            table: {}\n        }, {\n            html: {\n                tag: 'image',\n                category: 'html',\n                src: 'http://i.imgur.com/AVqsATi.gif'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'text'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'radio',\n                elements: [{\n                    value: 'Radio 1',\n                    text: 'Radio 1'\n                }, {\n                    value: 'Radio 2',\n                    text: 'Radio 2'\n                }, {\n                    value: 'Radio 3',\n                    text: 'Radio 3'\n                }]\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'textarea'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'number'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Choose file',\n                category: 'form',\n                tag: 'file'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'date'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'checkbox',\n                elements: [{\n                    value: 'Checkbox 1',\n                    text: 'Checkbox 1'\n                }, {\n                    value: 'Checkbox 2',\n                    text: 'Checkbox 2'\n                }, {\n                    value: 'Checkbox 3',\n                    text: 'Checkbox 3'\n                }]\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'headings',\n                tag: 'h1',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h2',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h3',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h4',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h5',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h6',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'formatting',\n                tag: 'legend',\n                text: 'Legend text'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'table',\n                tag: 'table',\n                fields: [\n                    {\n                        \"Book Name\": \"Computer Architecture\",\n                        \"Category\": \"Computers\",\n                        \"Price\": \"125.60\",\n                        \"Book ID\": \"1\"\n                    },\n                    {\n                        \"Book ID\": \"2\",\n                        \"Book Name\": \"Asp.Net 4 Blue Book\",\n                        \"Category\": \"Programming\",\n                        \"Price\": \"56.00\"\n                    },\n                    {\n                        \"Book ID\": \"3\",\n                        \"Book Name\": \"Popular Science\",\n                        \"Category\": \"Science\",\n                        \"Price\": \"210.40\"\n                    }\n                ]\n            },\n            table: {}\n        }];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { Http } from '@angular/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LanguageToolService {\n    apiUrl: string = 'https://languagetool.org/api/v2/check';\n    language: string = 'pt-br';\n\n    constructor(\n        private http: Http\n    ) { }\n\n    getCorrectWord(text: string, language?: string): Observable<any> {\n        return this.http.get(this.apiUrl, {\n            params: {\n                language: language ? language : this.language,\n                text: text\n            }\n        }).pipe(\n            map((res) => {\n                return res.json();\n            })\n        );\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"input-group input-group\\\">\\n\\t<input type=\\\"text\\\" [(ngModel)]=\\\"text\\\" (ngModelChange)=\\\"textOnChange()\\\"class=\\\"form-control\\\">\\n\\t<div class=\\\"input-group-append\\\">\\n\\t\\t<button (click)=\\\"checkSpelling()\\\" class=\\\"btn btn-outline-info btn-sm\\\" type=\\\"button\\\">\\n\\t\\t\\t<i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t</button>\\n\\t</div>\\n</div>\\n<div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n\\t<i class=\\\"fa fa-cog fa-spin fa-2x\\\"></i> Loading...\\n</div>\\n<div ng-if=\\\"!isLoading\\\">\\n\\t<div id=\\\"spell-checker\\\" class=\\\"py-3\\\"></div>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"result?.matches.length > 0\\\">\\n\\t\\t<div *ngFor=\\\"let match of result?.matches; let mK = index;\\\" class=\\\"form-group col-md-6 col-xs-12\\\">\\n\\t\\t\\t<label>{{ match.message }}</label>\\n\\t\\t\\t<select multiple class=\\\"form-control\\\" disabled>\\n\\t\\t\\t\\t<option *ngFor=\\\"let r of match.replacements; let rK = index;\\\">{{ r.value }}</option>\\n\\t\\t\\t</select>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LanguageToolService } from '../shared/services/language-tool.service';\n\n@Component({\n  selector: 'app-spell-checker',\n  templateUrl: './spell-checker.component.html',\n  styleUrls: ['./spell-checker.component.css']\n})\nexport class SpellCheckerComponent implements OnInit {\n  @Input() text;\n  @Output() textChange = new EventEmitter();\n  isLoading: boolean = false;\n  result: {\n      matches: Array<any>\n  };\n\n  constructor(\n    private languageToolService: LanguageToolService\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  public textOnChange(): void {\n      this.textChange.emit(this.text);\n  }\n\n  public checkSpelling(): void {\n    this.isLoading = true;\n      if (this.hasText()) {\n          this.text = this.langTool();\n          this.languageToolService.getCorrectWord(this.text).subscribe(\n            (data) => {\n                if (data.matches) {\n                    this.result = data;\n                    this.isLoading = false;\n                }\n          });\n          console.log(this.result);\n      }\n  }\n\n  private langTool(): string {\n      if (this.hasText()) {\n          var arrOfWords = this.text.split(' ');\n          var newText = [];\n          for (var i = 0; i < arrOfWords.length; i++) {\n              var word = arrOfWords[i].trim()\n              word = word.charAt(0).toUpperCase() + word.slice(1);\n              newText.push(word);\n          }\n          return newText.join(' ');\n      }\n      return '';\n  }\n\n  public hasText(): boolean {\n      if (this.text.length > 0) {\n          return true;\n      }\n      return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}