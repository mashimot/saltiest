{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/config-choices/config-choice-form/config-choice-form.component.css","webpack:///./src/app/config-choices/config-choice-form/config-choice-form.component.html","webpack:///./src/app/config-choices/config-choice-form/config-choice-form.component.ts","webpack:///./src/app/config-choices/config-choices-routing.module.ts","webpack:///./src/app/config-choices/config-choices.component.css","webpack:///./src/app/config-choices/config-choices.component.html","webpack:///./src/app/config-choices/config-choices.component.ts","webpack:///./src/app/config-choices/config-choices.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/header-bar/header-bar.component.css","webpack:///./src/app/core/header-bar/header-bar.component.html","webpack:///./src/app/core/header-bar/header-bar.component.ts","webpack:///./src/app/core/model/column.model.ts","webpack:///./src/app/core/model/html.model.ts","webpack:///./src/app/core/model/index.ts","webpack:///./src/app/core/model/page.model.ts","webpack:///./src/app/core/model/project.model.ts","webpack:///./src/app/core/model/row.model.ts","webpack:///./src/app/core/model/table.model.ts","webpack:///./src/app/create-table-to-json/create-table-to-json.component.css","webpack:///./src/app/create-table-to-json/create-table-to-json.component.html","webpack:///./src/app/create-table-to-json/create-table-to-json.component.ts","webpack:///./src/app/form-builder/config/config-general/config-general.component.css","webpack:///./src/app/form-builder/config/config-general/config-general.component.html","webpack:///./src/app/form-builder/config/config-general/config-general.component.ts","webpack:///./src/app/form-builder/config/config-html-editor/config-html-editor.component.css","webpack:///./src/app/form-builder/config/config-html-editor/config-html-editor.component.html","webpack:///./src/app/form-builder/config/config-html-editor/config-html-editor.component.ts","webpack:///./src/app/form-builder/config/config-img/config-img.component.css","webpack:///./src/app/form-builder/config/config-img/config-img.component.html","webpack:///./src/app/form-builder/config/config-img/config-img.component.ts","webpack:///./src/app/form-builder/config/config-table-builder/config-table-builder.component.css","webpack:///./src/app/form-builder/config/config-table-builder/config-table-builder.component.html","webpack:///./src/app/form-builder/config/config-table-builder/config-table-builder.component.ts","webpack:///./src/app/form-builder/config/config-title/config-title.component.css","webpack:///./src/app/form-builder/config/config-title/config-title.component.html","webpack:///./src/app/form-builder/config/config-title/config-title.component.ts","webpack:///./src/app/form-builder/form-builder-routing.module.ts","webpack:///./src/app/form-builder/form-builder.component.css","webpack:///./src/app/form-builder/form-builder.component.html","webpack:///./src/app/form-builder/form-builder.component.ts","webpack:///./src/app/form-builder/form-builder.module.ts","webpack:///./src/app/form-builder/form-config/form-config.component.css","webpack:///./src/app/form-builder/form-config/form-config.component.html","webpack:///./src/app/form-builder/form-config/form-config.component.ts","webpack:///./src/app/form-builder/form-config/form-config.module.ts","webpack:///./src/app/form-builder/form-menu/form-menu.component.css","webpack:///./src/app/form-builder/form-menu/form-menu.component.html","webpack:///./src/app/form-builder/form-menu/form-menu.component.ts","webpack:///./src/app/form-info/form-info.component.css","webpack:///./src/app/form-info/form-info.component.html","webpack:///./src/app/form-info/form-info.component.ts","webpack:///./src/app/form-info/form-info.module.ts","webpack:///./src/app/form-pages/form-columns/form-columns.component.css","webpack:///./src/app/form-pages/form-columns/form-columns.component.html","webpack:///./src/app/form-pages/form-columns/form-columns.component.ts","webpack:///./src/app/form-pages/form-contents/form-contents.component.css","webpack:///./src/app/form-pages/form-contents/form-contents.component.html","webpack:///./src/app/form-pages/form-contents/form-contents.component.ts","webpack:///./src/app/form-pages/form-pages.component.css","webpack:///./src/app/form-pages/form-pages.component.html","webpack:///./src/app/form-pages/form-pages.component.ts","webpack:///./src/app/form-pages/form-pages.module.ts","webpack:///./src/app/form-pages/form-rows/form-rows.component.css","webpack:///./src/app/form-pages/form-rows/form-rows.component.html","webpack:///./src/app/form-pages/form-rows/form-rows.component.ts","webpack:///./src/app/form-pages/render-content/render-content.component.css","webpack:///./src/app/form-pages/render-content/render-content.component.html","webpack:///./src/app/form-pages/render-content/render-content.component.ts","webpack:///./src/app/form-pages/render-content/render-content.module.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/projects/project-form/project-form.component.css","webpack:///./src/app/projects/project-form/project-form.component.html","webpack:///./src/app/projects/project-form/project-form.component.ts","webpack:///./src/app/projects/projects-routing.module.ts","webpack:///./src/app/projects/projects.component.css","webpack:///./src/app/projects/projects.component.html","webpack:///./src/app/projects/projects.component.ts","webpack:///./src/app/projects/projects.module.ts","webpack:///./src/app/services/bootstrap-grid-system.service.ts","webpack:///./src/app/services/create-table-to-json.service.ts","webpack:///./src/app/services/form-config.service.ts","webpack:///./src/app/services/form-content-config.service.ts","webpack:///./src/app/services/render-html.service.ts","webpack:///./src/app/shared/directives/sum-be-equals-to.directive.ts","webpack:///./src/app/shared/enum.ts","webpack:///./src/app/shared/modal.component.ts","webpack:///./src/app/shared/pipes/group-by.pipe.ts","webpack:///./src/app/shared/pipes/snake-case-to-camel-case.pipe.ts","webpack:///./src/app/shared/services/column.service.ts","webpack:///./src/app/shared/services/content-choice-item.service.ts","webpack:///./src/app/shared/services/content.service.ts","webpack:///./src/app/shared/services/database-engine.service.ts","webpack:///./src/app/shared/services/home.service.ts","webpack:///./src/app/shared/services/html-element.service.ts","webpack:///./src/app/shared/services/language-tool.service.ts","webpack:///./src/app/shared/services/page.service.ts","webpack:///./src/app/shared/services/project.service.ts","webpack:///./src/app/shared/services/row.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/spell-checker/spell-checker.component.css","webpack:///./src/app/spell-checker/spell-checker.component.html","webpack:///./src/app/spell-checker/spell-checker.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { SpellCheckerComponent } from './spell-checker/spell-checker.component';\n\nconst routes: Routes = [\n    { path: \"\", redirectTo: \"home\", pathMatch: \"full\" },\n    { path: 'spell-checker', component: SpellCheckerComponent },\n    { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-header-bar></app-header-bar>\\n<ngx-ui-loader></ngx-ui-loader>\\n<div class=\\\"splash\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-lg-12\\\">\\n\\t\\t\\t\\t<img src=\\\"https://i.imgur.com/WlEBazl.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<div id=\\\"social\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"center-block text-center\\\">\\n\\t\\t\\t\\t\\t\\t<iframe id=\\\"gh-star\\\" src=\\\"https://ghbtns.com/github-btn.html?user=mashimot&repo=saltiest&type=watch&count=true\\\" width=\\\"110\\\" height=\\\"20\\\" style=\\\"border: none;\\\"></iframe>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<div class=\\\"container-fluid mt-3\\\">\\t\\t\\n\\t<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'salt';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { DragulaModule, DragulaService } from 'ng2-dragula';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { FormBuilderModule } from './form-builder/form-builder.module';\nimport { ConfigChoicesModule } from './config-choices/config-choices.module';\nimport { HomeModule } from './home/home.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { ProjectsModule } from './projects/projects.module';\nimport { CoreModule } from './core/core.module';\nimport { NgxUiLoaderModule, NgxUiLoaderHttpModule, NgxUiLoaderConfig, POSITION, SPINNER, PB_DIRECTION } from  'ngx-ui-loader';\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\n    bgsColor: 'red',\n    bgsPosition: POSITION.bottomCenter,\n    bgsSize: 40,\n    bgsType: SPINNER.rectangleBounce, // background spinner type\n    fgsType: SPINNER.rectangleBounce, // foreground spinner type\n    pbDirection: PB_DIRECTION.leftToRight, // progress bar direction\n    pbThickness: 3, // progress bar thickness\n};\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent\n    ],\n    imports: [\n        BrowserModule,\n        RouterModule,\n        FormsModule,\n        ConfigChoicesModule,\n        FormBuilderModule,\n        ProjectsModule,\n        CoreModule,\n        HomeModule,\n        DragulaModule,\n        AppRoutingModule,\n        HttpModule,\n        HttpClientModule,\n        NgbModule,\n        HighlightModule.forRoot(),\n        NgxUiLoaderModule.forRoot(ngxUiLoaderConfig),\n        NgxUiLoaderHttpModule\n    ],\n    providers: [DragulaService],\n    bootstrap: [AppComponent]\n\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<div [formGroup]=\\\"choiceForm\\\"\\n\\t\\t[ngClass]=\\\"{ 'is-invalid': choiceForm.invalid }\\\">\\n\\t\\t\\t<div dragula=\\\"sortableChoices\\\"\\n\\t\\t\\t\\t[(dragulaModel)]=\\\"choices.controls\\\"\\n\\t\\t\\t\\tformArrayName=\\\"choices\\\">\\n\\t\\t\\t\\t<div *ngFor=\\\"let choice of choices.controls; let i = index\\\" \\n\\t\\t\\t\\t\\t[formGroupName]=\\\"i\\\" \\n\\t\\t\\t\\t\\tclass=\\\"sortable-item-contents\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control form-control-sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': choice.get('text').invalid }\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"choice.get('text').invalid || choice.get('text').touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"choice.get('text').errors?.required\\\">You did not enter a field</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"choice.get('text').errors?.minlength\\\">Your field is too short</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control form-control-sm\\\"\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': choice.get('value').invalid }\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"choice.get('value').invalid || choice.get('value').touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"choice.get('value').errors?.required\\\">You did not enter a field</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"choice.get('value').errors?.minlength\\\">Your field is too short</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm btn-block\\\" (click)=\\\"removeContent(i)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"far fa-trash-alt\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"element-handle\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tmove\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-5\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" (click)=\\\"cloneThis('value')\\\" class=\\\"btn btn-secondary btn-sm btn-block\\\">\\n\\t\\t\\t\\t\\t\\tClone Text to Values\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-5\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" (click)=\\\"cloneThis('text')\\\" class=\\\"btn btn-secondary btn-sm btn-block\\\">\\n\\t\\t\\t\\t\\t\\tClone Values To Text\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"fast-entry\\\">Fast Entry</label>\\n\\t\\t\\t<textarea id=\\\"fast-entry\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"text\\\"\\n\\t\\t\\t\\t(ngModelChange)=\\\"stringToElement()\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\tstyle=\\\"resize: none; height: 210px;\\\"></textarea>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"mt-2\\\" *ngIf=\\\"!parentFormGroup\\\">\\n\\t\\t\\t<div class=\\\"btn-group float-right\\\">\\n\\t\\t\\t\\t<button class=\\\"btn btn-outline-primary\\\" (click)=\\\"back()\\\">Save</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\t\\t\\t\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { DBOperation } from 'src/app/shared/enum';\nimport { ContentService } from 'src/app/shared/services/content.service';\nimport { ContentChoiceItemService } from 'src/app/shared/services/content-choice-item.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { DragulaService } from 'ng2-dragula';\nimport { Location } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n\tselector: 'app-config-choice-form',\n\ttemplateUrl: './config-choice-form.component.html',\n\tstyleUrls: ['./config-choice-form.component.css']\n})\nexport class ConfigChoiceFormComponent implements OnInit {\n\n\tchoiceForm: FormGroup;\n\tcontentChoiceItemIdToUpdate = null;\n\tcontentChoiceId: number = -1;\n\tdbops: DBOperation;\n    text: string = \"\";\n    subs = new Subscription();\n    @Input() content;\n    @Input() parentFormGroup;\n    @Output() emitData = new EventEmitter();\n\tconstructor(\n\t\tprivate fb: FormBuilder,\n\t\tprivate contentService: ContentService,\n\t\tprivate contentChoiceItemService: ContentChoiceItemService,\n        private route: ActivatedRoute,\n        private dragulaService: DragulaService,\n        private location: Location,\n        private modal: NgbActiveModal\n\t) { \n        dragulaService.createGroup('sortableElements', {\n            moves: (el, container, handle) => {\n                return handle.classList.contains('element-handle');\n            }\n        });  \n    }\n\n  \tngOnInit() {\n        const choices = this.content.html.choices;\n        this.dbops = DBOperation.create;\n        this.choiceForm =  this.fb.group({\n            'choices': this.fb.array([])\n        });\n\n        if(typeof this.parentFormGroup != 'undefined'){\n            this.choiceForm = this.parentFormGroup.get('html') as FormGroup;\n        }\n        \n        for(let i = 0; i < choices.length; i++){\n            let item = choices[i];\n            let items = this.choiceForm.get('choices') as FormArray;\n            items.push(this.getChoice(item.text, item.value));\n        }\n\n        this.subs.add(this.dragulaService.dropModel('sortableChoices').subscribe(\n            ({ sourceModel, targetModel, item }) => {\n                this.choices.controls = sourceModel;\n                this.text = this.elementToString();\n            }\n        ));\n        this.text = this.elementToString();\n\t\t/*this.choiceForm = this.fb.group({\n\t\t\t'id': [''],\n\t\t\t'content_choice_id': ['', [\n\t\t\t]],\n\t\t\t'text': ['', [\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(1), \n\t\t\t\tValidators.maxLength(2000)\n\t\t\t]],\n\t\t\t'value': ['', [\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(1), \n\t\t\t\tValidators.maxLength(2000)\n\t\t\t]]\n        });\n        this.route.params.subscribe(result => {\n\t\t\tthis.contentChoiceId = result.id;\n\t\t\tthis.choiceForm.patchValue({\n\t\t\t\t'content_choice_id': this.contentChoiceId\n\t\t\t});\n\t\t\tthis.loadChoices();\n\t\t})*/\n  \t}\n    \n    ngOnChanges() {\n    }\n\n    ngOnDestroy() {\n        /*this.dragulaService.destroy('pages');\n        this.dragulaService.destroy('contents');\n        this.dragulaService.destroy('columns');\n        this.dragulaService.destroy('rowSortable');*/\n        this.dragulaService.destroy('sortableElements');\n    }   \n\n    /*public loadChoices(){\n\t\tif(this.contentChoiceId != -1){\n\t\t\tlet id = this.contentChoiceId;\n\t\t\tthis.contentService.getContentChoicesById(id).subscribe(result => {\n\t\t\t\tif(result.success){\n\t\t\t\t\tthis.choices = result.data;\n\t\t\t\t\tconsole.log(this.choices);\n\t\t\t\t}            \n\t\t\t});\n        }\n    }\n\n    public onSubmit(){\n        switch(this.dbops){\n            case DBOperation.create:\n                this.contentChoiceItemService.storeContentChoiceItem(this.choiceForm.value)\n                .subscribe(result => {\n                    console.log(result);\n                    if(result.success){\n                        this.reset();\n                        this.contentChoiceId = result.data.contentChoiceId;\n                        this.choiceForm.patchValue({\n                            'content_choice_id': result.data.contentChoiceId\n                        });\n                        this.loadChoices();\n                    }\n                });\n            break;\n            case DBOperation.update:\n                const id = this.contentChoiceItemIdToUpdate;\n                this.contentChoiceItemService.updateContentChoiceItem(id, this.choiceForm.value)\n                .subscribe(result => {\n                    console.log(result.data);\n                    if(result.success){\n                        this.reset();\n                        this.loadChoices();\n                    }\n                });\n            break;\n        }\n    }\n\n    public create(){\n        this.dbops = DBOperation.create;\n        this.reset();\n    }\n\n    public savePosition(){\n        let id = this.contentChoiceId;\n        const orderedIds = this.choices.map(item => {\n            return item.id;\n        });\n        this.contentService.updateContentChoicesPosition(id, orderedIds)\n        .subscribe(result => {\n            if(result.success){\n                this.loadChoices();\n            }\n        });\n    }\n\n    public editContentChoice(id: number) {\n        this.contentChoiceItemService.getContentChoiceItemById(id)\n        .subscribe(result => {\n            if(result.success){\n                const content = result.data;\n                this.dbops = DBOperation.update;\n                this.contentChoiceItemIdToUpdate = content.id;   \n                this.choiceForm.setValue({\n                    'id': content.id,\n                    'content_choice_id': content.content_choice_id,\n                    'text': content.text,\n                    'value': content.value,\n                });\n            }\n        });\n    }\n\n    public deleteContentChoiceItem(id: number) {\n        this.contentChoiceItemService.deleteContentChoiceItem(id)\n        .subscribe(result => {\n            if(result.success){\n                this.loadChoices();\n                this.reset();\n            }\n        });\n    }\n\n    private reset() {\n        this.contentChoiceItemIdToUpdate = null;\n        const resetExcept: string[] = ['content_choice_id', 'choices', 'tag', 'category', 'label'];\n\n        Object.keys(this.choiceForm.controls).forEach(key => {\n            if (resetExcept.findIndex(q => q === key) === -1) {\n                this.choiceForm.get(key).reset();\n            }\n        });\n    }*/\n\n    public back(){\n        //this.content.html.choices = this.choiceForm.value;\n        //this.modal.close();        \n        this.emitData.emit(this.choiceForm.value);\n    }\n\n    public stringToElement(): void{\n        if (this.text.length > 0) {\n              let string = this.text.split('\\n');\n              let cloneChoices = JSON.parse(JSON.stringify(this.choices.value));\n  \n              for (let i = 0; i < string.length; i++) {\n                  let str = string[i];\n                  let firstMatch = str;\n                  let secondMatch = '';\n                  if(str.indexOf('|') !== -1){\n                      let match = str.split('|');\n                      firstMatch = match[0];\n                      secondMatch = str.substring(firstMatch.length + 1); //return '' if '|' was not found\n                  }\n                  let text  = (typeof firstMatch  !== 'undefined')? firstMatch: '';\n                  let value = (typeof secondMatch !== 'undefined') ? secondMatch : '';\n  \n                  this.choices.removeAt(i);\n                  if (typeof this.choices.controls[i] === 'undefined') {\n                      this.choices.push(this.getChoice(text, value));\n                  } else {\n                      this.choices.controls[i].patchValue({\n                          text: text,\n                          value: value\n                      });\n                  }\n              }\n          } else {\n              while (this.choices.length !== 0) {\n                  this.choices.removeAt(0);\n              }\n          }\n      }\n  \n      public removeContent($index: number) {\n          this.choices.removeAt($index);\n          this.text = this.elementToString();\n      }\n  \n      public cloneThis(name){\n          let choicesLength = this.choices.value.length;\n          if(choicesLength > 0){\n              let cloneThisObjectName = (name === 'value')? 'text' : 'value';\n              for(let i = 0; i < choicesLength; i++){\n                  this.choices.value[i][name] = this.choices.value[i][cloneThisObjectName];\n              }\n              this.text = this.elementToString();\n              this.stringToElement();\n          }\n      }\n  \n      public elementToString(): string {\n          let string = '';\n          //fire the `valueChanges` manually\n          this.choices.updateValueAndValidity({ onlySelf: false, emitEvent: true });\n          let e = this.choices.value;\n  \n          if(typeof e !== 'undefined'){\n              if (e.length > 0){\n                  for (let i = 0; i < e.length; i++){\n                      let str = e[i];\n                      let pipe = (str.value === '')? '' : '|';\n                      let element = {\n                          text: typeof str.text !== 'undefined'? str.text : '',\n                          value: typeof str.value !== 'undefined'? str.value : '',\n                      };\n  \n                      string += (element.text + pipe + element.value) + (i === e.length - 1 ? '' : \"\\n\");\n                  }\n              } \n          }\n          return string;\n      }\n\n    private getChoice(text: string = '', value: string = '') : FormGroup {\n        return this.fb.group({\n            text: [text, [\n                Validators.required,\n                Validators.minLength(1), \n                Validators.maxLength(2000)\n            ]],\n            value: [value, [\n                Validators.required,\n                Validators.minLength(1), \n                Validators.maxLength(2000)\n            ]]\n        });\n    }\n    \n    get f(){\n        return this.choiceForm;\n    }\n\n    get choices(){\n        return this.f.get('choices') as FormArray;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigChoicesComponent } from './config-choices.component';\nimport { ConfigChoiceFormComponent } from './config-choice-form/config-choice-form.component';\n\nconst routes: Routes = [\n { path: 'config-choices', component: ConfigChoicesComponent },\n { path: 'config-choices/create', component: ConfigChoiceFormComponent } ,\n { path: 'config-choices/:id/edit', component: ConfigChoiceFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigChoicesRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div >\\n\\t<div class=\\\"border-bottom border-dark p-1 text-uppercase\\\" \\n\\t[ngStyle]=\\\"{ cursor: 'pointer' }\\\">\\n\\t\\t<span class=\\\"text-right\\\">\\n\\t\\t\\t\\n\\t\\t\\tOption Group\\n\\t\\t\\t<!--a \\n\\t\\t\\t\\t[routerLink]=\\\"['/config-choices', 'create']\\\"\\n\\t\\t\\t\\n\\t\\t\\t\\t<small><i class=\\\"far fa-plus-square\\\"></i> create</small>\\n\\t\\t\\t</a-->\\n\\t\\t\\t<button \\n\\t\\t\\t(click)=\\\"edit()\\\"\\n\\t\\t\\tclass=\\\"btn btn-link\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<small><i class=\\\"fas fa-plus-square\\\"></i> create </small>\\n\\t\\t\\t</button>\\n\\t\\t</span>\\n\\t</div>\\n\\t<div class=\\\"border border-dark p-1 mt-1 dropdown\\\">\\n\\t\\t<h6 class=\\\"text-center text-bold\\\">Select an Option Type</h6>\\n\\t\\t<a href=\\\"javascript:void(0)\\\" id=\\\"dropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"btn btn-sm btn-block\\\">\\n\\t\\t\\t<h2 class=\\\"text-uppercase\\\"><i class=\\\"{{ toolType.icon }}\\\"></i> {{ toolType.type }}</h2>\\n\\t\\t</a>\\n\\t\\t<ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\n\\t\\t\\t<li *ngFor=\\\"let toolType of toolTypes\\\" \\n\\t\\t\\tclass=\\\"dropdown-item p-3\\\" \\n\\t\\t\\t(click)=\\\"setToolType(toolType)\\\"\\n\\t\\t\\t[ngStyle]=\\\"{'cursor': 'pointer'}\\\">\\n\\t\\t\\t\\t<h2 class=\\\"text-uppercase\\\"><i class=\\\"{{ toolType.icon }}\\\"></i> {{ toolType.type }}</h2>\\n\\t\\t\\t</li>\\n\\t\\t</ul>    \\n\\t</div>\\t\\n\\t<div \\n\\t\\tdragula=\\\"contents\\\"\\n\\t\\t[(dragulaModel)]=\\\"groups\\\"\\n\\t\\tclass=\\\"menu-content-sortable no-gutters collapse m-1 show\\\"\\n\\t\\taria-expanded=\\\"true\\\"\\n\\t>\\n\\t\\t<div *ngFor=\\\"let content of groups; let contentIndex = index;\\\"\\n\\t\\t\\tclass=\\\"content-handle menu-content-sortable option-type-sortable\\\"\\n\\t\\t\\t[attr.data-content]=\\\"content | json\\\"\\n\\t\\t\\t[attr.data-option-type]=\\\"toolType.value\\\"\\n\\t\\t>\\n\\t\\t\\t<!--a [routerLink]=\\\"['/config-choices', content.html.content_choice_id ,'edit']\\\"-->\\n\\t\\t\\t<button \\n\\t\\t\\tclass=\\\"btn btn-link\\\"\\n\\t\\t\\t(click)=\\\"edit(contentIndex)\\\">\\n\\t\\t\\t\\t<small><i class=\\\"fas fa-pen-square\\\"></i> edit </small>\\n\\t\\t\\t</button>\\n\\t\\t\\t<ul class=\\\"text-dark text-capitalize content-handle\\\" [ngStyle]=\\\"{ 'cursor': 'move' }\\\">\\n\\t\\t\\t\\t<li *ngFor=\\\"let choice of content.html.choices\\\" class=\\\" content-handle\\\">\\n\\t\\t\\t\\t\\t<small class=\\\"content-handle\\\">{{ choice.text }}</small>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t\\t<div class=\\\" border border-bottom\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { HtmlElementService } from '../shared/services/html-element.service';\nimport { DragulaService } from 'ng2-dragula';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfigChoiceFormComponent } from './config-choice-form/config-choice-form.component';\nimport { IfStmt } from '@angular/compiler';\n\n@Component({\n    selector: 'app-config-choices',\n    templateUrl: './config-choices.component.html',\n    styleUrls: ['./config-choices.component.css']\n})\nexport class ConfigChoicesComponent implements OnInit {\n    groups: Array<any>;\n    toolType: {\n        type: string,\n        icon: string,\n        value: number\n    };\n    toolTypes: Array<{\n        type: string,\n        icon: string,\n        value: number\n    }> = [{\n        type: 'select',\n        value: 3,\n        icon: 'fas fa-box-open'\n    },{\n        type: 'radio',\n        icon: 'far fa-check-circle',\n        value: 1\n    },{\n        type: 'checkbox',\n        icon: 'far fa-check-square',\n        value: 2\n    }];\n    options: any = {\n        size: 'lg',\n        backdrop : 'static',\n        keyboard : false,\n        centered: true\n    };\n\n    constructor(\n        private htmlElementService: HtmlElementService,\n        private dragulaService: DragulaService,\n        private router: Router,\n        private modalService: NgbModal,\n        private cd: ChangeDetectorRef\n    ) {\n        this.toolType = this.toolTypes[1];\n        this.groups = this.htmlElementService.getStaticOptionChoices();\n        /*this.htmlElementService.getTools().subscribe(result => {\n            if(result.success){\n                this.groups = result.data.groups;\n                console.log(this.groups);\n            }\n        });*/\n    }\n\n    ngOnInit() {\n    }\n\n    edit(index = null){\n        const data = {\n            content: this.groups[index],\n            index: index\n        };\n        console.log(data.content);\n        const m = this.modalService.open(ConfigChoiceFormComponent, this.options);\n        //m.componentInstance.data = data;\n        console.log(this.groups[0]);\n        const myAss = {\n            html: {\n                category: \"form\",\n                choices: [],\n                group: \"\",\n                label: \"Type your Text\",\n                tag: \"radio\"\n            }\n        };\n        m.componentInstance.content = myAss;\n        if(index != null){\n            m.componentInstance.content = this.groups[index];\n            m.componentInstance.index = data.index;\n        }\n        \n        console.log(this.groups.length);\n        m.componentInstance.emitData.subscribe($e => {\n            if($e.choices.length > 0){\n                const text = $e.choices.map(item => {\n                    return item.text;\n                }).join(\"|\");\n                if(index != null){\n                    this.groups[index].html.choices = $e.choices;\n                    this.groups[index].html.group = text;\n                } else {\n                    myAss.html.group = text;\n                    myAss.html.choices = $e.choices;\n                    this.groups.push(myAss);\n                }\n            }\n            m.dismiss();\n        });\n    }\n\n    ngOnDestroy() {\n        this.dragulaService.destroy('pages');\n        this.dragulaService.destroy('contents');\n        this.dragulaService.destroy('columns');\n        this.dragulaService.destroy('rowSortable');\n        this.dragulaService.destroy('sortableElements');\n    }\n\n    setToolType(toolType){\n        this.toolType = {\n            value: toolType.value,\n            icon: toolType.icon,\n            type: toolType.type\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigChoicesRoutingModule } from './config-choices-routing.module';\nimport { ConfigChoicesComponent } from './config-choices.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DragulaModule } from 'ng2-dragula';\nimport { ConfigChoiceFormComponent } from './config-choice-form/config-choice-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigChoicesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule, \n    DragulaModule,\n    SharedModule\n  ],\n  exports: [ConfigChoicesComponent, ConfigChoiceFormComponent],\n  declarations: [ConfigChoicesComponent, ConfigChoiceFormComponent]\n})\nexport class ConfigChoicesModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderBarComponent } from './header-bar/header-bar.component';\nimport { RouterModule } from '@angular/router';\n\nconst components = [\n  HeaderBarComponent\n];\n\n@NgModule({\n  declarations: [\n    components\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    components\n  ]\n})\nexport class CoreModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"active\\\">Home</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/form-builder', 2, 'edit']\\\">Salt</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/config-choices']\\\">Option Choices</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/spell-checker']\\\">Spell Checker</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"http://builtwithbootstrap.com/\\\" target=\\\"_blank\\\">Built With Bootstrap</a>\\n                </li>\\n                <li>\\n                    <a class=\\\"nav-link\\\" href=\\\"https://blog.angular.io/\\\" target=\\\"_blank\\\">Built With Angular 6</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-bar',\n  templateUrl: './header-bar.component.html',\n  styleUrls: ['./header-bar.component.css']\n})\nexport class HeaderBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Content} from \"./content.model\";\n\nexport class Column{\n    id?: number;\n    position?: number;\n    contents?: Array<Content>\n}","export interface IHtml {\n    category?: string;\n    content_choice_id?: number;\n    tag?: string;\n    grid?: string;\n    label?: string;\n    text?: string;\n    class?: string;\n    fields?: Array<any>;\n    src?: string;\n    data?: string;\n    choices?: Array<{ text: string, value: string }>;\n}\n\nexport class Html {\n    category: string;\n    content_choice_id: number;\n    tag: string;\n    grid: string;\n    label: string;\n    text: string;\n    class: string;\n    fields: Array<any> = [];\n    src: string;\n    data: string;\n    choices: Array<{ text: string, value: string }> = [];\n\n    constructor(html: IHtml = {}){\n        for (let key in html)\n        {\n            if (html.hasOwnProperty(key))\n            {\n                let value = html[key];\n                if (typeof value !== \"undefined\")\n                    this[key] = value;\n            }\n        }\n    }\n}","export * from './page.model';\nexport * from './row.model';\nexport * from './column.model';\nexport * from './content.model';\nexport * from './html.model';\nexport * from './table.model';\nexport * from './project.model';\n","import { Row } from \"./row.model\";\n\nexport class Page {\n    id?: number;\n    position?: number;\n    name?: string;\n    rows?: Array<Row>;\n}","export class Project {\n    id: number;\n    name: string;\n}\n","import {Column} from \"./column.model\";\n\nexport class Row{\n    id?: number;\n    grid?: string;\n    columns?: Array<Column>\n}","export interface ITable {\n    columnName?: string;\n    isPrimaryKey?: boolean;\n    type?: string;\n    nullable?: boolean;\n    size?: string; \n}\nexport class Table {\n    columnName: string = '';\n    isPrimaryKey: boolean = false;\n    type: string = '';\n    nullable: boolean = false;\n    size?: string = ''; \n\n    constructor(table: ITable = {}){\n        for (let key in table)\n        {\n            if (table.hasOwnProperty(key))\n            {\n                let value = table[key];\n                if (typeof value !== \"undefined\")\n                    this[key] = value;\n            }\n        }\n    }\n}","module.exports = \"\"","module.exports = \"\\n<form class=\\\"card\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"dropdown\\\">\\n                    <h6 class=\\\"text-center text-bold\\\">Select a Database Engine</h6>\\n                    <a href=\\\"javascript:void(0)\\\" id=\\\"dropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                        <img [src]=\\\"options.logo\\\" alt=\\\"{{ options.database }}\\\" class=\\\"img-fluid mx-auto d-block\\\">\\n                    </a>\\n                    <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\n                        <li *ngFor=\\\"let db of database\\\" (click)=\\\"options.database = db.engine; options.logo = db.logo;\\\" class=\\\"dropdown-item p-3\\\" [ngStyle]=\\\"{'cursor': 'pointer'}\\\">\\n                            <img [src]=\\\"db.logo\\\" alt=\\\"{{ db.engine }}\\\" class=\\\"img-fluid\\\"> \\n                        </li>\\n                    </ul>    \\n                </div>\\n            </div>\\n        </div>\\n        <textarea [(ngModel)]=\\\"string\\\"\\n            name=\\\"string\\\"\\n            [ngClass]=\\\"{ 'is-invalid' : errors.length > 0 }\\\"\\n            class=\\\"form-control form-control-sm h-20 mt-4\\\"\\n            rows=\\\"10\\\"\\n        ></textarea>\\n        <div *ngIf=\\\"errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngFor=\\\"let e of errors\\\">\\n                {{ e }}\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"form_ct_grid\\\">Bootstrap Grid</label>\\n            <input type=\\\"text\\\"\\n                id=\\\"form_ct_grid\\\"\\n                [(ngModel)]=\\\"gridModel\\\"\\n                name=\\\"grid\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.controls.grid?.invalid }\\\"\\n                class=\\\"form-control form-control-sm\\\"\\n                [ngStyle]=\\\"{ cursor: 'pointer' }\\\"\\n                sumBeEqualsTo=\\\"12\\\"\\n                minlength=\\\"2\\\"\\n                pattern=\\\"[0-9 \\\\n\\\\t]+\\\"\\n                required>\\n            <div *ngIf=\\\"f.controls.grid?.invalid || f.controls.grid?.touched\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.controls.grid?.errors?.required \\\">* Enter with your grid.</div>\\n                <div *ngIf=\\\"f.controls.grid?.errors?.pattern\\\">* Allows only numbers and space.</div>\\n                <div *ngIf=\\\"f.controls.grid?.errors?.minlength\\\">* Min. Length is {{ f.controls.grid?.errors.minlength.requiredLength }}.</div>\\n                <div *ngIf=\\\"f.controls.grid?.errors?.isSumInvalid\\\">* The sum must be equals to {{ f.controls.grid.errors?.sumBeEqualsTo }}.</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-dark btn-block btn-sm\\\" \\n        (click)=\\\"createTable()\\\" \\n        [disabled]=\\\"f.controls.grid?.invalid\\\">Generate</button>\\n    </div>\\n</form>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CreateTableToJsonService } from '../services/create-table-to-json.service';\nimport { BootstrapGridSystemService } from '../services/bootstrap-grid-system.service'\nimport { DatabaseEngine } from '../shared/services/database-engine.service';\n\n@Component({\n\tselector: 'app-create-table-to-json',\n\ttemplateUrl: './create-table-to-json.component.html',\n\tstyleUrls: ['./create-table-to-json.component.css']\n})\nexport class CreateTableToJsonComponent implements OnInit {\n\t@Input() tableName;\n\t@Output() pageChange = new EventEmitter();\n\t@Output() tableNameChange = new EventEmitter();\n\t\n\tgridModel: string;\n\tdatabase: Array<{\n\t\tengine: string,\n\t\tlogo: string\n\t}>;\n\terrors: Array<string>;\n\tprimaryKeys: any[];\n\toptions = {\n\t\tdatabase: <string> 'oracle',\n\t\tlogo: <string> ''\n\t};\n\tstring: string;\n\ttabNumber: number;\n\n\tconstructor() {\n\t\tthis.tabNumber = 1;\n\t\tthis.gridModel = '4 4 4';\n\t\tthis.errors = [];\n\t\tthis.database = [];\n\t}\n\n\tngOnInit() {\n\t\tthis.database = DatabaseEngine.getDatabaseEngines();\n\t\tthis.setDatabaseEngineLogo(this.options.database);\n\t\tthis.string = [\n\t\t\t'create table if not exists random_table_1 (',\n\t\t\t'supplier_id number(10) not null primary key,',\n\t\t\t'supplier_name varchar2(50) not null,',\n\t\t\t'address varchar2(50),',\n\t\t\t'city varchar2(50),',\n\t\t\t'state varchar2(25),',\n\t\t\t'dat_now date,',\n\t\t\t'zip_code number(10),price number(10,2)',\n\t\t\t');'\n\t\t].join(\"\\n\");\n\t}\n\n\tpublic onSubmit() {\n\n\t}\n\n\tpublic setDatabaseEngineLogo(value){\n\t\tfor(let i = 0; i < this.database.length; i++){\n\t\t\tif(this.database[i].engine == value){\n\t\t\t\tthis.options.database = value;\n\t\t\t\tthis.options.logo = this.database[i].logo;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic createTable() {\n\t\tlet ct = new CreateTableToJsonService(this.options.database.toUpperCase());\n\t\tct.setString(this.string);\n\t\tct.convert();\n\t\tthis.errors = ct.getError();\n\t\tconsole.log(ct.hasError());\n\t\tif (!ct.hasError()) {\n\t\t\tlet data = ct.getData();\n            let bootstrapGridSystem = new BootstrapGridSystemService(data, `${this.gridModel}\\n`);\n\t\t\tbootstrapGridSystem.convert();\n\t\t\tlet pages = bootstrapGridSystem.getPage();\n\t\t\tthis.tableNameChange.emit(ct.getTableName());\n\t\t\tthis.pageChange.emit(pages);\n\t\t}\n\t}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<div class=\\\"form-group\\\" [formGroup]=\\\"parentFormGroup.controls.table\\\">\\n\\t\\t\\t<label>\\n\\t\\t\\t\\t<div class=\\\"checkbox-inline\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"nullable\\\"\\n\\t\\t\\t\\t\\t\\tstyle=\\\"display: none;\\\" checked>\\n\\t\\t\\t\\t\\tRequired?\\n\\t\\t\\t\\t\\t<div [ngSwitch]=\\\"nullable.value\\\">\\n\\t\\t\\t\\t\\t\\t<span *ngSwitchCase=\\\"true\\\"><i class=\\\"far fa-check-square\\\"></i> Yes</span>\\n\\t\\t\\t\\t\\t\\t<span *ngSwitchCase=\\\"false\\\"><i class=\\\"far fa-square\\\"></i> No</span>\\n\\t\\t\\t\\t\\t\\t<span *ngSwitchDefault><i class=\\\"far fa-square\\\"></i> No</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</label>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\" [formGroup]=\\\"parentFormGroup.controls.html\\\">\\n\\t\\t\\t<label>Description:</label>\\n\\t\\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t\\tformControlName=\\\"label\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': label.invalid }\\\"\\n\\t\\t\\t/>\\n\\t\\t\\t<div *ngIf=\\\"label.invalid || label.touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"label.errors?.required\\\">You did not enter a field</div>\\n\\t\\t\\t\\t<div *ngIf=\\\"label.errors?.minlength\\\">Your field is too short</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\n\n@Component({\n  selector: 'app-config-general',\n  templateUrl: './config-general.component.html',\n  styleUrls: ['./config-general.component.css']\n})\nexport class ConfigGeneralComponent implements OnInit {\n  \t@Input() parentFormGroup;\n\t@Input() content;\n\n\tconstructor(private fb: FormBuilder) { }\n\n\tngOnInit() {\n\t\tthis.html.get('label').setValidators([\n\t\t\tValidators.required\n\t\t]);\n\t\tthis.html.patchValue({\n\t\t\t'label': this.content.html.label,\n\t\t});\n\t\tthis.table.get('nullable').setValidators([\n\t\t\tValidators.required\n\t\t]);\n\t\tthis.table.patchValue({\n\t\t\t'nullable': this.content.table.nullable,\n\t\t});\n\t}\n\n\tget html() {\n\t\treturn this.parentFormGroup.get('html');\n\t}\n\n\tget table() {\n\t\treturn this.parentFormGroup.get('table');\n\t}\n\t\n\tget label() {\n\t\treturn this.parentFormGroup.get('html.label');\n\t}\n\n\tget nullable() {\n\t\treturn this.parentFormGroup.get('table.nullable');\n\t}\n}","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"parentFormGroup.controls.html\\\">\\n    <div class=\\\"form-group\\\">\\n      \\t<textarea formControlName=\\\"data\\\" class=\\\"form-control h-100\\\" rows=\\\"10\\\"></textarea>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-config-html-editor',\n  templateUrl: './config-html-editor.component.html',\n  styleUrls: ['./config-html-editor.component.css']\n})\nexport class ConfigHtmlEditorComponent implements OnInit {\n\t@Input() parentFormGroup: FormGroup;\n\t@Input() content;\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t\tthis.data.setValidators([\n\t\t\tValidators.required\n\t\t]);\n\t\tthis.html.patchValue({\n\t\t\t'data': this.content.html.data\n\t\t});\n\t}\n\n\tget html(){\n\t\treturn this.parentFormGroup.controls.html;\n\t}\n\tget data() {\n\t\treturn this.html.get('data');\n\t}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-group\\\" [formGroup]=\\\"parentFormGroup.controls.html\\\">\\n\\t<label for=\\\"title-text\\\">Image source</label>\\n\\t<input type=\\\"text\\\"\\n\\t\\tid=\\\"img-src\\\"\\n\\t\\tformControlName=\\\"src\\\"\\n\\t\\tclass=\\\"form-control\\\"\\n\\t\\t[ngClass]=\\\"{ 'is-invalid': src.invalid }\\\"\\n\\t/>\\n\\t<div *ngIf=\\\"src.invalid || src.touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t<div *ngIf=\\\"src.errors?.required\\\">You did not enter a field</div>\\n\\t\\t<div *ngIf=\\\"src.errors?.minlength\\\">Your field is too short</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-config-img',\n\ttemplateUrl: './config-img.component.html',\n\tstyleUrls: ['./config-img.component.css']\n})\nexport class ConfigImgComponent implements OnInit {\n\t@Input() parentFormGroup: FormGroup;\n\t@Input() content;\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t\tthis.tag.setValidators([\n\t\t\tValidators.required\n\t\t]);\n\t\tthis.html.patchValue({\n\t\t\t'tag': this.content.html.tag\n\t\t});\t\t\n\t\tthis.src.setValidators([\n\t\t\tValidators.required\n\t\t]);\n\t\tthis.html.patchValue({\n\t\t\t'src': this.content.html.src\n\t\t});\n\t}\n\n\tget tag() {\n\t\treturn this.html.get('tag');\n\t}\n\n\tget src() {\n\t\treturn this.html.get('src');\n\t}\n\n\tget html() {\n\t\treturn this.parentFormGroup.controls.html;\n\t}\n}\n","module.exports = \"\"","module.exports = \"\\t<div class=\\\"card\\\">\\n\\t<div class=\\\"card-header\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<pre>{{ fields.value | json }}</pre>\\n\\n\\t\\t<div *ngIf=\\\"fields.value.length > 0\\\">\\n\\t\\t\\t<div ng-show=\\\"hasDuplicateName\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t<strong ng-bind=\\\"duplicatedName\\\" class=\\\"text-dark\\\"></strong> already exists! The name must be unique.\\n\\t\\t\\t</div>\\n\\t\\t\\t<table class=\\\"table table-condensed table-bordered\\\" *ngIf=\\\"fields.value.length > 0\\\">\\n\\t\\t\\t\\t<thead class=\\\"thead-light\\\" ui-sortable>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th *ngFor=\\\"let f of keyFields; let fieldIndex = index;\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group input-group-sm\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(focusin)=\\\"onFocusIn(keyFields[fieldIndex].text)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(focusout)=\\\"onFocusOut()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(input)=\\\"whileTyping($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"keyFields[fieldIndex].text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control form-control-sm\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-prepend input-group-sm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-outline-secondary btn-sm dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"newColumn(fieldIndex)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-columns\\\" aria-hidden=\\\"true\\\"></i> New Column\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deleteColumn(keyFields[fieldIndex].text)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash text-delete\\\" aria-hidden=\\\"true\\\"></i> Delete Column\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a> \\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let field of fields.value; let fieldIndex = index;\\\">\\n\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let f of keyFields\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"field[f.text] \\\">\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-prepend input-group-sm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-outline-secondary btn-sm dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"newLine(fieldIndex)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-bars\\\"></i> New Row\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deleteLine(fieldIndex)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i> Delete Row\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a> \\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t\\t<h6 class=\\\"alert alert-danger\\\" *ngIf=\\\"fields.value.length <= 0\\\">\\n\\t\\t<i class=\\\"fa fa-exclamation-triangle\\\"></i> Empty Table\\n\\t\\t</h6>\\n\\t</div>\\n\\t</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Jsonp } from '@angular/http';\n\n@Component({\n\tselector: 'app-config-table-builder',\n\ttemplateUrl: './config-table-builder.component.html',\n\tstyleUrls: ['./config-table-builder.component.css']\n})\nexport class ConfigTableBuilderComponent implements OnInit {\n\t@Input() content;\n\t@Input() parentFormGroup;\n\tkeyFields: Array<{\n\t\ttext: string\n\t}>;\n\toldValue: string = '';\n\tnewValue: string = '';\n\n\tconstructor() {\n\t}\n\n\tpublic whileTyping(event){\n\t\tthis.newValue = event.target.value;\n\t}\n\n\tpublic onFocusIn(oldValue){\n\t\tthis.oldValue = oldValue;\n\t}\n\n\tpublic onFocusOut() {\n\t\tif(typeof this.newValue !== 'undefined' && this.newValue.trim() !== '' && this.oldValue !== '') {\n\t\t\tif(this.fields.value.length > 0 && this.oldValue != this.newValue) {\n\t\t\t\tvar fields = this.fields.value;\n\t\t\t\tvar newFields = JSON.parse(JSON.stringify(fields).replace(new RegExp(`\"${this.oldValue}\":`, \"g\"), `\"${this.newValue}\":`));\n\t\n\t\t\t\tfor (var i = 0; i < fields.length; i++) {\n\t\t\t\t\t//cria um novo item\n\t\t\t\t\t//fields[i][this.newValue] = fields[i][this.oldValue];\n\t\t\t\t\t//deleta o item antigo\n\t\t\t\t\t//delete fields[i][this.oldValue];\n\t\t\t\t}\n\t\t\n\t\t\t\tthis.fields.value = newFields;\n\t\t\t\tthis.fields.updateValueAndValidity({ onlySelf: false, emitEvent: true });\n\t\t\t\tthis.keyFields = Object.keys(newFields[0]).map(item => { \n\t\t\t\t\treturn { text: item }\n\t\t\t\t});\n\t\t\t\tthis.oldValue = '';\n\t\t\t\tthis.newValue = '';\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic newColumn(fieldIndex: number){\n\t\tif(this.keyFields.length > 0){\n\t\t\tlet columnName = `column ${this.keyFields.length + 1}`;\n\n\t\t\tthis.keyFields.splice(fieldIndex + 1, 0, { text: columnName });\n\t\t\tfor(let i = 0; i < this.fields.value.length; i++){\n\t\t\t\tthis.fields.value[i][columnName] = '';\n\t\t\t}\n\t\t\tthis.fields.updateValueAndValidity({ onlySelf: false, emitEvent: true });\n\t\t}\n\t}\n\n\tpublic newLine(fieldIndex: number){\n\t\tif(this.fields.value.length > 0){\n\t\t\tvar cloned = Object.assign({}, this.fields.value[0]);\n\t\t\tfor (var key in cloned) {\n\t\t\t\tif (cloned.hasOwnProperty(key)) {\n\t\t\t\t\tcloned[key] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.fields.value.splice(fieldIndex + 1, 0, cloned);\n\t\t}\n\t}\n\n\tpublic deleteColumn(keyName: string){\n\t\tif(this.fields.value.length > 0){\n\t\t\tthis.fields.value.forEach(field => {\n\t\t\t\tif(typeof field[keyName] != 'undefined'){\n\t\t\t\t\tthis.keyFields.map((item, index) => {\t\n\t\t\t\t\t\tif(item.text == keyName){\n\t\t\t\t\t\t\tthis.keyFields.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdelete field[keyName];\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.rebuildFieldsWhenEmpty();\n\t\t}\n\t}\n\n\tpublic deleteLine(fieldIndex: number){\n\t\tif(this.fields.value.length > 0){\n\t\t\tthis.fields.value.splice(fieldIndex, 1);\n\t\t\tthis.rebuildFieldsWhenEmpty();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.keyFields = this.getKeyFields();\n\t}\n\n\trebuildFieldsWhenEmpty() {\n\t\tif(this.fields.value[0] != null){\n\t\t\tlet keyFields = Object.keys(this.fields.value[0]);\n\t\t\tif(keyFields.length <= 0){\n\t\t\t\tthis.fields.value = [{\n\t\t\t\t\t\"Book ID\": \"\",\n\t\t\t\t}];\n\t\t\t\tthis.keyFields = this.getKeyFields();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fields.value = [{\n\t\t\t\t\"Book ID\": \"\",\n\t\t\t}];\n\t\t\tthis.keyFields = this.getKeyFields();\n\t\t}\n\t}\n\n\tpublic getKeyFields() {\n\t\tif (this.fields.value.length > 0) {\n\t\t\tlet fieldKeys = JSON.parse(JSON.stringify(this.fields.value[0]));\n\t\t\treturn Object.keys(fieldKeys).map(item => {\n\t\t\t\treturn { text: item };\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tget html() {\n\t\treturn this.parentFormGroup.controls.html;\n\t}\n\n\tget fields(){\n\t\treturn this.html.get('fields');\n\t}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" [formGroup]=\\\"parentFormGroup.controls.html\\\">\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"title-heading-type\\\">Heading Type</label>\\n\\t\\t\\t<select id=\\\"title-heading-type\\\" formControlName=\\\"tag\\\" class=\\\"form-control form-control-sm\\\">\\n\\t\\t\\t\\t<option *ngFor=\\\"let h of headingTypes\\\" [value]=\\\"h\\\">{{ h }}</option>\\n\\t\\t\\t</select>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"col-md-8\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t<label for=\\\"title-text\\\">Title</label>\\n\\t\\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t\\tid=\\\"title-text\\\"\\n\\t\\t\\t\\tformControlName=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control form-control-sm\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': text.invalid }\\\" />\\n\\t\\t\\t<div *ngIf=\\\"text.invalid || text.touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"text.errors?.required\\\">You did not enter a field</div>\\n\\t\\t\\t\\t<div *ngIf=\\\"text.errors?.minlength\\\">Your field is too short</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-config-title',\n\ttemplateUrl: './config-title.component.html',\n\tstyleUrls: ['./config-title.component.css']\n})\nexport class ConfigTitleComponent implements OnInit {\n\t@Input() content;\n\t@Input() parentFormGroup: FormGroup;\n\n\theadingTypes: Array<string>;\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t\tthis.headingTypes = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\n\t\tthis.text.setValidators([\n\t\t\tValidators.required\n\t\t]);\n\t\tthis.html.patchValue({\n\t\t\t'text': this.content.html.text\n\t\t});\n\t}\n\n\tget html() {\n\t\treturn this.parentFormGroup.controls.html;\n\t}\n\n\tget text() {\n\t\treturn this.html.get('text');\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormBuilderComponent } from \"./form-builder.component\";\n\nconst routes: Routes = [\n    { path: 'form-builder/:projectId/edit', component: FormBuilderComponent}\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule],\n    declarations: []\n})\nexport class FormBuilderRoutingModule { }\n","module.exports = \".square::-webkit-scrollbar-track {\\n    border-radius: 0 !important; \\n}\\n\\n.square::-webkit-scrollbar-thumb {\\n    border-radius: 0 !important; \\n}\\n\\n.thin::-webkit-scrollbar {\\n    width: 5px !important ; \\n}\\n\\n.scrollbar-near-moon::-webkit-scrollbar-track {\\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\\n    background-color: #F5F5F5;\\n    border-radius: 10px; \\n}\\n\\n.scrollbar-near-moon::-webkit-scrollbar {\\n    width: 12px;\\n    background-color: #F5F5F5; \\n}\\n\\n.scrollbar-near-moon::-webkit-scrollbar-thumb {\\n    border-radius: 10px;\\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\\n    background-image: linear-gradient(to top, #34d8ed 0%, #349aed 100%); \\n}\\n\\n.scrollbar-near-moon {\\n    height: 100vh;\\n    overflow-y: scroll;\\n}\"","module.exports = \"\\n<div class=\\\"tab-content\\\">\\n    <div class=\\\"row no-gutters\\\">\\n        <div class=\\\"col-md-3\\\" [hidden]=\\\"config?.previewMode\\\" *ngIf=\\\"tabNumber == 1\\\">            \\n            <div class=\\\"sticky-top scrollbar-near-moon thin square\\\">                     \\n                <app-create-table-to-json \\n                (pageChange)=\\\"getPages($event)\\\" \\n                [(tableName)]=\\\"tableName\\\"></app-create-table-to-json>\\n                <app-form-menu \\n                (isNewPage)=\\\"isNewPage($event)\\\"\\n                ></app-form-menu>\\n            </div>\\n        </div>\\n        <div [ngClass]=\\\"{ 'col-md-12': config?.previewMode || tabNumber == 2, 'col-md-9': !config?.previewMode }\\\">\\n            <div class=\\\"sticky-top\\\">\\n                <div class=\\\"btn-group d-flex bg-white\\\" role=\\\"group\\\">\\n                    <!--button (click)=\\\"save();\\\"\\n                    class=\\\"btn btn-md w-100\\\" \\n                    [ngClass]=\\\"{ \\n                        'btn-success': tabNumber == 1 && !previewMode, \\n                        'btn-outline-dark': tabNumber == 2 && previewMode \\n                    }\\\"\\n                    [ngStyle]=\\\"{ 'opacity': tabNumber == 2 && previewMode? 0.4 : 1 }\\\">\\n                        <i class=\\\"fas fa-save\\\" [ngClass]=\\\"{ 'animated infinite heartBeat': tabNumber == 1 && !previewMode }\\\"></i> Save\\n                    </button-->\\n                    <button (click)=\\\"tabNumber = 1; previewMode = false; preview();\\\"\\n                    class=\\\"btn btn-md w-100\\\" \\n                    [ngClass]=\\\"{ \\n                        'btn-primary': tabNumber == 1 && !previewMode, \\n                        'btn-outline-dark': tabNumber == 2 && previewMode \\n                    }\\\"\\n                    [ngStyle]=\\\"{ 'opacity': tabNumber == 2 && previewMode? 0.4 : 1 }\\\">\\n                        <i class=\\\"fas fa-edit\\\" [ngClass]=\\\"{ 'animated infinite heartBeat': tabNumber == 1 && !previewMode }\\\"></i> Editor\\n                    </button>\\n                    <button (click)=\\\"this.previewMode = !this.previewMode; preview(); tabNumber = 1;\\\" \\n                    class=\\\"btn btn-md w-100\\\" \\n                    [ngClass]=\\\"{ \\n                        'btn-success': previewMode,\\n                        'btn-outline-danger': !previewMode\\n                    }\\\"\\n                    [ngStyle]=\\\"{ 'opacity': tabNumber == 2 || !config?.previewMode? 0.4 : 1 }\\\">\\n                        <i [ngClass]=\\\"{ 'fa-eye animated infinite heartBeat': previewMode, 'fa-eye-slash': !previewMode }\\\" class=\\\"fa fa-1x\\\"></i>\\n                    </button>\\n                    <button (click)=\\\"tabNumber = 2; previewMode = false; preview();\\\" \\n                    class=\\\"btn btn-md w-100\\\" \\n                    [ngClass]=\\\"{ 'btn-primary': tabNumber == 2, 'btn-outline-dark': tabNumber == 1 }\\\"\\n                    [ngStyle]=\\\"{ 'opacity': tabNumber == 1? 0.4 : 1 }\\\">\\n                        <i class=\\\"fas fa-edit\\\" [ngClass]=\\\"{ 'animated infinite heartBeat': tabNumber == 2 }\\\"></i> Faster entry\\n                    </button>\\n                </div>\\n            </div>\\n            <app-form-pages [(pages)]=\\\"pages\\\" *ngIf=\\\"tabNumber == 1\\\"></app-form-pages>\\n            <app-form-info [(pages)]=\\\"pages\\\" *ngIf=\\\"tabNumber == 2\\\"></app-form-info>\\n        </div>            \\n    </div>\\n</div>\\n\\n<ul class=\\\"list-group\\\"> \\n    <li class=\\\"list-group-item\\\" >\\n        <div class=\\\"row\\\">\\n            <h3 \\n                *ngFor=\\\"let list of mvcList; let listIndex = index;\\\"\\n                class=\\\"col-md-3\\\" \\n                [ngClass]=\\\"{ 'text-danger': list.isOpen }\\\" \\n                (click)=\\\"list.isOpen = !list.isOpen\\\"\\n            >\\n                <div [ngStyle]=\\\"{ 'cursor': 'pointer' }\\\" class=\\\"text-uppercase\\\">\\n                    <i class=\\\"fas\\\" [ngClass]=\\\"{ 'fa-minus text-danger': list.isOpen, 'fa-plus': !list.isOpen }\\\"></i> \\n                    {{ list.name }}\\n                </div>\\n            </h3>\\n        </div>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n        <div *ngIf=\\\"isTabMvcOpen(0)\\\">\\n            <h1>MODEL</h1>\\n            <textarea class=\\\"form-control\\\" rows=\\\"40\\\" >\\n            class {{ tableName | snakeCaseToCamelCase }} extends ModelAuditable {\\n                protected $table      = '{{ tableName }}';\\n                protected $primaryKey = {{ laravel.primaryKey? (laravel.primaryKey.length > 1? \\\"[\\\" +  laravel.primaryKey + \\\"]\\\": laravel.primaryKey[0]) : [] }};\\n                public $incrementing  = true; \\n                public $sequence      = 'sga_{{ laravel.primaryKey? removeDoubleQuotes(laravel.primaryKey[0]) : '' }}_seq';  \\n                \\n                protected $fillable = {{ laravel.fillable }};\\n            }\\n            </textarea>            \\n        </div>\\n        <div *ngIf=\\\"isTabMvcOpen(1)\\\">\\n            <h1>VIEW</h1>\\n            <textarea class=\\\"form-control\\\" rows=\\\"40\\\">\\n                @extends('Admin.layouts.app_index')\\n\\n                @section('css')\\n                @endsection\\n\\n                @section('breadcrumb-manual')\\n                <li></li>\\n                @endsection\\n\\n                @section('pagina_header')\\n                @endsection\\n\\n                @section('pagina_conteudo')    \\n                    {{ bootstrap.table() }}\\n\\n                    <!-- MODAL CRUD -->\\n                    {!! $HTML::modalOpen('mudar_aqui', 'Adicionar') !!}\\n                        {!! $HTML::formOpen('form_mudar_aqui', $acao) !!}  \\n                            {{ bootstrap.html() }}\\n                        {!! $HTML::formClose() !!}\\n                    {!! $HTML::modalClose(true, $HTML::modalBotoesSalvar('mudar_aqui')) !!}\\n                @endsection   \\n                    \\n                @section('bibliotecascript')\\n                    @include('bibliotecas.js.scripts.modalCrud')\\n                @endsection\\n\\n                @section('script')    \\n                    {{ bootstrap.script() }}\\n                @endsection\\n            </textarea>\\n        </div>\\n        <div *ngIf=\\\"isTabMvcOpen(2)\\\">\\n            <h1>CONTROLLER</h1>\\n            <textarea class=\\\"form-control\\\" rows=\\\"40\\\">\\n            <?php\\n\\n            namespace App\\\\Http\\\\Controllers;\\n            \\n            use Illuminate\\\\Http\\\\Request;\\n            \\n            class {{ tableName | snakeCaseToCamelCase }}Controller extends Controller\\n            {\\n                /**\\n                * Display a listing of the resource.\\n                *\\n                * @return \\\\Illuminate\\\\Http\\\\Response\\n                */\\n                public function index()\\n                {\\n                    //\\n                    $r = {{ tableName | snakeCaseToCamelCase }}::all();\\n\\n                    return view('shares.index', compact('r'));\\n                }\\n            \\n                /**\\n                * Show the form for creating a new resource.\\n                *\\n                * @return \\\\Illuminate\\\\Http\\\\Response\\n                */\\n                public function create()\\n                {\\n                    //\\n                    return view('mudar_aqui.create');\\n                }\\n            \\n                /**\\n                * Store a newly created resource in storage.\\n                *\\n                * @param  \\\\Illuminate\\\\Http\\\\Request  $request\\n                * @return \\\\Illuminate\\\\Http\\\\Response\\n                */\\n                public function store(Request $request)\\n                {\\n                    //\\n                    $r = {{ tableName | snakeCaseToCamelCase }}::create({{ laravel.request }});\\n\\n\\n                    return redirect('/path_mudar_aqui')->with('success', 'Stock has been added');\\n                }\\n            \\n                /**\\n                * Display the specified resource.\\n                *\\n                * @param  int  $id\\n                * @return \\\\Illuminate\\\\Http\\\\Response\\n                */\\n                public function show($id)\\n                {\\n                    //\\n                    $r = {{ tableName | snakeCaseToCamelCase }}::find($id);\\n\\n                    return view('mudar_aqui.show', compact('r'));\\n                }\\n            \\n                /**\\n                * Show the form for editing the specified resource.\\n                *\\n                * @param  int  $id\\n                * @return \\\\Illuminate\\\\Http\\\\Response\\n                */\\n                public function edit($id)\\n                {\\n                    //\\n                    $r = {{ tableName | snakeCaseToCamelCase }}::find($id);\\n\\n                    return view('mudar_aqui.edit', compact('r'));\\n                }\\n            \\n                /**\\n                * Update the specified resource in storage.\\n                *\\n                * @param  \\\\Illuminate\\\\Http\\\\Request  $request\\n                * @param  int  $id\\n                * @return \\\\Illuminate\\\\Http\\\\Response\\n                */\\n                public function update(Request $request, $id)\\n                {\\n                    //\\n                    \\n\\n                    $r = {{ tableName | snakeCaseToCamelCase }}::find($id)\\n                    $r->update({{ laravel.request }});\\n                }\\n            \\n                /**\\n                * Remove the specified resource from storage.\\n                *\\n                * @param  int  $id\\n                * @return \\\\Illuminate\\\\Http\\\\Response\\n                */\\n                public function destroy($id)\\n                {\\n                    //\\n                    $r = {{ tableName | snakeCaseToCamelCase }}::find($id);\\n                    $r->delete();\\n            \\n                    return redirect('/shares')->with('success', 'Stock has been deleted Successfully');\\n                }\\n            }\\n            </textarea>\\n        </div>\\n        <div  *ngIf=\\\"isTabMvcOpen(3)\\\">\\n            <h1>VALIDATION</h1>\\n            <textarea class=\\\"form-control\\\" rows=\\\"40\\\">\\n                /**\\n                * Determine if the user is authorized to make this request.\\n                *\\n                * @return bool\\n                */\\n                public function authorize(){\\n                    return true;\\n                }\\n            \\n                public function rules(){\\n                    $rules = [\\n                        {{ laravel.rules }}\\n                    ];\\n                    return $rules;\\n                }\\n            \\n                /**\\n                * Get the validation rules that apply to the request.\\n                *\\n                * @return array\\n                */\\n                public function attributes(){\\n                    $attributes = [\\n                        {{ laravel.attributes }}\\n                    ];\\n                    return $attributes;\\n                }\\n            </textarea>\\n        </div>\\n    </li>    \\n</ul>\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { RenderHtmlService } from '../services/render-html.service';\nimport { HomeService } from \"../shared/services/home.service\";\n\nimport { Page } from \"../core/model/page.model\";\nimport { Content } from \"../core/model/content.model\";\nimport { Html, IHtml } from \"../core/model/html.model\";\nimport { Table, ITable } from \"../core/model/table.model\";\nimport { FormConfigService } from '../services/form-config.service';\nimport { PageService } from '../shared/services/page.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectService } from '../shared/services/project.service';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Validator {\n    inputs: any[];\n    rules: string;\n    attributes: string;\n    messages: string;\n    \n    html: IHtml;\n    table: ITable;\n\n    constructor() { \n        this.inputs = [];\n    }\n\n    setParams(d) {\n        this.html = new Html(d.html);\n        this.table = new Table(d.table);\n    }\n\n    setInputs(inputs) {\n        this.inputs = inputs;\n    }\n\n    getValidator() {\n        var rules = [];\n        rules.push(\n            this.isRequired(),\n            this.getDataType(),\n            this.getMaxlength()\n        );\n        var rules = rules.filter(function (el) {\n            return el != \"\" && el != null;\n        });\n        this.rules = `\\t'${this.table.columnName}' => ${JSON.stringify(rules)},\\n`;\n        this.attributes = `\\t'${this.table.columnName}' => '${this.html.label}',\\n`;        \n    }\n\n    getDataType(): string {\n        switch (this.table.type) {\n            case 'number':\n                return 'numeric';\n            case 'date':\n                return 'date_format:\"d/m/Y\"';\n            default:\n                return null;\n        }\n    }\n\n    getMaxlength(): string {\n        if (parseInt(this.table.size) > 0) {             \n            if (this.table.type == 'number') {\n                if(this.table.size.indexOf('.') !== -1){\n                    var sizeArr = this.table.size.split('.');\n                    var b = '.';\n                    var position = parseInt(sizeArr[0]) - parseInt(sizeArr[1]);\n                    var endBetween = '';\n                    for(var i = 0; i < parseInt(this.table.size); i++){\n                        endBetween += '9';\n                    }\n                    var output = [endBetween.slice(0, position), b, endBetween.slice(position)].join('');\n\n        \n                    return `between:0,${output}`;\n                }  \n                return `digits_between:1,${this.table.size}`;\n            }\n            return 'max:' + this.table.size;\n        }\n        return null;\n    }\n\n    laravel() {\n        let attr = '';\n        let rules = '';\n        let request = '';\n        let update = '';\n        let fillable = [];\n        let primaryKey = [];\n\n        var hue = this.inputs.reduce(\n            (prev, curr) => {\n                this.setParams(curr)\n                this.getValidator();\n                \n                if(curr.table.isPrimaryKey){\n                    primaryKey.push(`\"${curr.table.columnName}\"`);\n                }\n\n                fillable.push(curr.table.columnName);\n                request += `\"${curr.table.columnName}\" => $request->input('${curr.table.columnName}'),\\n`;\n                return {\n                    rules: rules += this.rules,\n                    attributes: attr += this.attributes,\n                    fillable: JSON.stringify(fillable, null, \"\\t\"),\n                    request: `[${request}]`,\n                    th: `<th>${curr.html.labelName}</th>`,\n                    primaryKey: primaryKey,\n                    table: ''\n                };\n            }\n        , {});\n        return hue;\n    }\n\n    isRequired(): string {\n        return this.table.nullable ? 'required' : 'nullable';\n    }\n\n    getMessages(): string {\n        return this.messages;\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Bootstrap {\n    tableName: string = \"i_table_mudar_aqui\";\n    pages: Array<Page>;\n    inputs: Array<Content>;\n    code: string = '';\n\n    constructor(\n        private renderHtmlService: RenderHtmlService\n    ) {\n    }\n\n    init(): void {\n        this.inputs = [];\n        var htmlPages = [];\n        var t = \"\\n\\t\";\n\n        this.pages.forEach((page, pageNumber) => {\n            htmlPages.push(`\\n<section class=\"page-${pageNumber + 1}\">`);\n                var tabNum = 1;\n                t = this.tabSpace(tabNum);\n                page.rows.forEach(row => {\n                    let grid = row.grid.split(' ');\n                    htmlPages.push(`${t}<div class=\"row\">`);\n                    tabNum++;\n                    t = this.tabSpace(tabNum);\n                        row.columns.forEach((column, j) => {\n                            //htmlPages.push(`${t}<div class=\"col-md-${grid[j]}\">`);\n                            column.contents.forEach(content => {\n                                if (content.html.category === 'form') {\n                                    this.inputs.push(content);\n                                }\n                                content.html['grid'] = grid[j];\n                                this.renderHtmlService.setParams(content);\n                                htmlPages.push(t + this.renderHtmlService.get().code);\n                            });\n                            //htmlPages.push(`${t}</div>`);\n                        });\n                    tabNum--;\n                    t = this.tabSpace(tabNum);\n                    htmlPages.push(`${t}</div>`);\n                });\n            htmlPages.push(`</section>`);\n        });\n        this.code = htmlPages.join(\"\\n\");\n    }\n\n    private tabSpace(tabNum : number) : string{\n        var tab = \"\\t\";\n        var newTab = \"\";\n        for(var i = 0; i < tabNum; i++){\n            newTab += tab;\n        }\n        return newTab;\n    }\n\n    html(): string{\n        return this.code;\n    }\n\n    table(): string{\n        if(typeof this.inputs != 'undefined' && this.inputs.length > 0){\n            let th = this.inputs.map((item) => { \n                return `\\n<th>${item.html.label}</th>`;\n            }, '').join('');\n            return `\n            <table class=\"table table-striped\" id=\"${this.tableName}\">\n                <thead>\n                    <tr>\n                    ${th}\n                    <th class=\"td_justo no-sort text-right\">\n                    {!! $HTML::iconeCriar(\n                        Auth::user()->can('admin.financeirodescontos.create'), \n                        '#', \n                        true, \n                        route('admin.financeirodescontos.store'))\n                    !!}\n                    </th>                \n                    </tr>\n                </thead>\n            </table>\n            `;            \n        }\n        return '';\n    }\n\n    script(){\n        if(typeof this.inputs != 'undefined' && this.inputs.length > 0){\n            var script = this.inputs.map((item) => {\n                return { \n                    data: item.table.columnName,\n                    name: item.table.columnName\n                };\n            }, []);\n\n            script.push({\n                'data': 'action',\n                'name': 'name'     \n            });\n\n            return `\n    <script>\n        /*---------------------Datatables--------------------------------*/\n        var table = $('#${this.tableName}').DataTable({\n            stateSave: true,\n            processing: true,\n            serverSide: true,\n            cache: true,\n            ajax: \"\",\n            columns: ${JSON.stringify(script, null, '\\t')}\n        });        \n        /*---------------------/Datatables-------------------------------*/\n        /*---------------------CRUD IN MODAL-------------------------*/\n        modalCrudConstruct('modal_mudar_aqui','form_mudar_aqui');\n        /*---------------------/Create Edit Show-------------------------*/\n    \n        /*---------------------Validation-----------------------------------*/\n        $(document).on('click', '#i_btn_salvar_modal_mudar_aqui',function(){\n            validationForm('#form_mudar_aqui');\n        });\n        /*---------------------/Validation-------------------------*/            \n    </script>`;\n        }\n        return '';\n    }\n\n    getInputs() {\n        return this.inputs;\n    }\n\n    setPages(pages) {\n        this.pages = pages;\n    }\n}\n\nexport interface MVC {\n    isOpen: boolean;\n    name: string;\n}\n\n@Component({\n    selector: 'app-form-builder',\n    templateUrl: './form-builder.component.html',\n    styleUrls: ['./form-builder.component.css'],\n    //changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormBuilderComponent implements OnInit {\n    pages: Array<Page>;\n    inputs: Array<Content>;\n    mvcList: Array<MVC>;\n    tableName: string = '';\n    tabNumber: number;\n    isTabAlreadyOpen: boolean = false;\n    tabMVC: number; \n    previewMode: boolean = false;\n    config: {\n        previewMode: boolean \n    };\n    project_id: number;\n\n    constructor(\n        private formConfigService: FormConfigService,\n        private bootstrap: Bootstrap,\n        private validator: Validator,\n        private projectService: ProjectService,\n        private homeService: HomeService,\n        private pageService: PageService,\n        private route: ActivatedRoute,\n        private ngxLoader: NgxUiLoaderService\n\n    ) {\n\n        this.mvcList = [{\n            isOpen: false,\n            name: 'Model'\n        },{\n            isOpen: false,\n            name: 'View'\n        },{\n            isOpen: false,\n            name: 'Controller'\n        },{\n            isOpen: false,\n            name: 'Validation'\n        }];\n    }\n\n    ngOnInit() {\n        this.pages = [];\n        //this.homeService.getHome().subscribe((result: Array<Page>) => { this.pages = result; });\n        //this.pages = this.homeService.getHomeStatic();\n        this.route.params.subscribe(r => {\n            this.project_id = r.projectId;\n        });\n        this.tabMVC = 1;\n        this.tabNumber = 1; \n        this.previewMode = false; \n        this.preview();\n        this.config = {\n            previewMode: this.previewMode\n        };\n        this.loadFormBuilder(); \n    }  \n\n    loadFormBuilder(){\n        this.ngxLoader.start();\n        //this.homeService.getHome().subscribe((result: Array<Page>) => { this.pages = result; });\n        this.pages = this.homeService.getHomeStatic();\n        this.ngxLoader.stop();\n        /*this.pageService.getPageByProjectId(this.project_id)\n        .subscribe(result => { \n            if(result.success){\n                this.pages = result.data;\n            }\n            this.ngxLoader.stop();\n        });*/\n    }\n      \n    ngAfterViewInit(){\n   \n    }\n\n    public save(){\n        /*this.pageService.createPage({ \n            project_id: this.project_id,\n            pages: this.pages \n        })\n        .subscribe(result => {\n            if(result.success){\n                this.loadFormBuilder();\n            }\n        });*/\n    }\n\n    public preview(): void {\n        //this.previewMode = !this.previewMode;\n        this.config = {\n            previewMode: this.previewMode\n        };\n        this.formConfigService.setConfig(this.config);\n    }\n\n    isTabMvcOpen(tabNumber: number){\n        if(this.mvcList[tabNumber].isOpen){\n            this.bootstrap.setPages(this.pages);\n            this.bootstrap.init();\n            this.validator.setInputs(this.bootstrap.getInputs());\n        }\n        return this.mvcList[tabNumber].isOpen;\n    }\n\n    get laravel() {\n        return this.validator.laravel();\n    }\n\n    public removeDoubleQuotes(word: string){\n        if(typeof word != 'undefined')\n            return word.replace(/\\\"/g, \"\");\n        return '';            \n    }\n\n    public isNewPage(newPage: boolean): void {\n        if (newPage) {\n            this.pageService.createPage({ \n                project_id: this.project_id,\n                name: `Page ${this.pages.length}`\n            })\n            .subscribe(result => {\n                if(result.success){\n                    this.pages = result.data;\n                }\n            });            \n            /*this.pages = [...this.pages, {\n                name: 'Page ' + (this.pages.length + 1),\n                rows: []\n            }];*/\n            /*this.pages.push({\n                name: 'Page ' + (this.pages.length + 1),\n                rows: []\n            });*/\n        }\n    }\n\n    public getPages(pages): void {\n        this.pages = [...this.pages, pages];\n        //this.pages.push(pages);\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DragulaModule } from 'ng2-dragula';\n\nimport { FormBuilderComponent } from \"./form-builder.component\";\nimport { CreateTableToJsonComponent } from './../create-table-to-json/create-table-to-json.component';\n\nimport { FormMenuComponent } from './form-menu/form-menu.component';\n\nimport { FormBuilderRoutingModule } from \"./form-builder-routing.module\";\nimport { FormConfigModule } from './../form-builder/form-config/form-config.module';\nimport { FormPagesModule } from './../form-pages/form-pages.module';\nimport { FormInfoModule } from '../form-info/form-info.module';\nimport { SumBeEqualsToDirective } from '../shared/directives/sum-be-equals-to.directive';\nimport { RenderContentModule } from '../form-pages/render-content/render-content.module';\nimport { SnakeCaseToCamelCasePipe } from '../shared/pipes/snake-case-to-camel-case.pipe';\nimport { ConfigChoicesModule } from '../config-choices/config-choices.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DragulaModule,\n        FormBuilderRoutingModule,\n        RenderContentModule,\n        FormPagesModule,\n        FormConfigModule,\n        FormInfoModule,\n        ConfigChoicesModule,\n        SharedModule\n    ],\n    exports: [\n        DragulaModule\n    ],\n    declarations: [\n        CreateTableToJsonComponent,\n        FormMenuComponent,\n        FormBuilderComponent,\n        SnakeCaseToCamelCasePipe,\n        SumBeEqualsToDirective\n    ],\n    providers: [],\n    entryComponents: [\n        //ConfigChoicesComponent\n    ]\n})\nexport class FormBuilderModule { }\n","module.exports = \"\"","module.exports = \"<!-- MODAL -->\\n<form *ngIf=\\\"configForm\\\" [formGroup]=\\\"configForm\\\" (ngSubmit)=\\\"register()\\\">\\n    <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <app-render-content [content]=\\\"configForm.value\\\"></app-render-content>\\n                <div *ngFor=\\\"let r of render.components\\\">\\n                    <app-config-general \\n                        [parentFormGroup]=\\\"configForm\\\"\\n                        [content]=\\\"content\\\"\\n                        *ngIf=\\\"r.componentName === 'app-config-general'\\\"></app-config-general>\\n                    <app-config-img \\n                        [parentFormGroup]=\\\"configForm\\\"\\n                        [content]=\\\"content\\\"\\n                        *ngIf=\\\"r.componentName === 'app-config-img'\\\"></app-config-img>\\n                    <app-config-title\\n                        [parentFormGroup]=\\\"configForm\\\"\\n                        [content]=\\\"content\\\"\\n                        *ngIf=\\\"r.componentName === 'app-config-title'\\\"></app-config-title>\\n                    <app-config-html-editor\\n                        [parentFormGroup]=\\\"configForm\\\"\\n                        [content]=\\\"content\\\"\\n                        *ngIf=\\\"r.componentName === 'app-config-html-editor'\\\"></app-config-html-editor>\\n                    <app-config-choice-form\\n                        [parentFormGroup]=\\\"configForm\\\"\\n                        [content]=\\\"content\\\"\\n                        *ngIf=\\\"r.componentName === 'app-config-choices'\\\"></app-config-choice-form>\\n                    <hr>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" \\n        class=\\\"btn btn-outline-dark\\\" \\n        (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\n        <button type=\\\"submit\\\"\\n        class=\\\"btn btn-outline-success\\\" \\n        >Save </button>\\n    </div>\\n</form>\"","import { Component, OnInit, Input, Output, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\nimport { FormContentConfigService } from './../../services/form-content-config.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NgbModal, NgbModalOptions, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ContentService } from 'src/app/shared/services/content.service';\nimport { Content } from '../../core/model';\n\n@Component({\n    selector: 'app-form-config',\n    templateUrl: './form-config.component.html',\n    styleUrls: ['./form-config.component.css']\n})\nexport class FormConfigComponent implements OnInit {\n    @ViewChild('modal') modal: TemplateRef<any>;\n    options: NgbModalOptions;\n    configForm: FormGroup;\n    //content: any;\n\n    @Input() content_id: number;\n    @Input() content: Content;\n    @Output() emitData = new EventEmitter();\n    @Output() isClickedChange = new EventEmitter();\n\n    render: {\n        [key: string]: {\n            tabs: Array<string>\n        }\n    };\n    constructor(\n        private formContentConfig: FormContentConfigService,\n        private fb: FormBuilder,\n        private contentService: ContentService,\n        private activeModal: NgbActiveModal\n    ) { }\n\n    ngOnInit() {\n        /*this.contentService.showContent(this.content_id).subscribe(r => {\n            if(r.success){\n                this.content = r.data;\n                this.content['id'] = this.content_id;\n                const tag = this.content.html.tag;\n                this.render = this.formContentConfig.render()[tag];\n                this.configForm = this.fb.group({\n                    id: [this.content_id,[]],\n                    html: this.fb.group({\n                        'tag': [this.content.html.tag,[]],\n                        'content_choice_id': [this.content.html.content_choice_id,[]],\n                        'category': [this.content.html.category,[]],\n                        'fields': [this.content.html.fields,[]],\n                        'label': [this.content.html.label,[]],\n                        'src': [this.content.html.src,[]],\n                        'text': [this.content.html.text,[]],\n                        'data': [this.content.html.data]\n                    }),\n                    table: this.fb.group({\n                        'columnName': [this.content.table.columnName,[]],\n                        'type': [this.content.table.type,[]],\n                        'size': [this.content.table.size,[]],\n                        'nullable': [this.content.table.nullable]\n                    })\n                });\n            }\n        });*/\n        //this.content['id'] = this.content.;\n        const tag = this.content.html.tag;\n        this.render = this.formContentConfig.render()[tag];\n        this.configForm = this.fb.group({\n            id: [this.content_id,[]],\n            html: this.fb.group({\n                'tag': [this.content.html.tag,[]],\n                'content_choice_id': [this.content.html.content_choice_id,[]],\n                'choices': this.fb.array([]),\n                'category': [this.content.html.category,[]],\n                'fields': [this.content.html.fields,[]],\n                'label': [this.content.html.label,[]],\n                'src': [this.content.html.src,[]],\n                'text': [this.content.html.text,[]],\n                'data': [this.content.html.data]\n            }),\n            table: this.fb.group({\n                'columnName': [this.content.table.columnName,[]],\n                'type': [this.content.table.type,[]],\n                'size': [this.content.table.size,[]],\n                'nullable': [this.content.table.nullable]\n            })\n        });        \n    }\n\n    editContent(element){\n    }\n\n    register(){\n        console.log(this.configForm.value);\n        this.emitData.emit(this.configForm.value);\n        //this.activeModal.close();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigGeneralComponent } from './../config/config-general/config-general.component';\nimport { ConfigHtmlEditorComponent } from './../config/config-html-editor/config-html-editor.component';\nimport { ConfigImgComponent } from './../config/config-img/config-img.component';\nimport { FormConfigComponent } from './form-config.component';\nimport { DragulaModule } from 'ng2-dragula';\nimport { ConfigTableBuilderComponent } from '../config/config-table-builder/config-table-builder.component';\nimport { RenderContentModule } from '../../form-pages/render-content/render-content.module';\nimport { ConfigTitleComponent } from '../config/config-title/config-title.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ConfigChoiceFormComponent } from '../../config-choices/config-choice-form/config-choice-form.component';\nimport { ConfigChoicesModule } from 'src/app/config-choices/config-choices.module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tDragulaModule,\n\t\tRenderContentModule,\n\t\tSharedModule,\n\t\tConfigChoicesModule\n\t],\n\texports: [\n\t\tFormConfigComponent,\n\t\tConfigGeneralComponent,\n\t\tConfigHtmlEditorComponent,\n\t\tConfigImgComponent,\n\t\tConfigTableBuilderComponent,\n\t\tConfigTitleComponent\n\t],\n\tdeclarations: [\n\t\tFormConfigComponent,\n\t\tConfigGeneralComponent,\n\t\tConfigHtmlEditorComponent,\n\t\tConfigImgComponent,\n\t\tConfigTableBuilderComponent,\n\t\tConfigTitleComponent\n\t]\n})\nexport class FormConfigModule { }\n","module.exports = \".full-width {\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"card bg-white\\\">\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<section id=\\\"page-menu\\\" class=\\\"pt-2\\\">\\n\\t\\t\\t<!--div dragula=\\\"pages\\\" [(dragulaModel)]=\\\"pageModel\\\" class=\\\"menu-page-sortable\\\"-->\\n\\t\\t\\t\\t<button (click)=\\\"newPage()\\\" class=\\\"btn btn-dark btn-block btn-sm\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-file\\\"></i> New Page\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t<!--/div-->\\n\\t\\t</section>\\n\\t\\t<section id=\\\"grid-menu\\\" class=\\\"pt-2\\\">\\n\\t\\t\\t<h3 class=\\\"text-center\\\">Grid System</h3>\\n\\t\\t\\t<fieldset name=\\\"bootstrap_container\\\" dragula=\\\"rowSortable\\\" [(dragulaModel)]=\\\"bootstrap\\\" class=\\\"menu-row-sortable\\\">\\n\\t\\t\\t\\t<div *ngFor=\\\"let b of bootstrap; let bIndex = index;\\\">\\n\\t\\t\\t\\t\\t<form #f=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"f.invalid\\\" [ngStyle]=\\\"{ cursor: 'move' }\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row-handle p-1 mx-1 mt-1 border-bottom border-dark\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrows-alt fa-1x row-handle\\\"></i><strong class=\\\"row-handle\\\"> GRID</strong>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group input-group-sm\\\">\\n\\t\\t\\t\\t\\t\\t\\t<textarea type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(blur)=\\\"change(bIndex)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"b.grid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"grid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': f.controls.grid?.invalid }\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control form-control-sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngStyle]=\\\"{ cursor: 'pointer' }\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tsumBeEqualsTo=\\\"12\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tminlength=\\\"2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tpattern=\\\"^(\\\\s*(0?[1-9]|[1-9][0-9])+\\\\s*)+$\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"5\\\"\\n\\t\\t\\t\\t\\t\\t\\t></textarea>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.controls.grid?.invalid || f.controls.grid?.touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.controls.grid?.errors?.required \\\">* Enter with your grid.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.controls.grid?.errors?.pattern\\\">* Allows only numbers (except only zero) and space.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.controls.grid?.errors?.minlength\\\">* Min. Length is {{ f.controls.grid?.errors.minlength.requiredLength }}.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.controls.grid?.errors?.isSumInvalid\\\">* The sum of the each line must be equals to {{ f.controls.grid.errors?.sumBeEqualsTo }}.</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</fieldset>\\n\\t\\t</section>\\n\\t\\t<section id=\\\"tool-menu\\\" class=\\\"pt-2\\\">\\n\\t\\t\\t<h3 class=\\\"text-center\\\">Tools</h3>\\n\\t\\t\\t<div *ngFor=\\\"let tool of tools | groupBy: 'html.category'; let toolCategoryIndex = index;\\\">\\n\\t\\t\\t\\t<div class=\\\"border-bottom border-dark p-1 text-uppercase\\\" [attr.data-toggle]=\\\"'collapse'\\\" [attr.data-target]=\\\"'#collapse-' + toolCategoryIndex\\\" [ngStyle]=\\\"{ cursor: 'pointer' }\\\">\\n\\t\\t\\t\\t\\t{{ tool.key }}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div \\n\\t\\t\\t\\t\\tid=\\\"collapse-{{ toolCategoryIndex }}\\\" \\n\\t\\t\\t\\t\\tdragula=\\\"contents\\\"\\n\\t\\t\\t\\t\\t[(dragulaModel)]=\\\"tool.value\\\"\\n\\t\\t\\t\\t\\tclass=\\\"row menu-content-sortable no-gutters collapse m-1 show\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{ }\\\"\\n\\t\\t\\t\\t\\taria-expanded=\\\"true\\\"\\n\\t\\t\\t\\t\\t[attr.data-parent]=\\\"'#accordion'\\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let t of tool.value\\\"\\n\\t\\t\\t\\t\\t\\t[ngStyle]=\\\"{ 'cursor': 'move' }\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"text-white content-handle menu-content-sortable col-md-6 \\\"\\n\\t\\t\\t\\t\\t\\t[attr.data-content]=\\\"t | json\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"p-1 mx-1 mt-1 border border-dark content-handle\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"text-dark text-capitalize content-handle\\\">{{ t.html.tag }}</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<app-config-choices></app-config-choices>\\n\\t\\t</section>\\n\\t</div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HtmlElementService } from '../../shared/services/html-element.service';\nimport { BootstrapGridSystemService } from '../../services/bootstrap-grid-system.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfigChoicesComponent } from '../../config-choices/config-choices.component';\n\n@Component({\n    selector: 'app-form-menu',\n    templateUrl: './form-menu.component.html',\n    styleUrls: ['./form-menu.component.css']\n})\nexport class FormMenuComponent implements OnInit {\n    tools: Array<any>;\n    categories: Array<any>;\n    pageModel: object; \n    grids: Array<any>;\n    bootstrap: Array<{\n        grid: string\n    }>;\n    optionType: number = 1;\n    options: any = {\n        size: 'lg',\n        backdrop : 'static',\n        keyboard : false,\n        centered: true\n    };\n\n    @Output() isNewPage = new EventEmitter();\n\n    constructor(\n        private htmlElementService: HtmlElementService,\n        private modalService: NgbModal\n    ) {}\n\n    ngOnInit() {\n        this.tools = [];\n        this.grids = new BootstrapGridSystemService().getGrid();\n        this.bootstrap = [{\n            grid: [\n                `6 6`,\n                `2 4 4 2`,\n                `4 4 4`,\n                `7 5`\n            ].join(\"\\n\")\n        }];\n        this.tools = this.htmlElementService.getStaticTools();\n        /*this.htmlElementService.getTools().subscribe(result => {\n            if(result.success){\n                this.categories = result.data.categories;\n                this.tools = result.data.tools;\n            }\n        });*/\n        this.pageModel = [{\n            rows: [],\n            name: \"Salt - A tool for Lazy Developer\"\n        }];\n    }\n    \n    createChoices(): void{\n        this.modalService.open(ConfigChoicesComponent, this.options);\n    }\n\n    editChoices(content): void{\n        let m = this.modalService.open(ConfigChoicesComponent, this.options);\n        m.componentInstance.content = content;\n    }\n\n    public newPage(): void {\n        this.isNewPage.emit(true);\n    }\n}\n\n","module.exports = \"\"","module.exports = \"<form  class=\\\"card\\\">\\n    <div *ngFor=\\\"let page of pages; let pageIndex = index;\\\" class=\\\"px-2 py-2\\\">\\n        <span>Page {{ pageIndex + 1 }}</span>\\n        <hr />\\n        <div *ngFor=\\\"let row of page.rows; let rowIndex = index;\\\">\\n            <section *ngFor=\\\"let column of row.columns; let columnIndex = index;\\\">\\n                <div *ngFor=\\\"let d of column.contents; let contentIndex = index;\\\">\\n                    <section *ngIf=\\\"d.html?.category === 'form'\\\" class=\\\"row\\\">\\n                        <div class=\\\"col-md-1\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"form-check\\\">\\n                                    <input type=\\\"checkbox\\\" \\n                                    [checked]=\\\"d.table.isPrimaryKey\\\" \\n                                    [(ngModel)]=\\\"d.table.isPrimaryKey\\\"\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                                    #isPrimaryKey=\\\"ngModel\\\"                                    \\n                                    class=\\\"form-check-input\\\" \\n                                    id=\\\"is-primary-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\">\\n                                    <label class=\\\"form-check-label\\\" for=\\\"is-primary-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\">Primary Key?</label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-append\\\" *ngIf=\\\"d.table.columnName.toLowerCase().indexOf('ind_') != -1 && d.table.columnName\\\">\\n                                    <button (click)=\\\"buscaDominio(d.table.columnName)\\\" class=\\\"btn btn-secondary btn-sm dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                        <i class=\\\"fa fa-search fa-1x\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </button>\\n                                    <div class=\\\"dropdown-menu\\\" [ngStyle]=\\\"{ width: '100%' }\\\">\\n                                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ng-show=\\\"vm.loading\\\">\\n                                            <i class=\\\"fa fa-cog fa-1x fa-spin\\\"></i> Loading...\\n                                        </a>\\n                                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ng-show=\\\"!vm.loading && vm.dominio.error.has\\\">\\n                                            <span class=\\\"text-danger\\\" ng-bind=\\\"vm.dominio.error.msg\\\"></span>\\n                                        </a>\\n                                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" ng-repeat=\\\"(dI, dom) in vm.dominio.data\\\" ng-if=\\\"vm.dominio.data.length > 0\\\">\\n                                            <span ng-bind=\\\"dom.val_dominio_item\\\"></span> - <span ng-bind=\\\"dom.dsc_dominio_item\\\"></span>\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': tableColumnName.invalid }\\\" \\n                                name=\\\"table-column-name-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\"\\n                                [(ngModel)]=\\\"d.table.columnName\\\" \\n                                [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                                #tableColumnName=\\\"ngModel\\\"\\n                                required\\n                                >\\n                                <div *ngIf=\\\"tableColumnName.invalid || tableColumnName.touched\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"tableColumnName.errors?.required\\\">This is required.</div>\\n                                </div> \\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': htmlLabel.invalid }\\\" \\n                            name=\\\"html-label-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\"                                 \\n                            [(ngModel)]=\\\"d.html.label\\\" \\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            #htmlLabel=\\\"ngModel\\\"\\n                            required\\n                            >                            \\n                            <div *ngIf=\\\"htmlLabel.invalid || htmlLabel.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"htmlLabel.errors?.required\\\">This is required.</div>\\n                            </div>   \\n                        </div>\\n                        <div class=\\\"col-md-2\\\" >\\n                            <select class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': htmlTag.invalid }\\\"\\n                            name=\\\"input-type-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\" \\n                            [(ngModel)]=\\\"d.html.tag\\\"\\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            #htmlTag=\\\"ngModel\\\"\\n                            required\\n                            >\\n                                <option value=\\\"\\\">Selecione</option>\\n                                <option value=\\\"{{ tag }}\\\" *ngFor=\\\"let tag of tags\\\">{{ tag }}</option>\\n                            </select>\\n                            <div *ngIf=\\\"htmlTag.invalid || htmlTag.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"htmlTag.errors?.required\\\">This is required.</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <select class=\\\"form-control text-uppercase\\\" [ngClass]=\\\"{ 'is-invalid': tableType.invalid }\\\"\\n                            name=\\\"table-type-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\" \\n                            [(ngModel)]=\\\"d.table.type\\\"\\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            #tableType=\\\"ngModel\\\"\\n                            required\\n                            >\\n                                <option value=\\\"\\\">Selecione</option>\\n                                <option *ngFor=\\\"let db of database; let columnName = index;\\\" [value]=\\\"db.toLowerCase()\\\">{{ db }}</option>\\n                            </select>\\n                            <div *ngIf=\\\"tableType.invalid || tableType.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"tableType.errors?.required\\\">This is required.</div>\\n                            </div>                            \\n                        </div>\\n                        <div class=\\\"col-md-1\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': tableSize.invalid }\\\"\\n                            [(ngModel)]=\\\"d.table.size\\\"\\n                            [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                            pattern=\\\"^[0-9]+(.[0-9])?$\\\"\\n                            name=\\\"table-size-{{ pageIndex + rowIndex + columnIndex + contentIndex }}\\\" \\n                            #tableSize=\\\"ngModel\\\"                            \\n                            >\\n                            <div *ngIf=\\\"tableSize.invalid || tableSize.touched\\\" class=\\\"invalid-feedback\\\">\\n                            </div>                               \\n                        </div>\\n                        <div class=\\\"col-md-1\\\">\\n                            <div class=\\\"row\\\">\\n                                <label [ngClass]=\\\"{'badge-danger': d.table.nullable, 'badge-default' : !d.table.nullable}\\\"\\n                                       class=\\\"badge col-md-12\\\"\\n                                       [ngStyle]=\\\"{ 'cursor': 'pointer' }\\\">\\n                                    nullable? {{ d.table.nullable? 'No' : 'Yes' }}\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.table.nullable\\\" name=\\\"asd3\\\" class=\\\"checkbox\\\" [ngStyle]=\\\"{ display: 'none' }\\\">\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-1\\\">\\n                            <button type=\\\"button\\\" (click)=\\\"column.contents.splice(contentIndex, 1)\\\" class=\\\"btn btn-outline-danger btn-sm btn-block\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n                        </div>\\n                    </section>\\n                </div>\\n            </section>\\n        </div>\\n    </div>\\n</form>\\n\"","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { DatabaseEngine } from '../shared/services/database-engine.service';\nimport { HtmlElementService } from '../shared/services/html-element.service';\n\n@Component({\n\tselector: 'app-form-info',\n\ttemplateUrl: './form-info.component.html',\n\tstyleUrls: ['./form-info.component.css'],\n})\nexport class FormInfoComponent implements OnInit {\n\t@Input() pages;\n\t@Output() pagesChange = new EventEmitter();\n\n\tdatabase: Array<any>;\n\ttags: Array<string>;\n\n\tconstructor(\n\t\tprivate htmlElementService: HtmlElementService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.database = Object.keys(DatabaseEngine.get()).map((item) => {\n\t\t\treturn item.toUpperCase();\n\t\t});\n\t\tthis.tags = this.htmlElementService.getTags();\n    }\n\n    public buscaDominio() {\n        alert(\"implementação\");\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormInfoComponent } from './form-info.component';\nimport { FormsModule } from '@angular/forms';\nimport { SpellCheckerComponent } from '../spell-checker/spell-checker.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule\n\t],\n\texports: [\n\t\tFormInfoComponent\n\t],\n\tdeclarations: [\n\t\tFormInfoComponent,\n\t\tSpellCheckerComponent\n\t]\n})\nexport class FormInfoModule { }\n","module.exports = \"\"","module.exports = \"<div\\n    [attr.data-bootstrap-grid]=\\\"row.grid\\\"\\n    dragula=\\\"columns\\\"\\n\\t[(dragulaModel)]=\\\"row.columns\\\"\\n\\tclass=\\\"row page-{{ pageIndex }}_row-{{ rowIndex }}\\\"\\n\\t[attr.data-current-row-id]=\\\"rowId\\\"\\n>\\n\\t<div *ngFor=\\\"let column of row.columns; let columnIndex = index;\\\"\\n\\t\\tclass=\\\"col-md-{{ colNumber(columnIndex) }}\\\"\\n\\t\\t[attr.data-current-page-index]=\\\"pageIndex\\\"\\n\\t\\t[attr.data-current-row-index]=\\\"rowIndex\\\"\\n\\t\\t[attr.data-current-column-index]=\\\"columnIndex\\\"\\n\\t>\\n\\t\\t<!--b>[{{ pageIndex }}][{{ rowIndex }}][{{ columnIndex }}]</b-->\\n\\t\\t<div class=\\\"option-column\\\">\\n\\t\\t\\t<div [hidden]=\\\"config?.previewMode\\\">\\n\\t\\t\\t\\t<small class=\\\"column-handle\\\" [ngStyle]=\\\"{ 'cursor': 'move' }\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrows-alt\\\"></i> col-md-{{ colNumber(columnIndex) }}\\n\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t<div class=\\\"border-bottom border-danger\\\"></div>\\n\\t\\t\\t</div>\\t\\n\\t\\t\\t<app-form-contents [column]=\\\"column\\\" \\n\\t\\t\\t[pageIndex]=\\\"pageIndex\\\" [rowIndex]=\\\"rowIndex\\\" [columnIndex]=\\\"columnIndex\\\"\\n\\t\\t\\t[pageId]=\\\"pageId\\\" [rowId]=\\\"rowId\\\" [columnId]=\\\"column.id\\\"\\n\\t\\t\\t></app-form-contents>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormConfigService } from './../../services/form-config.service';\n\n@Component({\n\tselector: 'app-form-columns',\n\ttemplateUrl: './form-columns.component.html',\n\tstyleUrls: ['./form-columns.component.css'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormColumnsComponent implements OnInit {\n\t@Input() row;\n\t@Input() pageIndex;\n\t@Input() rowIndex;\n\n\t@Input() pageId;\n\t@Input() rowId;\n\n\tconfig: {\n\t\tpreviewMode: boolean\n\t};\n\n\tconstructor(\n\t\tprivate formConfigService: FormConfigService,\n\t\tprivate cd: ChangeDetectorRef\n\t) { }\n\n\tngOnInit() {\n\t\tthis.formConfigService.getConfig().subscribe(data => { \n\t\t\tthis.config = data; \n\t\t\tthis.cd.markForCheck();\n\t\t});\n\t}\n\n\ttrackByFn(index, item){\n\t\treturn index;\n\t}\n\n\tcolNumber(columnIndex: number) {\n\t\treturn parseInt(this.row.grid.trim().split(' ')[columnIndex]);\n\t}\n}\n","module.exports = \"\"","module.exports = \"<div dragula=\\\"contents\\\"\\n     [(dragulaModel)]=\\\"column.contents\\\"\\n     [ngStyle]=\\\"{ 'min-height': '20px' }\\\"\\n     [attr.data-current-page-id]=\\\"pageId\\\"\\n     [attr.data-current-row-id]=\\\"rowId\\\"\\n     [attr.data-current-column-id]=\\\"columnId\\\"\\n     >\\n    <div *ngFor=\\\"let content of column.contents; let contentIndex = index;\\\" class=\\\"mt-1\\\">\\n        <div class=\\\"row\\\" [hidden]=\\\"config?.previewMode\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"float-left\\\">\\n                    <small class=\\\"content-handle\\\" [ngStyle]=\\\"{ 'cursor': 'move' }\\\">\\n                        <i class=\\\"fa fa-arrows-alt content-handle\\\"></i> move\\n                    </small>\\n                    <span (click)=\\\"sendDataToModal(column.contents, contentIndex)\\\" [ngStyle]=\\\"{ 'cursor': 'pointer' }\\\" class=\\\"badge btn-outline-primary\\\">\\n                        <i class=\\\"fa fa-edit\\\"></i> edit\\n                    </span>\\n                    <span (click)=\\\"copyHtml(content)\\\" [ngStyle]=\\\"{ 'cursor': 'pointer' }\\\" class=\\\"badge btn-outline-primary\\\">\\n                        <i class=\\\"fas fa-copy\\\"></i> copy html\\n                    </span>                    \\n                </div>\\n                <div class=\\\"float-right\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                    <span (click)=\\\"deleteContent(contentIndex)\\\" class=\\\"badge btn-outline-danger col-md-12\\\" style=\\\"cursor: pointer;\\\">\\n                        <i class=\\\"fas fa-window-close\\\"></i>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"content\\\">\\n            <div [hidden]=\\\"config?.previewMode\\\">\\n                <span *ngIf=\\\"content.html.tag\\\" class=\\\"badge badge-primary\\\">{{ content.html.tag }}</span>\\n                <span *ngIf=\\\"content.table?.nullable && content.html.category === 'form'\\\" class=\\\"badge badge-success\\\">required</span>\\n                <span *ngIf=\\\"!content.table?.nullable && content.html.category === 'form'\\\" class=\\\"badge badge-danger\\\">not required</span>\\n            </div>\\n            <app-render-content [content]=\\\"content\\\"></app-render-content>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, Input, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { FormConfigService } from './../../services/form-config.service';\nimport { RenderHtmlService } from '../../services/render-html.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormConfigComponent } from './../../form-builder/form-config/form-config.component';\nimport { ContentService } from '../../shared/services/content.service';\n\n\n@Component({\n    selector: 'app-form-contents',\n    templateUrl: './form-contents.component.html',\n    styleUrls: ['./form-contents.component.css'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormContentsComponent implements OnInit {\n    showOptions: boolean;\n    config: {\n        previewMode: boolean\n    };\n    options: any = {\n        size: 'lg',\n        backdrop : 'static',\n        keyboard : false,\n        centered: true\n    };\n\n    @Input() column;\n\t@Input() pageIndex;\n    @Input() rowIndex;\n    @Input() columnIndex;\n\n\t@Input() pageId;\n    @Input() rowId;\n    @Input() columnId;\n\n\n    constructor(\n        private formConfigService: FormConfigService,\n        private renderHtmlService: RenderHtmlService,\n        private modalService: NgbModal,\n        private cd: ChangeDetectorRef,\n        private contentService: ContentService\n    ) {}\n\n    ngOnInit() {\n        this.showOptions = false;\n        this.formConfigService.getConfig().subscribe(data => { \n\t\t\tthis.config = data; \n\t\t\tthis.cd.markForCheck();\n\t\t});\n    }\n\n    trackByFn(index, item){\n        return index;\n    }\n    \n    copyHtml(content): void{\n        this.renderHtmlService.setParams(content);\n        let code = this.renderHtmlService.get().html;\n        this.copyToClipboard(code);\n    }\n\n    copyToClipboard(text) {\n        if ((<any>window).clipboardData && (<any>window).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            return (<any>window).clipboardData.setData(\"Text\", text);\n        } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\n            var textarea = document.createElement(\"textarea\");\n            textarea.textContent = text;\n            textarea.style.position = \"fixed\";  // Prevent scrolling to bottom of page in MS Edge.\n            document.body.appendChild(textarea);\n            textarea.select();\n            try {\n                return document.execCommand(\"copy\");  // Security exception may be thrown by some browsers.\n            } catch (ex) {\n                console.warn(\"Copy to clipboard failed.\", ex);\n                return false;\n            } finally {\n                document.body.removeChild(textarea);\n            }\n        }\n    }\n\n    sendDataToModal(contents, index): void{\n        let m = this.modalService.open(FormConfigComponent, this.options);\n        m.componentInstance.content_id = contents[index].id;\n        m.componentInstance.content = contents[index];\n        m.componentInstance.emitData.subscribe($e => {\n            contents[index] = $e;\n            this.cd.markForCheck();\n            /*this.contentService.updateContent($e).subscribe(result => {\n                console.log(result);\n                if(result.success){\n                    contents[index] = result.data;\n                    this.cd.markForCheck();\n                }\n            });*/\n        });\n    }\n\n    deleteContent(contentIndex): void {\n        /*this.contentService.deleteContent(content.id)\n        .subscribe(result =>{\n            if(result.success){\n                this.column.contents.forEach((cV, index) => {\n                    if(cV.id == content.id){\n                        this.column.contents.splice(index, 1);\n                    }\n                });\n                this.cd.markForCheck();\n            }\n        });*/\n        this.column.contents.splice(contentIndex, 1);\n    }\n}\n","module.exports = \"\"","module.exports = \"<!--pre>{{ pages | json }}</pre-->\\n<div \\n    dragula=\\\"pages\\\"\\n    [(dragulaModel)]=\\\"pages\\\"\\n>\\n    <div *ngFor=\\\"let page of pages; let pageIndex = index; \\\" class=\\\"mb-1\\\">\\n        <div class=\\\"px-3 py-3\\\" [ngClass]=\\\"{ 'card bg-white text-dark': !config?.previewMode }\\\">\\n            <div class=\\\"row\\\" [hidden]=\\\"config?.previewMode\\\">\\n                <div class=\\\"col-md-12 page-handle\\\" [ngStyle]=\\\"{ cursor: 'move' }\\\">\\n                    <div class=\\\"float-left\\\">\\n                        <span class=\\\"page-handle\\\">{{ page.name }}</span>\\n                    </div>\\n                    <div class=\\\"float-right\\\">\\n                        <small (click)=\\\"deletePage(pageIndex)\\\" class=\\\"badge btn-outline-danger\\\" [ngStyle]=\\\"{ cursor: 'pointer' }\\\">\\n                            <i class=\\\"fas fa-window-close\\\"></i>\\n                            <strong> page {{ pageIndex + 1 }}</strong>\\n                        </small>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"border-bottom border-secondary\\\" [hidden]=\\\"config?.previewMode\\\"></div>\\n            <app-form-rows [(page)]=\\\"page\\\" [pageIndex]=\\\"pageIndex\\\" [pageId]=\\\"page.id\\\"></app-form-rows>\\n        </div>\\n    </div><!--/.ng-repeat-->\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormConfigService } from './../services/form-config.service';\nimport { DragulaService } from 'ng2-dragula';\nimport { Subscription } from 'rxjs';\nimport { BootstrapForm } from '../services/render-html.service';\nimport { PageService } from '../shared/services/page.service';\nimport { ContentService } from '../shared/services/content.service';\nimport { RowService } from '../shared/services/row.service';\nimport { ColumnService } from '../shared/services/column.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\n\n@Component({\n    selector: 'app-form-pages',\n    templateUrl: './form-pages.component.html',\n    styleUrls: ['./form-pages.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormPagesComponent implements OnInit {\n    @Input() pages;\n    @Output() pagesChange = new EventEmitter();\n    config: {\n        previewMode: boolean\n    };\n    project_id: number;\n    subs = new Subscription();\n    optionType: number = -1;\n    objOptionType: {\n        [key: number]: string \n    } = {\n        1: 'radio',\n        2: 'checkbox',\n        3: 'select'\n    };    \n    options: Array<string> = [];\n    private dropModelPageUpdated = false;\n\n    constructor(\n        private formConfigService: FormConfigService,\n        private dragulaService: DragulaService,\n        private pageService: PageService,\n        private cd: ChangeDetectorRef,\n        private contentService: ContentService,\n        private rowService: RowService,\n        private columnService: ColumnService,\n        private route: ActivatedRoute,\n        private ngxLoader: NgxUiLoaderService\n    ) {\n        this.options = Object.values(this.objOptionType).map(item => {\n            return item;\n        }, []);\n        this.route.params.subscribe(result => {\n            this.project_id = result.projectId;\n        });\n        \n        dragulaService.createGroup('pages', {\n            copy: (el, source) => {\n                return source.className === 'menu-page-sortable';\n            },\n            copyItem: (el) => {\n                return el;\n                //console.log(el);\n            },\n            accepts: (el, target, source, sibling) => {\n                // To avoid dragging from right to left container\n                return target.className !== 'menu-page-sortable';\n            },\n            moves: (el, container, handle) => {\n                if (handle.classList) {\n                    return handle.classList.contains('page-handle');\n                }\n                return false;\n            }\n        });\n\n        dragulaService.createGroup('columns', {\n            accepts: function(el, target, source, sibling) {\n                let currRowIndex    = el.getAttribute('data-current-row-index');                \n                let currPageIndex   = el.getAttribute('data-current-page-index');\n                let currentClass = 'page-' + currPageIndex + '_row-' + currRowIndex;\n                return target.classList.contains(currentClass);\n            },            \n            moves: (el, container, handle) => {\n                //let currColumnIndex = handle.getAttribute('data-current-column-index');\n                if (handle.classList) {\n                    return handle.classList.contains('column-handle');\n                }\n                return false;\n            }\n        });\n\n        this.subs.add(dragulaService.dropModel(\"columns\")\n            .subscribe(({ name, el, target, source, item, sourceModel, targetModel, sourceIndex, targetIndex }) => {\n                let currRowIndex    = el.getAttribute('data-current-row-index');\n                let pageIndex       = el.getAttribute('data-current-page-index');\n                let currRowId       = target.getAttribute('data-current-row-id');\n                if(pageIndex != null && currRowIndex != null){\n                    let gridArr = this.pages[pageIndex].rows[currRowIndex].grid.split(\" \");\n                    let aux     = gridArr[sourceIndex];\n                    \n                    gridArr.splice(sourceIndex, 1);\n                    gridArr.splice(targetIndex, 0, aux);\n                    let newGrid = gridArr.join(\" \").trim();\n                    this.pages[pageIndex].rows[currRowIndex].grid = newGrid;\n                    const data = {\n                        project_id: this.project_id,\n                        page: {\n                            currRowId: parseInt(currRowId)\n                        },\n                        newGrid: newGrid,\n                        columnPos: targetModel.map(item => {\n                            return item.id;\n                        })\n                    }\n                    /*this.columnService.updateColumn(data.page.currRowId, data)\n                    .subscribe(result => {\n                        if(result.success){\n                            this.loadFormBuilder();\n                            this.dropModelPageUpdated = true;\n                        }\n                    });*/\n                }   \n            })\n        );\n\n        dragulaService.createGroup('rowSortable', {\n            copy: (el, source) => {\n                return source.className === 'menu-row-sortable';\n            },\n            copyItem: (el) => {\n                return JSON.parse(JSON.stringify(el));\n            },\n            accepts: function(el, target, source, sibling) {\n                // To avoid draggin from right to left container\n                if(target.className !== 'menu-row-sortable'){\n                    return true;\n                }\n                return false;\n            },\n            moves: (el, container, handle) => {\n                if (handle.classList) {\n                    return handle.classList.contains('row-handle');\n                }\n                return false;\n            }\n        });\n\n        this.subs.add(dragulaService.dropModel(\"rowSortable\")\n            .subscribe(({ name, el, target, source, item, sourceModel, targetModel, sourceIndex, targetIndex }) => {\n                const targetPageId  = target.getAttribute('data-current-page-id');\n                const currRowId     = el.getAttribute('data-current-row-id');\n\n                if(typeof item.grid != 'undefined' && typeof item.columns == 'undefined'){//gambiarra, mas funciona\n                    let rows = [];\n                    let lines = item.grid.trim().split(\"\\n\");\n                    delete item.grid;\n                    for(let i = 0; i < lines.length; i++){\n                        let line = lines[i].replace(/\\s+/g, ' ').trim();\n                        if(line != ''){\n                            let arrNumbers = line.split(' ');\n                            if (arrNumbers.length > 0) {\n                                rows.push({\n                                    grid: line,\n                                    columns: []\n                                });\n                                for (let j = 0; j < arrNumbers.length; j++) {\n                                    rows[rows.length - 1].columns.push({\n                                        contents: []\n                                    });\n                                }\n                            }\n                        }\n                    }\n\n                    for(var i = 0 ; i < targetModel.length; i++){\n                        if(Object.keys(targetModel[i]).length <= 0){\n                            targetModel.splice(i, 1);\n                        }\n                    }\n                    const numSeparators = rows.length;\n                    for (let i = 0; i < numSeparators; i++) {\n                        targetModel.splice(targetIndex + (i), 0, rows[i]);\n                    }\n                    /* API\n                    const data = {\n                        project_id: this.project_id,\n                        page: {\n                            targetPageId: parseInt(targetPageId)\n                        },\n                        rowsPos: targetModel.map(item => {\n                            return item.id;\n                        }),\n                        rowTargetIndex: targetIndex,\n                        rows: rows\n                    };                    \n\n                    if(rows.length > 0){\n                        this.rowService.storeRow(data)\n                        .subscribe(result => {\n                            if(result.success){\n                                this.loadFormBuilder();\n                                this.dropModelPageUpdated = true;\n                            }\n                        });\n                    }\n                } else {\n                    const data = {\n                        project_id: this.project_id,\n                        page: {\n                            currRowId: parseInt(currRowId),\n                            targetPageId: parseInt(targetPageId)\n                        },\n                        rowPos: targetModel.map(item => {\n                            return item.id;\n                        })\n                    };\n                    this.rowService.updateRow(data.page.targetPageId, data)\n                    .subscribe(result => {\n                        if(result.success){\n                            this.loadFormBuilder();\n                            this.dropModelPageUpdated = true;\n                        }\n                    });*/\n                }\n                return item;                    \n            })\n        );\n        \n        dragulaService.createGroup('contents', {\n            copy: (el, source) => {\n                return source.classList.contains('menu-content-sortable');\n            },\n            copyItem: (el) => {\n                console.log(el);\n                return JSON.parse(JSON.stringify(el));\n            },\n            accepts: (el, target, source, sibling) => {\n                // To avoid dragging from right to left container\n                return !target.classList.contains('menu-content-sortable');\n            },\n            moves: (el, container, handle) => {\n                if (handle.classList) {\n                    return handle.classList.contains('content-handle');\n                }\n                return false;\n            }\n        });\n\n        this.subs.add(dragulaService.cloned(\"contents\")\n            .subscribe(({ name, clone, original, cloneType }) => {\n                if (original.classList.contains('menu-content-sortable')) {\n                    let currentDataAttr = JSON.parse(original.getAttribute('data-content'));\n                    if (original.classList.contains('option-type-sortable')) {\n                        let tag = currentDataAttr.html.tag;\n                        if(this.options.includes(tag)){\n                            let optionType = clone.getAttribute('data-option-type');\n                            this.optionType = parseInt(optionType);\n                            currentDataAttr['html']['tag'] = this.objOptionType[this.optionType];\n                        }\n                    }\n                    let r = new BootstrapForm(currentDataAttr);\n                    //r.setParams(currentDataAttr);\n                    clone.classList.remove('badge', 'bg-dark', 'col-md-6', 'bg-primary', 'text-white');\n                    clone.innerHTML = '';\n                    clone.insertAdjacentHTML('afterbegin',\n                        '<div class=\"px-1 py-1 bg-white text-dark\" style=\"min-width: 300px;\">' + r.get() + '</div>'\n                    );\n                }\n            })\n        );\n        \n        this.subs.add(dragulaService.dropModel(\"contents\")\n            .subscribe(({ name, el, target, source, item, sourceModel, targetModel, sourceIndex, targetIndex }) => {\n                item['table'] = {};\n                if (item.table && item.html) {\n                    const currRowId     = target.getAttribute('data-current-row-id');                \n                    const currPageId    = target.getAttribute('data-current-page-id');\n                    const currcolumnId  = target.getAttribute('data-current-column-id');      \n\n                    if (\n                        typeof item.table.columnName === 'undefined' && item.html.category === 'form'\n                    ) {\n                        let tag = item.html.tag;\n                        if(this.options.includes(tag)){\n                            item.html.tag = this.objOptionType[this.optionType];\n                        }\n                        item.table.columnName = 'name__' + new Date().getUTCMilliseconds();\n                        item.table.size = '';\n                    }\n                    const data = {\n                        project_id: this.project_id,\n                        page: {\n                            currPageId: currPageId,\n                            currRowId: currRowId,\n                            currColumnId: currcolumnId    \n                        },\n                        contentPos: targetModel.map(item => {\n                            return item.id;\n                        }),\n                        html: item.html,\n                        table: item.table\n                    }; \n                    console.log(item);\n                    if(typeof item.id != 'undefined'){\n                        data['id'] = item.id;\n                    } \n                    /*this.contentService.storeContent(data)\n                    .subscribe(result => {\n                        if(result.success){\n                            this.loadFormBuilder();\n                            this.dropModelPageUpdated = true;\n                        }\n                    });*/\n                }\n            })\n        );\n    }\n\n    ngOnInit() {\n        this.pages = this.pages ? this.pages.length > 0 ? this.pages : [] : [];\n        this.formConfigService.getConfig()\n        .subscribe(data => {\n            this.config = {...data};\n        });\n    }\n    \n\n    ngAfterViewInit() {\n        this.subs.add(this.dragulaService.dropModel(\"pages\")\n            .subscribe(({ name, el, target, source, item, sourceModel, targetModel, sourceIndex, targetIndex }) => {\n                const data = {\n                    project_id: this.project_id,\n                    pagesPos: targetModel.map(item => {\n                        return item.id;\n                    }),\n                    pageTargetIndex: targetIndex,\n                };    \n\n                this.dropModelPageUpdated = true;\n                /*this.pageService.updatePagesPosition(data.project_id, data)\n                .subscribe(result => {\n                    console.log(result);\n                });*/\n            })\n        );\n    }\n\n    ngDoCheck() {    \n        if (this.dropModelPageUpdated) { // this excutes if this.dropModelUpdated is true only\n            this.pagesChange.emit(this.pages);\n        }\n    }\n\n    ngOnDestroy() {\n        this.dragulaService.destroy('pages');\n        this.dragulaService.destroy('contents');\n        this.dragulaService.destroy('columns');\n        this.dragulaService.destroy('rowSortable');\n        this.dragulaService.destroy('sortableElements');\n        this.subs.unsubscribe();\n    }\n\n    public deletePage(pageIndex: number) {\n        /*this.pageService.deletePage(page.id).subscribe(result => {\n            if(result.success){\n                this.pages.forEach((cV, index) => {\n                    if(cV.id == page.id){\n                        this.pages.splice(index, 1);\n                    }\n                });\n                this.cd.markForCheck();\n            }\n        });*/\n        //static\n        this.pages.splice(pageIndex, 1);\n    }\n\n    loadFormBuilder(){\n        this.ngxLoader.start();\n        this.pageService.getPageByProjectId(this.project_id)\n        .subscribe(result => { \n            if(result.success){\n                this.pages = result.data;\n            }\n            this.ngxLoader.stop();\n        });\n    }    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragulaModule } from 'ng2-dragula';\n\nimport { FormPagesComponent } from './form-pages.component';\nimport { FormRowsComponent } from './form-rows/form-rows.component';\nimport { FormColumnsComponent } from './form-columns/form-columns.component';\nimport { FormContentsComponent } from './form-contents/form-contents.component';\nimport { RenderContentModule } from './render-content/render-content.module';\nimport { FormConfigModule } from '../form-builder/form-config/form-config.module';\nimport { FormConfigComponent } from '../form-builder/form-config/form-config.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tDragulaModule.forRoot(),\n\t\tRenderContentModule,\n\t\tFormConfigModule\n\t],\n\texports: [\n\t\tFormPagesComponent,\n\t\tFormRowsComponent,\n\t\tFormColumnsComponent,\n\t\tFormContentsComponent\n\t],\n\tdeclarations: [\n\t\tFormPagesComponent,\n\t\tFormRowsComponent,\n\t\tFormColumnsComponent,\n\t\tFormContentsComponent\n\t],\n    entryComponents: [\n        FormConfigComponent\n    ],\n})\nexport class FormPagesModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"px-3 py-3 bg-danger text-white\\\" *ngIf=\\\"page.rows.length <= 0\\\">\\n\\tPlace Bootstrap grid columns here\\n</div>\\n<div\\n\\tdragula=\\\"rowSortable\\\"\\n\\t[(dragulaModel)]=\\\"page.rows\\\"\\n\\t[ngStyle]=\\\"{ 'min-height': '20px' }\\\"\\n\\t[attr.data-current-page-id]=\\\"pageId\\\"\\n\\tclass=\\\"row-sortable\\\"\\n>\\n<div *ngFor=\\\"let row of page.rows; let rowIndex = index;\\\"\\n\\t[attr.data-current-row-id]=\\\"row.id\\\"\\n>\\n\\t<div class=\\\"row\\\" [hidden]=\\\"config?.previewMode\\\">\\n\\t\\t<div class=\\\"col-md-12 row-handle\\\" [ngStyle]=\\\"{ cursor: 'move' }\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t<small class=\\\"row-handle\\\">row {{ rowIndex + 1 }}</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"float-right\\\">\\n\\t\\t\\t\\t<small (click)=\\\"deleteRow(rowIndex)\\\" class=\\\"badge btn-outline-danger\\\" [ngStyle]=\\\"{ cursor: 'pointer' }\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-window-close\\\"></i> row {{ rowIndex + 1 }}\\n\\t\\t\\t\\t</small>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"border-bottom border-secondary\\\" [hidden]=\\\"config?.previewMode\\\"></div>\\n\\t\\t<app-form-columns [row]=\\\"row\\\" [pageIndex]=\\\"pageIndex\\\" [rowIndex]=\\\"rowIndex\\\" [pageId]=\\\"pageId\\\" [rowId]=\\\"row.id\\\"></app-form-columns>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { FormConfigService } from './../../services/form-config.service';\nimport { RowService } from '../../shared/services/row.service';\n\n@Component({\n    selector: 'app-form-rows',\n    templateUrl: './form-rows.component.html',\n    styleUrls: ['./form-rows.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormRowsComponent implements OnInit {\n    @Input() page;\n    //@Output() pageChange = new EventEmitter();\n    @Input() pageIndex;\n    @Input() pageId;\n\n    config: {\n        previewMode: boolean;\n    };\n    \n\tconstructor(\n\t\tprivate formConfigService: FormConfigService,\n        private cd: ChangeDetectorRef,\n        private rowService: RowService\n\t) { }\n\n    ngOnInit() {\n        this.formConfigService.getConfig().subscribe(data => { \n\t\t\tthis.config = data; \n\t\t\tthis.cd.markForCheck();\n\t\t});\n    }\n    \n    deleteRow(rowIndex: any){\n        /*this.rowService.deleteRow(row.id).subscribe(result => {\n            if(result['success']){\n                this.page.rows.forEach((cV, index) => {\n                    if(cV.id == row.id){\n                        this.page.rows.splice(index, 1);\n                    }\n                });\n                this.cd.markForCheck();\n            }\n        });*/\n        //static remove\n        this.page.rows.splice(rowIndex, 1);\n        this.cd.markForCheck();\n    }\n    trackByFn(index, item) {\n        return index; \n    }\n}\n","module.exports = \"\"","module.exports = \"<span [innerHtml]=\\\"render()\\\"></span>\\r\\n\"","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { RenderHtmlService } from './../../services/render-html.service';\n\n@Component({\n    selector: 'app-render-content',\n    templateUrl: './render-content.component.html',\n    styleUrls: ['./render-content.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RenderContentComponent implements OnInit {\n    @Input() content;\n    mustRender: boolean = true;\n\n    constructor(\n        private sanitizer: DomSanitizer,\n        private renderHtml: RenderHtmlService\n    ) {\n        this.content = {\n            html: {},\n            table: {}\n        }\n    }\n\n    ngOnInit() {\n    }\n\n    render() {\n        if (typeof this.content !== 'undefined') {\n            console.log('render');\n            this.renderHtml.setParams(this.content);\n            let html = this.renderHtml.get().html;\n            //console.log(html);\n            return this.sanitizer.bypassSecurityTrustHtml(html);\n        }\n        return 'undefined';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RenderContentComponent } from './render-content.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\texports: [\n\t\tRenderContentComponent\n\t],\n\tdeclarations: [RenderContentComponent]\n})\nexport class RenderContentModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n{\n\tpath: 'home', component: HomeComponent\n}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild(routes)\n\t],\n\texports: [\n\t\tRouterModule\n\t],\n\tdeclarations: []\n})\nexport class HomeRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <app-form-pages [pages]=\\\"pages\\\"></app-form-pages>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormConfigService } from './../services/form-config.service';\nimport { HomeService } from './../shared/services/home.service';\nimport { Page } from './../core/model';\nimport { PageService } from '../shared/services/page.service';\n\n@Component({\nselector: 'app-home',\ntemplateUrl: './home.component.html',\nstyleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\tpages: Array<Page>;\n\tconfig: {\n\t\tpreviewMode: boolean\n\t}\n\n\tconstructor(\n\t\tprivate formConfigService: FormConfigService,\n\t\tprivate homeService: HomeService,\n\t\tprivate pageService: PageService\n\t\t) {\n\t\tthis.pages = [];\n\t}\n\n\tngOnInit() {\n\t\tthis.config = {\n\t\t\tpreviewMode: true\n\t\t};\n\t\tthis.formConfigService.setConfig(this.config);\n\t\tthis.pageService.getPageByProjectId(14)\n\t\t.subscribe(result => { \n\t\t\tconsole.log(result);\n\t\t\tif(result.success){\n\t\t\t\tthis.pages = result.data;\n\t\t\t}\n\t\t});\t\t\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { FormPagesModule } from '../form-pages/form-pages.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HomeRoutingModule,\n    FormPagesModule,\n    ReactiveFormsModule\n  ],\n  exports: [HomeComponent],\n  declarations: [\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n","module.exports = \"* {\\n    box-sizing: border-box;\\n  }\\n  \\n  body {\\n    padding: 0;\\n    margin: 0;\\n  }\\n  \\n  #notfound {\\n    position: relative;\\n    height: 100vh;\\n  }\\n  \\n  #notfound .notfound {\\n    position: absolute;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n  }\\n  \\n  .notfound {\\n    max-width: 520px;\\n    width: 100%;\\n    line-height: 1.4;\\n    text-align: center;\\n  }\\n  \\n  .notfound .notfound-404 {\\n    position: relative;\\n    height: 200px;\\n    margin: 0px auto 20px;\\n    z-index: -1;\\n  }\\n  \\n  .notfound .notfound-404 h1 {\\n    font-family: 'Montserrat', sans-serif;\\n    font-size: 236px;\\n    font-weight: 200;\\n    margin: 0px;\\n    color: #211b19;\\n    text-transform: uppercase;\\n    position: absolute;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n  }\\n  \\n  .notfound .notfound-404 h2 {\\n    font-family: 'Montserrat', sans-serif;\\n    font-size: 28px;\\n    font-weight: 400;\\n    text-transform: uppercase;\\n    color: #211b19;\\n    background: #fff;\\n    padding: 10px 5px;\\n    margin: auto;\\n    display: inline-block;\\n    position: absolute;\\n    bottom: 0px;\\n    left: 0;\\n    right: 0;\\n  }\\n  \\n  .notfound a {\\n    font-family: 'Montserrat', sans-serif;\\n    display: inline-block;\\n    font-weight: 700;\\n    text-decoration: none;\\n    color: #fff;\\n    text-transform: uppercase;\\n    padding: 13px 23px;\\n    background: #ff6300;\\n    font-size: 18px;\\n    transition: 0.2s all;\\n  }\\n  \\n  .notfound a:hover {\\n    color: #ff6300;\\n    background: #211b19;\\n  }\\n  \\n  @media only screen and (max-width: 767px) {\\n    .notfound .notfound-404 h1 {\\n      font-size: 148px;\\n    }\\n  }\\n  \\n  @media only screen and (max-width: 480px) {\\n    .notfound .notfound-404 {\\n      height: 148px;\\n      margin: 0px auto 10px;\\n    }\\n    .notfound .notfound-404 h1 {\\n      font-size: 86px;\\n    }\\n    .notfound .notfound-404 h2 {\\n      font-size: 16px;\\n    }\\n    .notfound a {\\n      padding: 7px 15px;\\n      font-size: 14px;\\n    }\\n  }\"","module.exports = \"<div id=\\\"notfound\\\">\\n\\t\\t<div class=\\\"notfound\\\">\\n\\t\\t\\t<div class=\\\"notfound-404\\\">\\n\\t\\t\\t\\t<h1>Oops!</h1>\\n\\t\\t\\t\\t<h2>404 - The Page can't be found</h2>\\n\\t\\t\\t</div>\\n\\t\\t\\t<a href=\\\"#\\\">Go TO Homepage</a>\\n\\t\\t</div>\\n\\t</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"projectForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label for=\\\"project_name\\\">Project Name</label>\\n\\t\\t<input type=\\\"text\\\" id=\\\"project_name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\t[ngClass]=\\\"{ 'is-invalid': f.name.invalid }\\\" >\\n\\t</div>\\n\\t<div *ngIf=\\\"f.name.invalid || f.name.touched\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t<div *ngIf=\\\"f.name.errors?.required\\\">You did not enter a field</div>\\n\\t\\t<div *ngIf=\\\"f.name.errors?.minlength\\\">Your field is too short</div>\\n\\t</div>\\t\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../../shared/services/project.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n\tselector: 'app-project-form',\n\ttemplateUrl: './project-form.component.html',\n\tstyleUrls: ['./project-form.component.css']\n})\nexport class ProjectFormComponent implements OnInit {\n  \tprojectForm: FormGroup;\n  \n\tconstructor(\n\t\tprivate projectService: ProjectService,\n\t\tprivate fb: FormBuilder,\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute\n\t) { }\n\n\tngOnInit() {\n\t\tthis.projectForm = this.fb.group({\n\t\t\t'id': [],\n\t\t\t'name': ['', [\n\t\t\t\tValidators.required\n\t\t\t]]\n\t\t});\t\t\n\t\tthis.route.params.subscribe(result => {\n\t\t\tlet id = result.id;\n\t\t\tif(!id){\n\t\t\t\t//this.router.navigate(['projects']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.projectService.getProjectById(id)\n\t\t\t.subscribe(res => {\n\t\t\t\tif(res.success){\n\t\t\t\t\tthis.projectForm.patchValue({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tname: res.data.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tonSubmit(){\n\t\tlet formValue = this.projectForm.value;\n\t\tconst p = this.projectForm.value;\n\n\t\tif(formValue.id){\n\t\t\tthis.projectService.updateProject(formValue.id, p)\n\t\t\t.subscribe(result => {\n\t\t\t\tif(result.success){\n\t\t\t\t\tthis.router.navigate(['projects', formValue.id, 'edit']);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.projectService.storeProject(p)\n\t\t\t.subscribe(result => {\n\t\t\t\tif(result.success){\n\t\t\t\t\tthis.router.navigate(['projects']);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget f(){\n\t\treturn this.projectForm.controls;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './projects.component';\nimport { ProjectFormComponent } from './project-form/project-form.component';\n\nconst routes: Routes = [\n\t{ path: 'projects', component: ProjectsComponent },\n\t{ path: 'projects/create', component: ProjectFormComponent },\n\t{ path: 'projects/:id', component: ProjectsComponent },\n\t{ path: 'projects/:id/edit', component: ProjectFormComponent },\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class ProjectsRoutingModule { }\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-stripped table-condensed table-bordered\\\">\\n\\t<thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"col\\\">id</th>\\n\\t\\t\\t<th scope=\\\"col\\\">Name</th>\\n\\t\\t\\t<th scope=\\\"col\\\">Data de Criação</th>\\n\\t\\t\\t<th scope=\\\"col\\\">Última Atualização</th>\\n\\t\\t\\t<th scope=\\\"col\\\">\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/projects', 'create']\\\" class=\\\"btn btn-outline-primary btn-sm\\\">Create</a>\\n\\t\\t\\t</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let project of projects\\\">\\n\\t\\t\\t<td>{{ project.id }}</td>\\n\\t\\t\\t<td>{{ project.name }}</td>\\n\\t\\t\\t<td>{{ project.created_at | date: 'dd/MM/yyyy' }}</td>\\n\\t\\t\\t<td>{{ project.updated_at | date: 'dd/MM/yyyy' }}</td>\\n\\t\\t\\t<td>\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/form-builder', project.id, 'edit']\\\" class=\\\"btn btn-outline-dark btn-sm\\\">Form Builder</a>\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/projects', project.id, 'edit']\\\" class=\\\"btn btn-outline-dark btn-sm\\\">Edit</a>\\n\\t\\t\\t\\t<button (click)=\\\"askToDelete(project)\\\" class=\\\"btn btn-outline-danger btn-sm\\\">Delete</button>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\t\\t\\n<app-modal [message]=\\\"message\\\" [isOpen]=\\\"showModal\\\" (handleNo)=\\\"closeModal()\\\" (handleYes)=\\\"deleteProject()\\\"></app-modal>\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../shared/services/project.service';\nimport { Project } from '../core/model';\n\n@Component({\n\tselector: 'app-project',\n\ttemplateUrl: './projects.component.html',\n\tstyleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\tprojects: Array<Project>;\n\tprojectToDelete: Project;\n\tmessage: string = '?';\n\tshowModal: boolean = false;\n\n\tconstructor(\n\t\tprivate projectService: ProjectService,\n\t) { }\n\n\tngOnInit() {\n\t\tthis.projectService.getProjects()\n\t\t.subscribe(result => {\n\t\t\tconsole.log(result);\n\t\t\tif(result.success){\n\t\t\t\tthis.projects = result.data;\n\t\t\t}\n\t\t});\n\t}\n\n\taskToDelete(project: Project){\n\t\tthis.showModal = true;\n\t\tthis.projectToDelete = project;\n\t\tif(this.projectToDelete.name){\n\t\t\tthis.message = `Would you like to delete ${this.projectToDelete.name}?`;\n\t\t}\n\t}\n\t\n\tcloseModal() {\n\t\tthis.showModal = false;\n\t}\n\n\tdeleteProject(){\n\t\tif(this.projectToDelete){\n\t\t\tconst id = this.projectToDelete.id;\n\t\t\tthis.projectService.deleteProject(id)\n\t\t\t.subscribe(result => {\n\t\t\t\tif(result.success){\n\t\t\t\t\tthis.projects = this.projects.filter(item => {\n\t\t\t\t\t\treturn item.id != id;\n\t\t\t\t\t});\n\t\t\t\t\tthis.projectToDelete = null;\n\t\t\t\t\tthis.closeModal();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProjectsComponent } from './projects.component';\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { ProjectFormComponent } from './project-form/project-form.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProjectsRoutingModule,\n    SharedModule\n  ],\n  exports: [ProjectsComponent],\n  declarations: [ProjectsComponent, ProjectFormComponent]\n})\nexport class ProjectsModule { }\n","import { Injectable } from '@angular/core';\nimport { Page } from \"./../core/model\";\n\n@Injectable()\nexport class BootstrapGridSystemService {\n    _data: any[];\n    _grid: string;\n    _page: Page;\n\n    constructor(data?: any[], grid: string = '4 4 4') {\n        this._data = data;\n        this._grid = grid;\n    }\n  \n    getGrid() {\n        return [{\n          grid: '6 6',\n          columns: []\n        },{\n            grid: '4 4 4',\n            columns: []\n        }, {\n            grid: '3 3 3 3',\n            columns: []\n        }, {\n            grid: '2 2 4 2 2',\n            columns: []\n        }, {\n            grid: '12',\n            columns: []\n        }];\n    }\n    convert() {\n        let groups = [];\n        let grid = this._grid.replace(/ +/g, ' ').trim();\n        let arrGrid = grid.split(' ');\n\n        let chunkSize = arrGrid.length;\n        let page = {\n            rows: [],\n            name: 'Page 1'\n        };\n\n        for (let i = 0; i < this._data.length; i += chunkSize) {\n            groups.push(this._data.slice(i, i + chunkSize));\n        }\n        let count = -1;\n        this._page = groups.reduce(function (acc, group, index) {\n            page.rows.push({\n                grid: grid,\n                columns: []\n            });\n            group.map(function (data, i) {\n                count++;\n                return page.rows[index].columns.push({\n                    contents: [data]\n                });\n            }, 0);\n            return page;\n        }, 0);\n\n        let lastRow = this._page.rows.length;\n        let columns = this._page.rows[lastRow - 1].columns;\n        if (columns.length < chunkSize) {\n            for (let k = columns.length; k < chunkSize; k++) {\n                this._page.rows[lastRow - 1].columns.push({\n                    contents: []\n                });\n            }\n        }\n    }\n    getPage() {\n        return this._page;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DatabaseEngine } from '../shared/services/database-engine.service';\nimport { Content, Html, Table } from \"./../core/model\";\n\n@Injectable()\nexport class CreateTableToJsonService {\n    _isTextareaWhenSizeEquals: number = 1000;\n    _wordIndex: number = 2;\n    _string: string;\n    _data: Array<Content>;\n    _errors: Array<string>;\n    _dataBase: {\n        [key: string]: string\n    };\n    _customLabel: {\n        [key: string]: string\n    };\n    html: Html;\n    table: Table;\n    tableName: string;\n    allowedDataTypes: Array<string> = ['null', 'not null', 'primary key', 'unique'];\n    regex: {\n        [key:string]: string\n    } = {\n        createTableSyntax: '',\n        createTable: `\\\\s*create\\\\s+table(?:\\\\s+if\\\\s+not\\\\s+exists)?\\\\s+(\\\\w+)\\\\s*`,\n        onlyNumeric: `(([0-9]+(\\\\,[0-9]+)?)(\\\\.[0-9]+)?)`,\n        valueBtwParentheses: `\\\\(([^)]*)\\\\)`,\n        stringRestriction: `^[\\\\s\\\\w+\\\\_\\\\-\\\\,\\\\.()]*$`,\n    };\n\n\n    constructor(DB: string) {\n        this.html = new Html();\n        this.table = new Table();\n        this._data = [];\n        this._errors = [];\n        this._dataBase = DatabaseEngine.get(DB);\n        this._customLabel = this.getCustomLabelName();\n        this.regex.createTableSyntax = this.createTableSyntax();\n    }\n\n    /*CREATE TABLE test_table (\n        -- define columns (name / type / default value / column constraint\n        id             DECIMAL                           PRIMARY KEY,\n        part_number    CHAR(10)          DEFAULT 'n/a'   NOT NULL,\n        part_name      VARCHAR(500),\n        state          DECIMAL           DEFAULT -1,\n    );*/\n    createTableSyntax(): string {\n        var dbKeys = Object.keys(this._dataBase).join(\"|\");\n        var allowedDataTypes = this.allowedDataTypes.map((item)=>{\n            var newItem = item.toUpperCase().replace(/\\s+/g, '\\\\s+');\n            return `(?:${newItem}?)?`;\n        }).join(\"\");\n\n        let info = `\n        (\n            (\\\\w+)\\\\s*\n            (?:\n                (${dbKeys})(\\\\s*)?\n                (\n                    ([(]${this.regex.onlyNumeric}[)])\n                )?\n            ) \n            (?:\n                \\\\s+${allowedDataTypes}\n            )?\n            (\n                \\\\s*(PRIMARY\\\\s+KEY)?\\\\s*\n            )?\n        )\n        `;\n        let regexCreateTableSyntax = `\n        ${this.regex.createTable}\n        [(]\n            (\\\\s*\n                (\n                    \\\\s*${info}[,]\n                )*\n                (\n                    \\\\s*${info}\n                )\n            )\n        \\\\s*[)]\\\\s*([;])\n        `.toLowerCase().replace(/\\s+/g, '').trim();\n\n        return regexCreateTableSyntax;\n    }\n \n    getDataTypeAndSize(str: Array<string>) {\n        let secondMatch = str[1];\n        let inputType, size = '';\n        let dataType = secondMatch;\n        let matchValBtwParen = secondMatch.match(new RegExp(this.regex.valueBtwParentheses));\n        let hasValueBtwParen = false;\n       \n        if (matchValBtwParen !== null) {\n            hasValueBtwParen = true;\n            dataType = secondMatch.replace(matchValBtwParen[0], '');\n        } else {\n            //(2) probably the next element -thirdMatch- must have(or not) the size of the columnName (it must be an integer or float)\n            if (str.length > 2) { //has more than 2 elements\n                let thirdMatch = str[2];\n                matchValBtwParen = thirdMatch.match(new RegExp(this.regex.valueBtwParentheses)); //get value between parentheses\n                if (matchValBtwParen !== null){ // it goes to the next index if parentheses doesn't exists\n                    hasValueBtwParen = true;\n                    this._wordIndex = 3;\n                }\n            }\n        }\n\n        if (hasValueBtwParen) {\n            let numeric = matchValBtwParen[1];\n            let onlyNumericRegex = new RegExp(`^${this.regex.onlyNumeric}$`);\n            if (!onlyNumericRegex.test(numeric)) {\n                this._errors.push(`\\`${this.table.columnName}\\`: ${numeric} is not a number!`);\n            }\n            size = numeric;\n        }\n\n        let database = this._dataBase[dataType.toUpperCase()];\n        if (typeof database !== 'undefined' && dataType !== '') {\n            inputType = database;\n        } else {\n            this._errors.push(`Check the manual for the right syntax to use near '${this.table.columnName}'`);\n        }\n        this.table.type = dataType;\n        this.html.tag = inputType;\n        this.table.size = size;\n    }\n\n    validateSyntax(words: Array<string>): void {\n        let value = '';\n        let allowed = {\n            'not': {\n                next: ['null'],\n                previous: [],\n                correct: 'not null'\n            },\n            'null': {\n                next: [],\n                previous: [],\n                correct: 'null'\n            },\n            'primary': {\n                next: ['key'],\n                previous: [],\n                correct: 'primary key'\n            },\n            'key': {\n                next: [],\n                previous: ['primary'],\n                correct: 'primary key'\n            },\n            'unique': {\n                    next: [],\n                    previous: [],\n                    correct: 'unique'\n            },\n        };\n        //'not null|null'\n        for (let i = this._wordIndex; i < words.length; i++) {\n            let currentWord = words[i].replace(/,/g, \"\");\n            let hasError = false;\n            let nextValue = '';\n            let prevValue = '';\n            if (typeof allowed[currentWord] === 'undefined') {\n                this._errors.push(`Check the manual for the right syntax to use near '${this.table.columnName}'`);\n            } else {\n                let index = i + 1;\n                if (i === words.length - 1) {\n                    index = words.length - 1;\n                }\n                let nextString = words[index];\n                let prevString = words[i - 1];\n\n                if (allowed[currentWord].next.length > 0) {\n                    if (nextString.indexOf(allowed[currentWord].next[0]) !== -1) {\n                    } else {\n                    nextValue = allowed[currentWord].next[0];\n                        hasError = true;\n                    }\n                }\n                if (allowed[currentWord].previous.length > 0) {\n                    if (prevString.indexOf(allowed[currentWord].previous[0]) !== -1) {\n                    } else {\n                    prevValue = allowed[currentWord].previous[0];\n                        hasError = true;\n                    }\n                }\n                value += `${prevValue} ${currentWord} ${nextValue}`;\n                if (hasError && value !== '') {\n                    this._errors.push(`error: \\`${currentWord}\\` maybe \\`${allowed[currentWord].correct}\\` ? at line: ${this.table.columnName}`);\n                }\n            }\n        }\n        value = value.replace(/\\s\\s+/g, ' ').trim();\n        this.table.nullable = (value.indexOf(\"not null\") !== -1) ? true : false;\n        this.table.isPrimaryKey = (value.indexOf(\"primary key\") !== -1) ? true : false;\n        this._wordIndex = 2;\n    }\n\n    convert(): void {\n        let regex = new RegExp(this.regex.createTableSyntax);\n        this._string = this._string.replace(/\\s+/g, \" \").toLowerCase();\n        console.log(this._string);\n        if(!regex.test(this._string)){\n            this._errors.push(\n                `Only allowed dot (.|,|A-Z|a-z|white space|underscore|( )`,\n                `You have an error in your SQL syntax:`\n            );\n        }\n\n        var createTable = (new RegExp(`${this.regex.createTable}([^\\\\(]*(\\\\(.*\\\\))[^\\\\)])`)).exec(this._string);\n        let defineColumns = [];\n        if(createTable){\n            this.tableName  = createTable[1];\n            defineColumns   = createTable[3].replace(/^\\((.+)\\)$/, '$1')\n            .replace(new RegExp(this.regex.valueBtwParentheses, \"g\"), (string, first) => {\n                let regex = new RegExp(this.regex.onlyNumeric, 'g');\n                if(regex.test(first)){\n                    return \"(\" +  first.replace(/,/g, '.') + \")\";\n                }\n                return string;\n            })\n            .split(\",\")\n            .reduce((previous, currentValue) => {\n                if (previous && currentValue !== '') {\n                    previous.push(\n                        currentValue.replace(/\\s+/g, \" \")\n                            .trim()\n                                .toLowerCase()\n                    );\n                }\n                return previous;\n            }, []);\n        }\n        \n        let i = 0;\n        while (i < defineColumns.length/* && this._errors.length <= 0*/) {\n            let currentDefineColumn = defineColumns[i];\n            let eachWords = currentDefineColumn.split(' '); //break the define columns into words\n\n            if (eachWords.length <= 1) {\n                //this._errors.push(`Incompleted`);\n            } else {\n                this.table.columnName = eachWords[0]; // column name\n                //the firstMatch  (stringArr[0]) will be always the column name\n                //the secondMatch (stringArr[1]) will be always the column data type\n                this.getDataTypeAndSize(eachWords);\n                this.validateSyntax(eachWords);\n                this.customInput();\n                this.customLabelName();\n                this._data.push({\n                    html: {\n                        category: 'form',\n                        tag: this.html.tag,\n                        label: this.html.label\n                    },\n                    table: {\n                        isPrimaryKey: this.table.isPrimaryKey,\n                        columnName: this.table.columnName,\n                        type: this.table.type,\n                        nullable: this.table.nullable,\n                        size: this.table.size\n                    }\n                });\n            }\n            i++;\n        }\n        //console.log(this._data)\n    }\n\n    customLabelName() {\n        let splitColumnName = this.table.columnName.split('_');\n        if (splitColumnName.length > 0) {\n            for (let i = 0; i < splitColumnName.length; i++) {\n                let currentPartialName = splitColumnName[i];\n                let value = this._customLabel[currentPartialName];\n                if (typeof value !== 'undefined')\n                    currentPartialName = value;\n\n                splitColumnName[i] = currentPartialName.charAt(0).toUpperCase() + currentPartialName.substr(1);\n            }\n            this.html.label = splitColumnName.join(' ').trim();;\n        }\n    }\n   \n    customInput() {\n        if (this.table.columnName.indexOf('ind_') !== -1)\n            this.html.tag = 'select';\n\n        if (this.html.tag === 'text' || this.html.tag === 'textarea') {\n            //this.html.tag = (parseInt(this.table.size) <= this._isTextareaWhenSizeEquals)? 'text' : 'textarea';\n            this.html.tag = (parseInt(this.table.size) <= this._isTextareaWhenSizeEquals)? 'text' : 'textarea';\n        }\n    }\n\n    getTableName(){\n        return this.tableName;\n    }\n\n    getData() {\n        return this._data;\n    }\n\n    setString(_string: string) {\n        this._string = _string;\n    }\n\n    getString(): string {\n        return this._string;\n    }\n\n    getError() {\n        return this._errors.filter((item, pos) => {\n            return this._errors.indexOf(item) == pos;\n        });\n    }\n\n    getCustomLabelName() {\n        return {\n            'dat': 'Data',\n            'qtd': 'Quantidade',\n            'cod': 'Código',\n            'dsc': 'Descrição',\n            'ind': '',\n            'usu': 'Usuário',\n            'tpo': 'Tipo',\n            'nom': 'Nome',\n            'est': 'Estado',\n            'acao': 'Ação',\n            'psv': 'Processo Seletivo',\n            'per': 'Porcentagem',\n            'abv': 'Abreviatura',\n            'obs': 'Observação',\n            'num': 'Número',\n            'usuario': 'Usuário',\n            'docto': 'Documento',\n            'doc': 'Documento',\n            'val': 'Valor',\n            'sta': 'Status',\n            'config': 'Configuração',\n            'inicio': 'Ínicio',\n            'termino': 'Término',\n            'situacao': 'Situação',\n            'nivel': 'Nível'\n        };\n    }\n\n    hasError(): boolean {\n        return this._errors.length > 0? true : false;\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\ninterface Config {\r\n    previewMode: boolean\r\n}\r\n//Enviando parametros para componentes diferentes com Subject (Tópico, Assunto) \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FormConfigService {\r\n    // Instância o objeto Subject\r\n    newFormConfigSubject = new BehaviorSubject<any>([]);\r\n\r\n    constructor() { }\r\n\r\n    setConfig(config: Config) {\r\n        console.log(config);\r\n        //Armazena o parametro que foi enviado\r\n        this.newFormConfigSubject.next(config);\r\n    }\r\n\r\n    getConfig() {\r\n        //Fica \"observando\" por atualizações nos dados\r\n        return this.newFormConfigSubject.asObservable();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormContentConfigService {\n\n    newFormConfigSubject = new Subject<any>();\n    component: {\n        [key: string]: {\n            title: string,\n            componentName: string\n        }\n    };\n\n    constructor() {\n        this.component = {\n            general: {\n                title: \"General Configuration\", componentName: 'app-config-general'\n            },\n            choices: {\n                title: \"Choices\", componentName: 'app-config-choices'\n            },\n            visibleIf: {\n                title: \"Vísivel Se\", componentName: '<hide-when-tab content=\"content\"></hide-when-tab>'\n            },\n            htmlEditor: {\n                title: \"Html Editor\", componentName: 'app-config-html-editor'\n            },\n            title: {\n                title: \"Title\", componentName: 'app-config-title'\n            },\n            table: {\n                title: \"Table\", componentName: 'app-config-table-builder'\n            },\n            img: {\n                title: \"Image\", componentName: 'app-config-img'\n            }\n        };\n    }\n\n    render() {\n        return {\n            'h1': {\n                components: [this.component.title]\n            },\n            'h2': {\n                components: [this.component.title]\n            },\n            'h3': {\n                components: [this.component.title]\n            },\n            'h4': {\n                components: [this.component.title]\n            },\n            'h5': {\n                components: [this.component.title]\n            },\n            'h6': {\n                components: [this.component.title]\n            },\n            'legend': {\n                components: [this.component.title]\n            },\n            'radio': {\n                components: [this.component.general, this.component.choices]\n            },\n            'checkbox': {\n                components: [this.component.general, this.component.choices]\n            },\n            'select': {\n                components: [this.component.general, this.component.choices]\n            },\n            'textarea': {\n                components: [this.component.general]\n            },\n            'text': {\n                components: [this.component.general]\n            },\n            'number': {\n                components: [this.component.general]\n            },\n            'date': {\n                components: [this.component.general]\n            },\n            'image': {\n                components: [this.component.img]\n            },\n            'html': {\n                components: [this.component.htmlEditor]\n            },\n            'table': {\n                components: [this.component.table]\n            },\n            'file': {\n                components: [this.component.general]\n            }\n        };\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { Html, Table } from \"./../core/model\";\n\nexport class BootstrapForm{\n    table: Table;\n    html: Html;\n\n    constructor(d) { \n        this.html = new Html(d.html);\n        this.table = new Table(d.table);\n    }\n    \n    get() {\n        var data = {\n            \"html\": [`${this.html.data}`],\n            \"legend\": [`<legend>${this.html.text}</legend>`],\n            \"h1\": [`<h1>${this.html.text}</h1>`],\n            \"h2\": [`<h2>${this.html.text}</h2>`],\n            \"h3\": [`<h3>${this.html.text}</h3>`],\n            \"h4\": [`<h4>${this.html.text}</h4>`],\n            \"h5\": [`<h5>${this.html.text}</h5>`],\n            \"h6\": [`<h6>${this.html.text}</h6>`],\n            \"table\": \n            [`<table class=\"table\">`,\n                `${this.html.fields? this.html.fields.map((field, key) => (`<tr>${Object.keys(this.html.fields[0]).map((f, k) => `<td>${field[f]}</td>`).join('')}</tr>`)).join('') : []}`,\n            `</table>`],\n            \"image\": [`<img src=\"${this.html.src}\" class=\"img-fluid\">`],\n            \"textarea\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"txt_${this.table.columnName}\">${this.html.label}</label>`,\n                `<textarea class=\"form-control\" name=\"${this.table.columnName}\" id=\"txt_${this.table.columnName}\"  ${this.table.nullable ? `` : `required`}></textarea>`,\n            `</div>`],\n            \"select\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<select class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" ${this.table.nullable ? `` : `required`}>`,\n                    `<option value=\"\">Selecione</option>`,\n                    `${this.html.choices.map(element => `<option value=\"${element.value}\">${element.text}</option>`).join('')}`,\n                `</select>`,\n            `</div>`],\n            \"checkbox\":\n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.choices.map(element => `<div class=\"checkbox\"><label><input type=\"checkbox\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"radio\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.choices.map(element => `<div class=\"radio\"><label><input type=\"radio\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"text\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<input type=\"text\" class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" value=\"\"  ${this.table.nullable ? `` : `required`}>`,\n            `</div>`],\n            \"number\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<input type=\"number\" class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" value=\"\" ${this.table.nullable ? `` : `required`}>`,\n            `</div>`],\n            \"date\":\n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `<input type=\"date\" class=\"form-control\" name=\"${this.table.columnName}\" id=\"i_${this.table.columnName}\" value=\"\" ${this.table.nullable ? `` : `required`}>`,\n            `</div>`]\n        }\n        return typeof data[this.html.tag] !== 'undefined'? data[this.html.tag].join(\"\\n\") : '';\n    }    \n}\n\nexport class CustomForm{\n    table: Table;\n    html: Html;\n\n    constructor(d) { \n        this.html = new Html(d.html);\n        this.table = new Table(d.table);\n    }\n    \n    get() {\n        var data = {\n            \"html\": [`${this.html.data}`],\n            \"legend\": [`<legend>${this.html.text}</legend>`],\n            \"h1\": [`<h1>${this.html.text}</h1>`],\n            \"h2\": [`<h2>${this.html.text}</h2>`],\n            \"h3\": [`<h3>${this.html.text}</h3>`],\n            \"h4\": [`<h4>${this.html.text}</h4>`],\n            \"h5\": [`<h5>${this.html.text}</h5>`],\n            \"h6\": [`<h6>${this.html.text}</h6>`],\n            \"table\": \n            [`<table class=\"table\">`,\n                `${this.html.fields? this.html.fields.map((field, key) => (`<tr>${Object.keys(this.html.fields[0]).map((f, k) => `<td>${field[f]}</td>`).join('')}</tr>`)).join('') : []}`,\n            `</table>`],\n            \"image\": [`<img src=\"${this.html.src}\" class=\"img-fluid\">`],\n            \"textarea\": \n            [`{!! $HTML::textArea(${this.html.grid}, '${this.table.columnName}', ${parseInt(this.table.size) > 0? `${this.table.size}` : `''`}, \"${this.html.label}\", ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`],\n            \"select\": \n            [`{!! $HTML::selectDominio(${this.html.grid}, '${this.table.columnName}', '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}' ) !!}`],\n            \"checkbox\":\n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.choices.map(element => `<div class=\"checkbox\"><label><input type=\"checkbox\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"radio\": \n            [`<div class=\"form-group\" id=\"div_${this.table.columnName}\">`,\n                `<label for=\"i_${this.table.columnName}\">${this.html.label}</label>`,\n                `${this.html.choices.map(element => `<div class=\"radio\"><label><input type=\"radio\" name=\"${this.table.columnName}\" value=\"${element.value}\"> ${element.text}</label></div>`).join('')}`,\n            `</div>`],\n            \"text\": \n            [`{!! $HTML::inputTexto(${this.html.grid}, '${this.table.columnName}', ${parseInt(this.table.size) > 0? `${this.table.size}` : `''`}, '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`],\n            \"number\": \n            [`{!! $HTML::inputNumero(${this.html.grid}, '${this.table.size? (this.table.size.indexOf('.') != -1? `decimal`: `inteiro`) : '' }', '${this.table.columnName}', ${parseInt(this.table.size) > 0? `${this.table.size}` : `''`}, '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`],\n            \"date\": \n            [`{!! $HTML::inputData(${this.html.grid}, '${this.table.columnName}', '${this.html.label}', ${this.table.nullable? `true` : `false`}, true, true, '', '${this.table.columnName}') !!}`]\n        }\n        return typeof data[this.html.tag] !== 'undefined'? data[this.html.tag].join(\"\\n\") : '';\n    }    \n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RenderHtmlService {\n    fields?: any[];\n\n    bootstrapForm: BootstrapForm;\n    customForm: CustomForm;\n\n    constructor() {}\n\n    setParams(d) {\n        this.bootstrapForm = new BootstrapForm(d);\n        this.customForm = new CustomForm(d);\n    }\n\n    get() {\n        return {\n            html: this.bootstrapForm.get(),\n            code: this.customForm.get()\n        }\n    }\n}\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n@Directive({\n\tselector: '[sumBeEqualsTo]',\n\tproviders: [{\n\t\tprovide: NG_VALIDATORS,\n\t\tuseExisting: SumBeEqualsToDirective,\n\t\tmulti: true\n\t}]\n})\nexport class SumBeEqualsToDirective {\n@Input() sumBeEqualsTo;\n\nconstructor() { }\n\n\tvalidate(control: AbstractControl): ValidationErrors | null {\n\t\tif (typeof control.value != 'undefined' && control.value != null) {\n\t\t\tlet lines = control.value.trim().split(\"\\n\");\n\t\t\t\n\t\t\tfor(let i = 0; i < lines.length; i++){\n\t\t\t\tlet sum = 0;\n\t\t\t\tlet line = lines[i].replace(/\\s+/g, ' ').trim();\n\t\t\t\tif(line != ''){\n\t\t\t\t\tlet currentValueArr = line.split(' ');\n\t\t\t\t\tif (currentValueArr.length > 0) {\n\t\t\t\t\t\tfor (var j = 0; j < currentValueArr.length; j++) {\n\t\t\t\t\t\t\tif(currentValueArr[j].trim() != ''){\n\t\t\t\t\t\t\t\tlet num = parseInt(currentValueArr[j]);\n\t\t\t\t\t\t\t\tsum += num;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(parseInt(this.sumBeEqualsTo) != sum){\n\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\t'isSumInvalid': true, \n\t\t\t\t\t\t\t\t'sumBeEqualsTo': this.sumBeEqualsTo \n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} \n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}\n}\n","export enum DBOperation {  \n    create = 1,  \n    update = 2\n }  ","import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  template: `\n<div class=\"modal fade\" [ngClass]=\"{ 'show': isOpen }\" [style.display]=\"isOpen ? 'block' : 'none'\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" (click)=\"onNo()\">&times;</button>\n            </div>\n            <div class=\"modal-body\">\n                {{ message }}\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-danger\" (click)=\"onNo()\">No</button>\n                <button class=\"btn btn-primary\" (click)=\"onYes()\">Yes</button>\n            </div>\n        </div>\n    </div>\n</div>\n`\n})\nexport class ModalComponent implements OnInit {\n    @Input() isOpen = false;\n    @Input() message: ''\n    @Output() handleYes = new EventEmitter();\n    @Output() handleNo = new EventEmitter();\n\n    ngOnInit() {}\n\n    closeModal(){\n        this.isOpen = false;\n    }\n\n    onNo = () => {\n        this.handleNo.emit();\n    }\n\n    onYes = () => {\n        this.handleYes.emit();\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'groupBy'\n})\nexport class GroupByPipe implements PipeTransform {\n\n    transform(collection: any, property: string): any {\n        const newCollection = collection.reduce((previous, currentValue) => {\n            let c = this.resolve(property, currentValue);\n\n            if (previous[c]) {\n                previous[c].push(currentValue)\n            } else {\n                previous[c] = [currentValue];\n            }\n            return previous;\n        }, {});\n\n        return Object.keys(newCollection).map((key) => {\n            return {\n                key: key,\n                value: newCollection[key]\n            }\n        });\n    }\n    resolve(path, obj = self, separator = '.') {\n        var properties = Array.isArray(path) ? path : path.split(separator)\n        return properties.reduce((prev, curr) => prev && prev[curr], obj)\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'snakeCaseToCamelCase'\n})\nexport class SnakeCaseToCamelCasePipe implements PipeTransform {\n\n\ttransform(value: any, args?: any): any {\n        if(typeof value != 'undefined'){\n            if(value.trim() != ''){\n                let newString = value.replace(/_(\\w)/g, function(m){\n                    return m.toUpperCase();\n                }).replace(/_/g, \"\");\n\n                return (newString.charAt(0).toUpperCase() + newString.slice(1)).trim();\n            }\n        }\n\n        return '';\t\t\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { RegisterResponse } from '../interface/register-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ColumnService {\n    API_URL: string = 'http://127.0.0.1:8000/api/columns';\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json'\n        })\n    };\n    \n    constructor(private http: HttpClient) {\n    }\n \n    updateColumn(id: number, data: any){\n        return this.http.put<RegisterResponse>(`${this.API_URL}/${id}`, data, this.httpOptions);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { RegisterResponse } from '../interface/register-response';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ContentChoiceItemService {\n    API_URL: string = 'http://127.0.0.1:8000/api/contents_choices_items';\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json'\n        })\n\t};\n\t\n  \tconstructor(private http: HttpClient) { }\n\n  \tstoreContentChoiceItem(contentChoiceItem) {\n\t\treturn this.http.post<RegisterResponse>(`${this.API_URL}`, contentChoiceItem, this.httpOptions);\n\t}\n\n\tupdateContentChoiceItem(id: number, contentChoiceItem: any){\n\t\treturn this.http.put<RegisterResponse>(`${this.API_URL}/${id}`, contentChoiceItem, this.httpOptions);\n\t}\n\n\tdeleteContentChoiceItem(id: number) {\n\t\treturn this.http.delete<RegisterResponse>(`${this.API_URL}/${id}`);\n\t}\t\n\n\tgetContentChoiceItemById(id: number){\n\t\treturn this.http.get<RegisterResponse>(`${this.API_URL}/${id}`);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { RegisterResponse } from '../interface/register-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentService {\n    API_URL: string = 'http://127.0.0.1:8000/api/contents';\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json'\n        })\n    };\n    \n    constructor(private http: HttpClient) {\n    }\n    \n    showContent(id: number){\n        return this.http.get<RegisterResponse>(`${this.API_URL}/${id}`);\n    }\n\n    storeContent(data: any){\n        return this.http.post<RegisterResponse>(`${this.API_URL}`, data, this.httpOptions);\n    }\n\n    updateContent(content: any){\n        return this.http.put<RegisterResponse>(`${this.API_URL}/${content.id}`, content, this.httpOptions);\n    }\n\n\tdeleteContent(id: number) {\n        return this.http.delete<RegisterResponse>(`${this.API_URL}/${id}`);\n    }\t\n\n    getContentChoicesById(id: number) {\n        return this.http.get<RegisterResponse>(`${this.API_URL}_choices/${id}`);\n    }\n    \n    updateContentChoicesPosition(id: number, contentChoices: any){\n        return this.http.put<RegisterResponse>(`${this.API_URL}_choices/${id}/updatePosition`, contentChoices, this.httpOptions);\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class DatabaseEngine {\n\tpublic static type: string = 'ORACLE'; //Oracle as Default\n\t/*\n\tkey = data_type. ex: type CHAR\n\tvalue = input type of html. ex. <input type=\"text\" />\n\t| key         | type\n\t| CHAR        | <input type=\"text\" />\n\t| NUMBER      | <input type=\"number\" />\n\t| TIMESTAMP   | <input type=\"text\" class=\"datepicker\"/> //from datepicker plugin\n\t| VARCHAR2    | <textarea></textarea>\n\t*/\t\n\tpublic static engines = {\n\t\tORACLE:{\n\t\t\tlogo: 'https://www.oracle.com/webfolder/s/brand/assets/i/specimens/identity/logo/badge-color-print.gif',\n\t\t\ttypes: {\n\t\t\t\tCHAR: 'text',\n\t\t\t\tNCHAR: 'text',\n\t\t\t\tVARCHAR2: 'textarea',\n\t\t\t\tVARCHAR: 'textarea',\n\t\t\t\tNVARCHAR2: 'textarea',\n\t\t\t\tINTEGER: 'number',\n\t\t\t\t/*CLOB : true,\n\t\t\t\tNCLOB : true,*/\n\t\t\t\tLONG: 'number',\n\t\t\t\tNUMBER: 'number',\n\t\t\t\tDATE: 'date',\n\t\t\t\tINTERVAL: 'text',\n\t\t\t\tTIMESTAMP: 'date'\n\t\t\t}\n\t\t},\n\t\tMYSQL: {\n\t\t\tlogo: 'https://www.mysql.com/common/logos/logo-mysql-170x115.png',\n\t\t\ttypes: {\n\t\t\t\t//integer\n\t\t\t\tINT: 'TEXT',\n\t\t\t\tSMALLINT: 'TEXT',\n\t\t\t\tTINYINT: 'TEXT',\n\t\t\t\tMEDIUMINT: 'TEXT',\n\t\t\t\tBIGINT: 'TEXT',\n\t\t\t\t//real\n\t\t\t\tFLOAT: 'NUMBER',\n\t\t\t\tDOUBLE: 'NUMBER',\n\t\t\t\tDECIMAL: 'NUMBER',\n\t\t\t\t//text\n\t\t\t\tCHAR: 'TEXT',\n\t\t\t\tVARCHAR: 'TEXT',\n\t\t\t\tTEXT: 'TEXT',\n\t\t\t\tMEDIUMTEXT: 'TEXT',\n\t\t\t\tLONGTEXT: 'TEXT',\n\t\t\t\t//binary\n\t\t\t\tBINARY: 'TEXT',\n\t\t\t\t//temporal\n\t\t\t\tDATE: 'TEXT',\n\t\t\t\tTIME: 'TEXT',\n\t\t\t\tDATETIME: 'TEXT',\n\t\t\t\tTIMESTAMP: 'TEXT'\n\t\t\t}\n\t\t}\n\t};\n\n\tpublic static getDatabaseEngines() {\n\t\treturn Object.keys(this.engines).map(\n\t\t\titem => { \n\t\t\t\treturn {\n\t\t\t\t\tengine: item.toLowerCase(), \n\t\t\t\t\tlogo: this.engines[item].logo\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t//Default is \"ORACLE\"\n   \tpublic static get(dbName: string = \"ORACLE\") { \n\t\tlet engineExists = Object.keys(this.engines).find((item) => {\n\t\t\treturn item == dbName;\n\t\t});\n\t\t\n\t\tif(engineExists){\n\t\t\tvar t = {};\n\t\t\tfor(let key in this.engines[dbName].types){\n\t\t\t\tif(this.engines[dbName].types.hasOwnProperty(key)){\n\t\t\t\t\tt[key] = this.engines[dbName].types[key].toLowerCase();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\n\t\t}\n\t\treturn {};\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HomeService {\n    API_URL: string = 'http://127.0.0.1:8000/api';\n\n    constructor(private http: HttpClient) {\n    }\n \n    public getHome(){\n      \treturn this.http.get(`${this.API_URL}/pages`);\n\t}\n\t\n\tgetHomeStatic() {\n        return [\n\t\t\t{\n\t\t\t\t\"rows\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"grid\": \"12\",\n\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"contents\": [\n\t\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\"html\": {\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Type your Text\",\n\t\t\t\t\t\t\t\t\t\t\t\"category\": \"headings\",\n\t\t\t\t\t\t\t\t\t\t\t\"tag\": \"h1\",\n\t\t\t\t\t\t\t\t\t\t\t\"text\": \"Salt.\",\n\t\t\t\t\t\t\t\t\t\t\t\"class\": \"text-center\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"table\": {}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"html\": {\n\t\t\t\t\t\t\t\t\t\t\t\"category\": \"headings\",\n\t\t\t\t\t\t\t\t\t\t\t\"tag\": \"h6\",\n\t\t\t\t\t\t\t\t\t\t\t\"text\": \"A tool for lazy Developers.\",\n\t\t\t\t\t\t\t\t\t\t\t\"class\": \"text-center\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"table\": {}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"grid\": \"12\",\n\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"contents\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"html\": {\n\t\t\t\t\t\t\t\t\t\t\t\"tag\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\"category\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\"data\": \"<h1 class=\\\"p-3 mb-3 bg-danger text-white text-center\\\">A simple drag & drop Bootstrap Form Builder </h1>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"table\": {}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"grid\": \"3 9\",\n\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"contents\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"html\": {\n\t\t\t\t\t\t\t\t\t\t\t\"tag\": \"image\",\n\t\t\t\t\t\t\t\t\t\t\t\"category\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\"src\": \"http://i.imgur.com/AVqsATi.gif\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"table\": {}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"contents\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"html\": {\n\t\t\t\t\t\t\t\t\t\t\t\"tag\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\"category\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\"data\": \"<p class=\\\"f3\\\">This project was made with Angular 6.1.2.</p>\\n<p>It's been in development since December 2017 and is <strong>currently being developed.</strong></p>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"table\": {}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"grid\": \"8 4\",\n\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"contents\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"html\": {\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Type your Text\",\n\t\t\t\t\t\t\t\t\t\t\t\"category\": \"headings\",\n\t\t\t\t\t\t\t\t\t\t\t\"tag\": \"h1\",\n\t\t\t\t\t\t\t\t\t\t\t\"text\": \"Features\",\n\t\t\t\t\t\t\t\t\t\t\t\"class\": \"text-center\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"table\": {}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"contents\": []\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"grid\": \"12\",\n\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"contents\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"html\": {\n\t\t\t\t\t\t\t\t\t\t\t\"tag\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\"category\": \"html\",\n\t\t\t\t\t\t\t\t\t\t\t\"data\": \"<a href=\\\"http://wiki.languagetool.org/public-http-api\\\" target=\\\"_blank\\\">API RESTful - Language Tool (LanguageTool Style and Grammar Checker)</a> http://wiki.languagetool.org/public-http-api\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"table\": {}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"name\": \"Salt - A tool for Lazy Developer\"\n\t\t\t}\n\t\t];\n    }\t\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RegisterResponse } from '../interface/register-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HtmlElementService {\n    category: string;\n    API_URL: string = 'http://127.0.0.1:8000/api/tools';\n\n\n    constructor(private http: HttpClient) {\n        this.category = 'form';\n    }\n\n    getTags() {\n        const tags = this.getStatic().reduce((previous, current) => {\n            if (current.html.category) {\n                if (current.html.category === this.category) {\n                    previous[current.html.tag] = null;\n                }\n            }\n            return previous;\n        }, {});\n        return Object.keys(tags);\n    }\n    \n    getTools(){\n        return this.http.get<RegisterResponse>(`${this.API_URL}`);\n    }\n\n    getStaticTools(){\n        //return this.http.get<RegisterResponse>(`${this.API_URL}`);\n        return [{\"html\":{\"content_html_id\":3,\"content_html_tag_id\":3,\"category_id\":1,\"tag\":\"number\",\"category\":\"form\",\"label\":\"Number\",\"text\":\"\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":4,\"content_html_tag_id\":4,\"category_id\":1,\"tag\":\"date\",\"category\":\"form\",\"label\":\"Type your Text\",\"text\":\"\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":5,\"content_html_tag_id\":5,\"category_id\":1,\"tag\":\"text\",\"category\":\"form\",\"label\":\"Type your Text\",\"text\":\"\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":6,\"content_html_tag_id\":6,\"category_id\":1,\"tag\":\"textarea\",\"category\":\"form\",\"label\":\"Type your Text\",\"text\":\"\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":7,\"content_html_tag_id\":7,\"category_id\":1,\"tag\":\"file\",\"category\":\"form\",\"label\":\"Type your Text\",\"text\":\"\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":9,\"content_html_tag_id\":9,\"category_id\":2,\"tag\":\"html\",\"category\":\"html\",\"label\":\"Type your Text\",\"text\":\"\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":10,\"content_html_tag_id\":10,\"category_id\":2,\"tag\":\"image\",\"category\":\"html\",\"label\":\"Type your Text\",\"text\":\"\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":11,\"content_html_tag_id\":11,\"category_id\":3,\"tag\":\"h1\",\"category\":\"headings\",\"label\":\"\",\"text\":\"Type your Text\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":12,\"content_html_tag_id\":12,\"category_id\":3,\"tag\":\"h2\",\"category\":\"headings\",\"label\":\"\",\"text\":\"Type your Text\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":13,\"content_html_tag_id\":13,\"category_id\":3,\"tag\":\"h3\",\"category\":\"headings\",\"label\":\"\",\"text\":\"Type your Text\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":14,\"content_html_tag_id\":14,\"category_id\":3,\"tag\":\"h4\",\"category\":\"headings\",\"label\":\"\",\"text\":\"Type your Text\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":15,\"content_html_tag_id\":15,\"category_id\":3,\"tag\":\"h5\",\"category\":\"headings\",\"label\":\"\",\"text\":\"Type your Text\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":16,\"content_html_tag_id\":16,\"category_id\":3,\"tag\":\"h6\",\"category\":\"headings\",\"label\":\"\",\"text\":\"Type your Text\",\"src\":null,\"choices\":[]}},{\"html\":{\"content_html_id\":17,\"content_html_tag_id\":17,\"category_id\":4,\"tag\":\"legend\",\"category\":\"formatting\",\"label\":\"\",\"text\":\"Type your Text\",\"src\":null,\"choices\":[]}}];\n    }\n    \n    getStaticOptionChoices(){\n        return [{\"html\":{\"content_choice_id\":91,\"content_html_tag_id\":2,\"category\":\"form\",\"tag\":\"radio\",\"group\":\"Discordo Totalmente|NA (Não Aplicável)|Não Concordo|Nem Discordo|Concordo|Concordo Totalmente\",\"label\":\"Type your Text\",\"choices\":[{\"id\":190,\"content_choice_id\":91,\"text\":\"Discordo Totalmente\",\"value\":\"1\",\"position\":0,\"created_at\":\"2019-04-25 14:18:07\",\"updated_at\":\"2019-05-02 19:43:28\"},{\"id\":195,\"content_choice_id\":91,\"text\":\"NA (Não Aplicável)\",\"value\":\"0\",\"position\":1,\"created_at\":\"2019-04-25 14:19:08\",\"updated_at\":\"2019-05-06 15:34:57\"},{\"id\":191,\"content_choice_id\":91,\"text\":\"Não Concordo\",\"value\":\"2\",\"position\":2,\"created_at\":\"2019-04-25 14:18:23\",\"updated_at\":\"2019-05-06 15:34:57\"},{\"id\":192,\"content_choice_id\":91,\"text\":\"Nem Discordo\",\"value\":\"3\",\"position\":3,\"created_at\":\"2019-04-25 14:18:41\",\"updated_at\":\"2019-05-06 15:34:57\"},{\"id\":193,\"content_choice_id\":91,\"text\":\"Concordo\",\"value\":\"4\",\"position\":4,\"created_at\":\"2019-04-25 14:18:49\",\"updated_at\":\"2019-05-06 15:34:57\"},{\"id\":194,\"content_choice_id\":91,\"text\":\"Concordo Totalmente\",\"value\":\"5\",\"position\":5,\"created_at\":\"2019-04-25 14:18:58\",\"updated_at\":\"2019-05-06 15:34:57\"}]}},{\"html\":{\"content_choice_id\":92,\"content_html_tag_id\":2,\"category\":\"form\",\"tag\":\"radio\",\"group\":\"56645645654|papagaio|rterter\",\"label\":\"Type your Text\",\"choices\":[{\"id\":196,\"content_choice_id\":92,\"text\":\"56645645654\",\"value\":\"657657567565\",\"position\":0,\"created_at\":\"2019-04-25 19:54:51\",\"updated_at\":\"2019-05-02 19:23:31\"},{\"id\":201,\"content_choice_id\":92,\"text\":\"papagaio\",\"value\":\"papagaio\",\"position\":1,\"created_at\":\"2019-04-30 11:49:05\",\"updated_at\":\"2019-05-02 19:23:31\"},{\"id\":197,\"content_choice_id\":92,\"text\":\"rterter\",\"value\":\"tertertert\",\"position\":2,\"created_at\":\"2019-04-25 19:55:13\",\"updated_at\":\"2019-05-02 19:23:14\"}]}},{\"html\":{\"content_choice_id\":93,\"content_html_tag_id\":2,\"category\":\"form\",\"tag\":\"radio\",\"group\":\"7687768|hadoken|123221\",\"label\":\"Type your Text\",\"choices\":[{\"id\":225,\"content_choice_id\":93,\"text\":\"7687768\",\"value\":\"78768768768768768678678678\",\"position\":null,\"created_at\":\"2019-05-02 20:25:35\",\"updated_at\":\"2019-05-02 20:25:35\"},{\"id\":224,\"content_choice_id\":93,\"text\":\"hadoken\",\"value\":\"123213213123123\",\"position\":0,\"created_at\":\"2019-05-02 20:25:25\",\"updated_at\":\"2019-05-02 20:25:42\"},{\"id\":223,\"content_choice_id\":93,\"text\":\"123221\",\"value\":\"123123123123123\",\"position\":1,\"created_at\":\"2019-05-02 20:25:21\",\"updated_at\":\"2019-05-02 20:25:29\"}]}},{\"html\":{\"content_choice_id\":94,\"content_html_tag_id\":2,\"category\":\"form\",\"tag\":\"radio\",\"group\":\"teste|Hadouken|Shoryuken\",\"label\":\"Type your Text\",\"choices\":[{\"id\":202,\"content_choice_id\":94,\"text\":\"teste\",\"value\":\"teste\",\"position\":null,\"created_at\":\"2019-05-02 19:22:02\",\"updated_at\":\"2019-05-02 19:22:02\"},{\"id\":203,\"content_choice_id\":94,\"text\":\"Hadouken\",\"value\":\"Hadouken\",\"position\":null,\"created_at\":\"2019-05-02 19:22:19\",\"updated_at\":\"2019-05-02 19:22:19\"},{\"id\":204,\"content_choice_id\":94,\"text\":\"Shoryuken\",\"value\":\"Shoryuken\",\"position\":null,\"created_at\":\"2019-05-02 19:22:31\",\"updated_at\":\"2019-05-02 19:22:31\"}]}},{\"html\":{\"content_choice_id\":95,\"content_html_tag_id\":2,\"category\":\"form\",\"tag\":\"radio\",\"group\":\"Les Claypool|Flea|Geddy Lee|Chris Squire\",\"label\":\"Type your Text\",\"choices\":[{\"id\":205,\"content_choice_id\":95,\"text\":\"Les Claypool\",\"value\":\"Les Claypool\",\"position\":null,\"created_at\":\"2019-05-02 19:52:15\",\"updated_at\":\"2019-05-02 19:52:15\"},{\"id\":206,\"content_choice_id\":95,\"text\":\"Flea\",\"value\":\"Flea\",\"position\":null,\"created_at\":\"2019-05-02 19:52:21\",\"updated_at\":\"2019-05-02 19:52:21\"},{\"id\":207,\"content_choice_id\":95,\"text\":\"Geddy Lee\",\"value\":\"Geddy Lee\",\"position\":null,\"created_at\":\"2019-05-02 19:52:30\",\"updated_at\":\"2019-05-02 19:52:30\"},{\"id\":208,\"content_choice_id\":95,\"text\":\"Chris Squire\",\"value\":\"Chris Squire\",\"position\":null,\"created_at\":\"2019-05-02 19:52:41\",\"updated_at\":\"2019-05-02 19:52:41\"}]}}];\n    }\n\n    getStaticTags() {\n        const tags = this.getStatic().reduce((previous, current) => {\n            if (current.html.category) {\n                if (current.html.category === this.category) {\n                    previous[current.html.tag] = null;\n                }\n            }\n            return previous;\n        }, {});\n        return Object.keys(tags);\n    }\n\n    getStatic(){\n        return [{\"html\":{\"content_html_tag_id\":1,\"tag\":\"select\",\"category\":\"form\",\"content_choice_id\":1,\"label\":\"Type your Text23\",\"text\":\"\",\"elements\":[{\"id\":1,\"text\":\"Radio 1\",\"value\":\"Radio 1\"},{\"id\":2,\"text\":\"Radio 2\",\"value\":\"Radio 2\"},{\"id\":3,\"text\":\"Radio 3\",\"value\":\"Radio 3\"}]}},{\"html\":{\"content_html_tag_id\":2,\"tag\":\"radio\",\"category\":\"form\",\"content_choice_id\":1,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[{\"id\":1,\"text\":\"Radio 1\",\"value\":\"Radio 1\"},{\"id\":2,\"text\":\"Radio 2\",\"value\":\"Radio 2\"},{\"id\":3,\"text\":\"Radio 3\",\"value\":\"Radio 3\"}]}},{\"html\":{\"content_html_tag_id\":3,\"tag\":\"number\",\"category\":\"form\",\"content_choice_id\":null,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":4,\"tag\":\"date\",\"category\":\"form\",\"content_choice_id\":null,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":5,\"tag\":\"text\",\"category\":\"form\",\"content_choice_id\":null,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":6,\"tag\":\"textarea\",\"category\":\"form\",\"content_choice_id\":null,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":7,\"tag\":\"file\",\"category\":\"form\",\"content_choice_id\":null,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":8,\"tag\":\"checkbox\",\"category\":\"form\",\"content_choice_id\":1,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[{\"id\":1,\"text\":\"Radio 1\",\"value\":\"Radio 1\"},{\"id\":2,\"text\":\"Radio 2\",\"value\":\"Radio 2\"},{\"id\":3,\"text\":\"Radio 3\",\"value\":\"Radio 3\"}]}},{\"html\":{\"content_html_tag_id\":9,\"tag\":\"html\",\"category\":\"html\",\"content_choice_id\":null,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":10,\"tag\":\"image\",\"category\":\"html\",\"content_choice_id\":null,\"label\":\"Type your Text\",\"text\":\"\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":11,\"tag\":\"h1\",\"category\":\"headings\",\"content_choice_id\":null,\"label\":\"\",\"text\":\"Type your Text\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":12,\"tag\":\"h2\",\"category\":\"headings\",\"content_choice_id\":null,\"label\":\"\",\"text\":\"Type your Text\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":13,\"tag\":\"h3\",\"category\":\"headings\",\"content_choice_id\":null,\"label\":\"\",\"text\":\"Type your Text\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":14,\"tag\":\"h4\",\"category\":\"headings\",\"content_choice_id\":null,\"label\":\"\",\"text\":\"Type your Text\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":15,\"tag\":\"h5\",\"category\":\"headings\",\"content_choice_id\":null,\"label\":\"\",\"text\":\"Type your Text\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":16,\"tag\":\"h6\",\"category\":\"headings\",\"content_choice_id\":null,\"label\":\"\",\"text\":\"Type your Text\",\"elements\":[]}},{\"html\":{\"content_html_tag_id\":17,\"tag\":\"legend\",\"category\":\"formatting\",\"content_choice_id\":null,\"label\":\"\",\"text\":\"Type your Text\",\"elements\":[]}}];\n    }\n\n    get2() {\n        return [{\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'select',\n                elements: [{\n                    value: 'Select 1',\n                    text: 'Select 1'\n                }, {\n                    value: 'Select 2',\n                    text: 'Select 2'\n                }, {\n                    value: 'Select 3',\n                    text: 'Select 3'\n                }]\n            },\n            table: {}\n        }, {\n            html: {\n                tag: 'html',\n                category: 'html',\n                data: '<h1>HTML</h1>'\n            },\n            table: {}\n        }, {\n            html: {\n                tag: 'image',\n                category: 'html',\n                src: 'http://i.imgur.com/AVqsATi.gif'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'text'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'radio',\n                elements: [{\n                    value: 'Radio 1',\n                    text: 'Radio 1'\n                }, {\n                    value: 'Radio 2',\n                    text: 'Radio 2'\n                }, {\n                    value: 'Radio 3',\n                    text: 'Radio 3'\n                }]\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'textarea'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'number'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Choose file',\n                category: 'form',\n                tag: 'file'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'date'\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'form',\n                tag: 'checkbox',\n                elements: [{\n                    value: 'Checkbox 1',\n                    text: 'Checkbox 1'\n                }, {\n                    value: 'Checkbox 2',\n                    text: 'Checkbox 2'\n                }, {\n                    value: 'Checkbox 3',\n                    text: 'Checkbox 3'\n                }]\n            },\n            table: {}\n        }, {\n            html: {\n                label: 'Type your Text',\n                category: 'headings',\n                tag: 'h1',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h2',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h3',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h4',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h5',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'headings',\n                tag: 'h6',\n                text: 'Add Your Title',\n                class: 'text-center'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'formatting',\n                tag: 'legend',\n                text: 'Legend text'\n            },\n            table: {}\n        }, {\n            html: {\n                category: 'table',\n                tag: 'table',\n                fields: [\n                    {\n                        \"Book Name\": \"Computer Architecture\",\n                        \"Category\": \"Computers\",\n                        \"Price\": \"125.60\",\n                        \"Book ID\": \"1\"\n                    },\n                    {\n                        \"Book ID\": \"2\",\n                        \"Book Name\": \"Asp.Net 4 Blue Book\",\n                        \"Category\": \"Programming\",\n                        \"Price\": \"56.00\"\n                    },\n                    {\n                        \"Book ID\": \"3\",\n                        \"Book Name\": \"Popular Science\",\n                        \"Category\": \"Science\",\n                        \"Price\": \"210.40\"\n                    }\n                ]\n            },\n            table: {}\n        }];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { Http } from '@angular/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LanguageToolService {\n    apiUrl: string = 'https://languagetool.org/api/v2/check';\n    language: string = 'pt-br';\n\n    constructor(\n        private http: Http\n    ) { }\n\n    getCorrectWord(text: string, language?: string): Observable<any> {\n        return this.http.get(this.apiUrl, {\n            params: {\n                language: language ? language : this.language,\n                text: text\n            }\n        }).pipe(\n            map((res) => {\n                return res.json();\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { RegisterResponse } from '../interface/register-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageService {\n    API_URL: string = 'http://127.0.0.1:8000/api/pages';\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json'\n        })\n    };\n\n    constructor(private http: HttpClient) {\n    }\n \n    getPages(){\n      \treturn this.http.get<RegisterResponse>(`${this.API_URL}`);\n    }\n    \n    getPageByProjectId(projectId: number){\n        return this.http.get<RegisterResponse>(`${this.API_URL}/${projectId}/project`);\n    }\n\n    getPageById(id: number){\n        return this.http.get<RegisterResponse>(`${this.API_URL}/${id}`);\n    }    \n    \n    createPage(data: any) {\n        return this.http.post<RegisterResponse>(this.API_URL, data, this.httpOptions);\n    }\n    \n    updatePagesPosition(id: number, data: any) {\n        return this.http.put<RegisterResponse>(`${this.API_URL}/${id}/updatePosition`, data, this.httpOptions);\n    }\n    \n    deletePage(id: number){\n        return this.http.delete<RegisterResponse>(`${this.API_URL}/${id}`);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { RegisterResponse } from '../interface/register-response';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ProjectService {\n\tAPI_URL: string = 'http://127.0.0.1:8000/api/projects';\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json'\n        })\n\t};\n\n\tconstructor(private http: HttpClient) { }\n\n\tgetProjects(){\n\t\treturn this.http.get<RegisterResponse>(`${this.API_URL}`);\n\t}\n\n\tgetProjectById(id: number){\n\t\treturn this.http.get<RegisterResponse>(`${this.API_URL}/${id}`);\n\t}\n\n\tupdateProject(id:number, data){\n\t\treturn this.http.put<RegisterResponse>(`${this.API_URL}/${id}`, data, this.httpOptions);\n\t}\n\n\tstoreProject(data){\n\t\treturn this.http.post<RegisterResponse>(`${this.API_URL}`, data, this.httpOptions);\n\t}\n\n\tdeleteProject(id: number){\n\t\treturn this.http.delete<RegisterResponse>(`${this.API_URL}/${id}`);\n\t}\t\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { RegisterResponse } from '../interface/register-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RowService {\n    API_URL: string = 'http://127.0.0.1:8000/api/rows';\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json'\n        })\n    };\n\n    \n    constructor(private http: HttpClient) {\n    }\n    \n    storeRow(data: any) {\n        return this.http.post<RegisterResponse>(`${this.API_URL}`, data, this.httpOptions);\n    }\t\n\n\tupdateRow(id: number, data: any) {\n        return this.http.put<RegisterResponse>(`${this.API_URL}/${id}`, data, this.httpOptions);\n    }\t\n\n\tdeleteRow(id: number) {\n        return this.http.delete<RegisterResponse>(`${this.API_URL}/${id}`);\n    }\t\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GroupByPipe } from './pipes/group-by.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ModalComponent } from './modal.component';\n\nconst components = [\n    ModalComponent\n];\n\n@NgModule({\n\tdeclarations: [\n\t\tGroupByPipe,\n\t\tModalComponent\n\t],\n\texports: [\n\t\tGroupByPipe,\n\t\tModalComponent,\n\t\tFormsModule, \n\t\tReactiveFormsModule\n\t],\n\timports: [\n\t\tCommonModule, \n\t\tFormsModule, \n\t\tReactiveFormsModule\n\t]\n})\nexport class SharedModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"input-group input-group\\\">\\n\\t<input type=\\\"text\\\" [(ngModel)]=\\\"text\\\" (ngModelChange)=\\\"textOnChange()\\\"class=\\\"form-control\\\">\\n\\t<div class=\\\"input-group-append\\\">\\n\\t\\t<button (click)=\\\"checkSpelling()\\\" class=\\\"btn btn-outline-info btn-sm\\\" type=\\\"button\\\">\\n\\t\\t\\t<i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t</button>\\n\\t</div>\\n</div>\\n<div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n\\t<i class=\\\"fa fa-cog fa-spin fa-2x\\\"></i> Loading...\\n</div>\\n<div ng-if=\\\"!isLoading\\\">\\n\\t<div id=\\\"spell-checker\\\" class=\\\"py-3\\\"></div>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"result?.matches.length > 0\\\">\\n\\t\\t<div *ngFor=\\\"let match of result?.matches; let mK = index;\\\" class=\\\"form-group col-md-6 col-xs-12\\\">\\n\\t\\t\\t<label>{{ match.message }}</label>\\n\\t\\t\\t<select multiple class=\\\"form-control\\\" disabled>\\n\\t\\t\\t\\t<option *ngFor=\\\"let r of match.replacements; let rK = index;\\\">{{ r.value }}</option>\\n\\t\\t\\t</select>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LanguageToolService } from '../shared/services/language-tool.service';\n\n@Component({\n  selector: 'app-spell-checker',\n  templateUrl: './spell-checker.component.html',\n  styleUrls: ['./spell-checker.component.css']\n})\nexport class SpellCheckerComponent implements OnInit {\n  @Input() text;\n  @Output() textChange = new EventEmitter();\n  isLoading: boolean = false;\n  result: {\n      matches: Array<any>\n  };\n\n  constructor(\n    private languageToolService: LanguageToolService\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  public textOnChange(): void {\n      this.textChange.emit(this.text);\n  }\n\n  public checkSpelling(): void {\n    this.isLoading = true;\n      if (this.hasText()) {\n          this.text = this.langTool();\n          this.languageToolService.getCorrectWord(this.text).subscribe(\n            (data) => {\n                if (data.matches) {\n                    this.result = data;\n                    this.isLoading = false;\n                }\n          });\n          console.log(this.result);\n      }\n  }\n\n  private langTool(): string {\n      if (this.hasText()) {\n          var arrOfWords = this.text.split(' ');\n          var newText = [];\n          for (var i = 0; i < arrOfWords.length; i++) {\n              var word = arrOfWords[i].trim()\n              word = word.charAt(0).toUpperCase() + word.slice(1);\n              newText.push(word);\n          }\n          return newText.join(' ');\n      }\n      return '';\n  }\n\n  public hasText(): boolean {\n      if (this.text.length > 0) {\n          return true;\n      }\n      return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}